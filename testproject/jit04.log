<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='10012' time_ms='1604565452296'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.211-b12
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.211-b12) for windows-amd64 JRE (1.8.0_211-b12), built on Apr  1 2019 20:53:26 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit04.log -javaagent:D:\IntelliJ IDEA 2019.1.2\lib\idea_rt.jar=4477:D:\IntelliJ IDEA 2019.1.2\bin -Dfile.encoding=UTF-8 
</args>
<command>
lock.test.IplusTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.211-b12
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\jdk1.8\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\jdk1.8\jre\lib\endorsed
sun.boot.library.path=D:\jdk1.8\jre\bin
java.library.path=D:\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\secure_crt\;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\OpenVPN\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;C:\Android;C:\Windows\System32;D:\svn\bin;D:\nodejs\;D:\tortoiseGit\bin;D:\Git\cmd;C:\Users\HONOR-A\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;D:\develop-env\apache-maven-3.6.1\bin;D:\jdk1.8\bin;C:\Users\HONOR-A\AppData\Local\GitHubDesktop\bin;D:\Microsoft VS Code\bin;D:\Fiddler;D:\cmder;;C:\Users\HONOR-A\AppData\Local\Microsoft\WindowsApps;C:\Users\HONOR-A\AppData\Roaming\npm;.
java.home=D:\jdk1.8\jre
java.class.path=D:\jdk1.8\jre\lib\charsets.jar;D:\jdk1.8\jre\lib\deploy.jar;D:\jdk1.8\jre\lib\ext\access-bridge-64.jar;D:\jdk1.8\jre\lib\ext\cldrdata.jar;D:\jdk1.8\jre\lib\ext\dnsns.jar;D:\jdk1.8\jre\lib\ext\jaccess.jar;D:\jdk1.8\jre\lib\ext\jfxrt.jar;D:\jdk1.8\jre\lib\ext\localedata.jar;D:\jdk1.8\jre\lib\ext\nashorn.jar;D:\jdk1.8\jre\lib\ext\sunec.jar;D:\jdk1.8\jre\lib\ext\sunjce_provider.jar;D:\jdk1.8\jre\lib\ext\sunmscapi.jar;D:\jdk1.8\jre\lib\ext\sunpkcs11.jar;D:\jdk1.8\jre\lib\ext\zipfs.jar;D:\jdk1.8\jre\lib\javaws.jar;D:\jdk1.8\jre\lib\jce.jar;D:\jdk1.8\jre\lib\jfr.jar;D:\jdk1.8\jre\lib\jfxswt.jar;D:\jdk1.8\jre\lib\jsse.jar;D:\jdk1.8\jre\lib\management-agent.jar;D:\jdk1.8\jre\lib\plugin.jar;D:\jdk1.8\jre\lib\resources.jar;D:\jdk1.8\jre\lib\rt.jar;D:\java_project\testproject\target\classes;D:\.m2\repository\com\alibaba\druid\1.1.20\druid-1.1.20.jar;D:\.m2\repository\com\alibaba\fastjson\1.2.59\fastjson-1.2.59.jar;D:\.m2\repository\cn\hutool\hutool-all\5.1.0\hutool-all-5.1.0.jar;D:\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;D:\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;D:\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;D:\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;D:\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;D:\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;D:\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;D:\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;D:\.m2\repository\com\google\code\gson\gson\2.6.2\gson-2.6.2.jar;D:\.m2\repository\net\sf\json-lib\json-lib\0.8\json-lib-0.8.jar;D:\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;D:\.m2\repository\commons-lang\commons-lang\2.1\commons-lang-2.1.jar;D:\.m2\repository\commons-logging\commons-logging\1.1\commons-logging-1.1.jar;D:\.m2\repository\log4j\log4j\1.2.12\log4j-1.2.12.jar;D:\.m2\repo
sun.boot.class.path=D:\jdk1.8\jre\lib\resources.jar;D:\jdk1.8\jre\lib\rt.jar;D:\jdk1.8\jre\lib\sunrsasign.jar;D:\jdk1.8\jre\lib\jsse.jar;D:\jdk1.8\jre\lib\jce.jar;D:\jdk1.8\jre\lib\charsets.jar;D:\jdk1.8\jre\lib\jfr.jar;D:\jdk1.8\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=lock.test.IplusTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='7448'/>
<task_queued compile_id='1' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='9728' iicount='9728' stamp='0.222' comment='tiered' hot_count='9728'/>
<writer thread='14996'/>
<thread_logfile thread='14996' filename='C:\Users\HONOR-A\AppData\Local\Temp\\hs_c14996_pid10012.log'/>
<writer thread='5164'/>
<thread_logfile thread='5164' filename='C:\Users\HONOR-A\AppData\Local\Temp\\hs_c5164_pid10012.log'/>
<writer thread='1512'/>
<thread_logfile thread='1512' filename='C:\Users\HONOR-A\AppData\Local\Temp\\hs_c1512_pid10012.log'/>
<writer thread='14992'/>
<thread_logfile thread='14992' filename='C:\Users\HONOR-A\AppData\Local\Temp\\hs_c14992_pid10012.log'/>
<writer thread='7448'/>
<task_queued compile_id='2' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.223' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='12800' backedge_count='9493' iicount='12800' stamp='0.224' comment='tiered' hot_count='12800'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='1536' backedge_count='27539' iicount='1536' stamp='0.224' comment='tiered' hot_count='1536'/>
<task_queued compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='110848' iicount='110848' stamp='0.224' comment='tiered' hot_count='110848'/>
<task_queued compile_id='6' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='384' iicount='384' level='1' stamp='0.224' comment='tiered' hot_count='384'/>
Loaded disassembler from D:\jdk1.8\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x00000000035b4d50:
Code:
Argument 0 is unknown.RIP: 0x35b4ec0 Code size: 0x00000228
[Disassembling for mach=&apos;amd64&apos;]
[Entry Point]
  # {method} {0x00000000171796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x00000000035b4ec0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b4ec4: shl     r10,3h
  0x00000000035b4ec8: cmp     rax,r10
  0x00000000035b4ecb: je      35b4ed8h
  0x00000000035b4ed1: jmp     34f5f60h          ;   {runtime_call}
  0x00000000035b4ed6: nop
[Verified Entry Point]
  0x00000000035b4ed8: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b4edf: push    rbp
  0x00000000035b4ee0: mov     rbp,rsp
  0x00000000035b4ee3: sub     rsp,80h
  0x00000000035b4eea: mov     qword ptr [rsp+30h],rsi
  0x00000000035b4eef: mov     qword ptr [rsp+28h],rdi
  0x00000000035b4ef4: mov     qword ptr [rsp+48h],r9
  0x00000000035b4ef9: cmp     r9,0h
  0x00000000035b4efd: lea     rax,[rsp+48h]
  0x00000000035b4f02: cmove   rax,qword ptr [rsp+48h]
  0x00000000035b4f08: mov     qword ptr [rsp+20h],rax
  0x00000000035b4f0d: mov     r9,r8
  0x00000000035b4f10: mov     qword ptr [rsp+38h],rdx
  0x00000000035b4f15: cmp     rdx,0h
  0x00000000035b4f19: lea     r8,[rsp+38h]
  0x00000000035b4f1e: cmove   r8,qword ptr [rsp+38h]
  0x00000000035b4f24: mov     r14,0daf80c78h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000035b4f2e: mov     qword ptr [rsp+68h],r14
  0x00000000035b4f33: lea     r14,[rsp+68h]
  0x00000000035b4f38: mov     rdx,r14           ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000000035b4f3b: mov     r10,35b4f3bh      ;   {section_word}
  0x00000000035b4f45: mov     qword ptr [r15+1e0h],r10
  0x00000000035b4f4c: mov     qword ptr [r15+1d8h],rsp
  0x00000000035b4f53: cmp     byte ptr [750d6d4eh],0h  ;   {external_word}
  0x00000000035b4f5a: je      35b4fa2h
  0x00000000035b4f60: push    rdx
  0x00000000035b4f61: push    r8
  0x00000000035b4f63: push    r9
  0x00000000035b4f65: mov     rdx,171796b8h     ;   {metadata({method} {0x00000000171796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000035b4f6f: mov     rcx,r15
  0x00000000035b4f72: sub     rsp,20h
  0x00000000035b4f76: test    esp,0fh
  0x00000000035b4f7c: je      35b4f94h
  0x00000000035b4f82: sub     rsp,8h
  0x00000000035b4f86: call    74aedf50h         ;   {runtime_call}
  0x00000000035b4f8b: add     rsp,8h
  0x00000000035b4f8f: jmp     35b4f99h
  0x00000000035b4f94: call    74aedf50h         ;   {runtime_call}
  0x00000000035b4f99: add     rsp,20h
  0x00000000035b4f9d: pop     r9
  0x00000000035b4f9f: pop     r8
  0x00000000035b4fa1: pop     rdx
  0x00000000035b4fa2: lea     rcx,[r15+1f8h]
  0x00000000035b4fa9: mov     dword ptr [r15+270h],4h
  0x00000000035b4fb4: mov     r10,7ffa139d06fch  ;   {runtime_call}
  0x00000000035b4fbe: call indirect r10
  0x00000000035b4fc1: vzeroupper
  0x00000000035b4fc4: mov     dword ptr [r15+270h],5h
  0x00000000035b4fcf: mov     ecx,r15d
  0x00000000035b4fd2: shr     ecx,4h
  0x00000000035b4fd5: and     ecx,0ffch
  0x00000000035b4fdb: mov     r10,15d0000h      ;   {external_word}
  0x00000000035b4fe5: mov     dword ptr [r10+rcx],ecx
  0x00000000035b4fe9: cmp     dword ptr [750d7938h],0h
                                                ;   {external_word}
  0x00000000035b4ff3: jne     35b5007h
  0x00000000035b4ff9: cmp     dword ptr [r15+30h],0h
  0x00000000035b5001: je      35b5020h
  0x00000000035b5007: mov     rcx,r15
  0x00000000035b500a: mov     r12,rsp
  0x00000000035b500d: sub     rsp,20h
  0x00000000035b5011: and     rsp,0fffffffffffffff0h
  0x00000000035b5015: call    74b052a0h         ;   {runtime_call}
  0x00000000035b501a: mov     rsp,r12
  0x00000000035b501d: xor     r12,r12
  0x00000000035b5020: mov     dword ptr [r15+270h],8h
  0x00000000035b502b: cmp     dword ptr [r15+29ch],1h
  0x00000000035b5036: je      35b50c6h
  0x00000000035b503c: cmp     byte ptr [750d6d4eh],0h  ;   {external_word}
  0x00000000035b5043: je      35b5081h
  0x00000000035b5049: mov     rdx,171796b8h     ;   {metadata({method} {0x00000000171796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000035b5053: mov     rcx,r15
  0x00000000035b5056: sub     rsp,20h
  0x00000000035b505a: test    esp,0fh
  0x00000000035b5060: je      35b5078h
  0x00000000035b5066: sub     rsp,8h
  0x00000000035b506a: call    74aedf50h         ;   {runtime_call}
  0x00000000035b506f: add     rsp,8h
  0x00000000035b5073: jmp     35b507dh
  0x00000000035b5078: call    74aedf50h         ;   {runtime_call}
  0x00000000035b507d: add     rsp,20h
  0x00000000035b5081: mov     r10,0h
  0x00000000035b508b: mov     qword ptr [r15+1d8h],r10
  0x00000000035b5092: mov     r10,0h
  0x00000000035b509c: mov     qword ptr [r15+1e0h],r10
  0x00000000035b50a3: mov     rcx,qword ptr [r15+38h]
  0x00000000035b50a7: mov     dword ptr [rcx+100h],0h
  0x00000000035b50b1: leave
  0x00000000035b50b2: cmp     qword ptr [r15+8h],0h
  0x00000000035b50ba: jne     35b50c1h
  0x00000000035b50c0: ret
  0x00000000035b50c1: jmp     34b07e0h          ;   {runtime_call}
  0x00000000035b50c6: mov     r12,rsp
  0x00000000035b50c9: sub     rsp,20h
  0x00000000035b50cd: and     rsp,0fffffffffffffff0h
  0x00000000035b50d1: call    74aedf70h         ;   {runtime_call}
  0x00000000035b50d6: mov     rsp,r12
  0x00000000035b50d9: xor     r12,r12
  0x00000000035b50dc: jmp     35b503ch
  0x00000000035b50e1: hlt
  0x00000000035b50e2: hlt
  0x00000000035b50e3: hlt
  0x00000000035b50e4: hlt
  0x00000000035b50e5: hlt
  0x00000000035b50e6: hlt
  0x00000000035b50e7: hlt
<nmethod compile_id='7' compile_kind='c2n' level='0' entry='0x00000000035b4ec0' size='920' address='0x00000000035b4d50' relocation_offset='288' consts_offset='920' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='4096' iicount='4096' stamp='0.241'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b4250:
Code:
Argument 0 is unknown.RIP: 0x35b4400 Code size: 0x00000598
[Entry Point]
[Constants]
  # {method} {0x00000000171d8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x100]  (sp of caller)
  0x00000000035b4400: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b4404: shl     r10,3h
  0x00000000035b4408: cmp     r10,rax
  0x00000000035b440b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b4411: nop     dword ptr [rax+rax+0h]
  0x00000000035b4419: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035b4420: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b4427: push    rbp
  0x00000000035b4428: sub     rsp,0f0h
  0x00000000035b442f: mov     rsi,173d9130h     ;   {metadata(method data for {method} {0x00000000171d8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000035b4439: mov     edi,dword ptr [rsi+0dch]
  0x00000000035b443f: add     edi,8h
  0x00000000035b4442: mov     dword ptr [rsi+0dch],edi
  0x00000000035b4448: mov     rsi,171d8ba0h     ;   {metadata({method} {0x00000000171d8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000035b4452: and     edi,1ff8h
  0x00000000035b4458: cmp     edi,0h
  0x00000000035b445b: je      35b47f1h          ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x00000000035b4461: mov     rsi,rdx
  0x00000000035b4464: mov     rdi,173d9130h     ;   {metadata(method data for {method} {0x00000000171d8ba8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000035b446e: add     qword ptr [rdi+108h],1h
  0x00000000035b4476: mov     rsi,173623c0h     ;   {metadata(method data for {method} {0x00000000171d5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b4480: mov     edi,dword ptr [rsi+0dch]
  0x00000000035b4486: add     edi,8h
  0x00000000035b4489: mov     dword ptr [rsi+0dch],edi
  0x00000000035b448f: mov     rsi,171d5b48h     ;   {metadata({method} {0x00000000171d5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b4499: and     edi,7ffff8h
  0x00000000035b449f: cmp     edi,0h
  0x00000000035b44a2: je      35b4808h
  0x00000000035b44a8: mov     esi,dword ptr [rdx+0ch]  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b44ab: inc     esi
  0x00000000035b44ad: mov     rdi,rdx
  0x00000000035b44b0: mov     rbx,173623c0h     ;   {metadata(method data for {method} {0x00000000171d5b50} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b44ba: add     qword ptr [rbx+108h],1h
  0x00000000035b44c2: mov     rdi,173620b0h     ;   {metadata(method data for {method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b44cc: mov     ebx,dword ptr [rdi+0dch]
  0x00000000035b44d2: add     ebx,8h
  0x00000000035b44d5: mov     dword ptr [rdi+0dch],ebx
  0x00000000035b44db: mov     rdi,171d4a10h     ;   {metadata({method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b44e5: and     ebx,7ffff8h
  0x00000000035b44eb: cmp     ebx,0h
  0x00000000035b44ee: je      35b481fh
  0x00000000035b44f4: mov     edi,dword ptr [rdx+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b44f7: mov     ebx,dword ptr [rdi+0ch]  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x00000000035b4836
  0x00000000035b44fa: mov     rax,rsi
  0x00000000035b44fd: sub     eax,ebx
  0x00000000035b44ff: cmp     eax,0h
  0x00000000035b4502: mov     rax,173620b0h     ;   {metadata(method data for {method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b450c: mov     rcx,108h
  0x00000000035b4516: jle     35b4526h
  0x00000000035b451c: mov     rcx,118h
  0x00000000035b4526: mov     r9,qword ptr [rax+rcx]
  0x00000000035b452a: lea     r9,[r9+1h]
  0x00000000035b452e: mov     qword ptr [rax+rcx],r9
  0x00000000035b4532: jnle    35b4545h          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b4538: mov     dword ptr [rsp+0c4h],r8d
  0x00000000035b4540: jmp     35b47b7h          ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b4545: mov     dword ptr [rsp+0c0h],ebx
  0x00000000035b454c: mov     qword ptr [rsp+0c8h],rdi
  0x00000000035b4554: mov     dword ptr [rsp+0c4h],r8d
  0x00000000035b455c: mov     rax,rdx
  0x00000000035b455f: mov     rcx,173620b0h     ;   {metadata(method data for {method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b4569: add     qword ptr [rcx+128h],1h
  0x00000000035b4571: mov     r8,rsi
  0x00000000035b4574: mov     rsi,rdx
  0x00000000035b4577: mov     rdx,rsi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b457a: mov     qword ptr [rsp+0d0h],rsi
  0x00000000035b4582: nop
  0x00000000035b4583: nop
  0x00000000035b4584: nop
  0x00000000035b4585: nop
  0x00000000035b4586: nop
  0x00000000035b4587: call    34f61a0h          ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x00000000035b458c: mov     r8,rax            ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b458f: mov     rbx,173620b0h     ;   {metadata(method data for {method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000035b4599: add     qword ptr [rbx+138h],1h
  0x00000000035b45a1: mov     rbx,173dc7c0h     ;   {metadata(method data for {method} {0x0000000017279828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000035b45ab: mov     edx,dword ptr [rbx+0dch]
  0x00000000035b45b1: add     edx,8h
  0x00000000035b45b4: mov     dword ptr [rbx+0dch],edx
  0x00000000035b45ba: mov     rbx,17279820h     ;   {metadata({method} {0x0000000017279828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000035b45c4: and     edx,7ffff8h
  0x00000000035b45ca: cmp     edx,0h
  0x00000000035b45cd: je      35b483bh
  0x00000000035b45d3: mov     rbx,r8
  0x00000000035b45d6: mov     rdx,100000208h    ;   {metadata({type array char})}
  0x00000000035b45e0: movsxd  rbx,ebx
  0x00000000035b45e3: mov     rdi,rbx
  0x00000000035b45e6: cmp     rbx,0ffffffh
  0x00000000035b45ed: jnbe    35b4852h
  0x00000000035b45f3: mov     rsi,17h
  0x00000000035b45fd: lea     rsi,[rsi+rbx*2]
  0x00000000035b4601: and     rsi,0fffffffffffffff8h
  0x00000000035b4605: mov     rax,qword ptr [r15+60h]
  0x00000000035b4609: lea     rsi,[rax+rsi]
  0x00000000035b460d: cmp     rsi,qword ptr [r15+70h]
  0x00000000035b4611: jnbe    35b4852h
  0x00000000035b4617: mov     qword ptr [r15+60h],rsi
  0x00000000035b461b: sub     rsi,rax
  0x00000000035b461e: mov     qword ptr [rax],1h
  0x00000000035b4625: mov     rcx,rdx
  0x00000000035b4628: shr     rcx,3h
  0x00000000035b462c: mov     dword ptr [rax+8h],ecx
  0x00000000035b462f: mov     dword ptr [rax+0ch],ebx
  0x00000000035b4632: sub     rsi,10h
  0x00000000035b4636: je      35b464dh
  0x00000000035b463c: xor     rbx,rbx
  0x00000000035b463f: shr     rsi,3h
  0x00000000035b4643: mov     qword ptr [rax+rsi*8+8h],rbx
  0x00000000035b4648: dec     rsi
  0x00000000035b464b: jne     35b4643h          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b464d: mov     rdx,173dc7c0h     ;   {metadata(method data for {method} {0x0000000017279828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000035b4657: add     qword ptr [rdx+108h],1h
  0x00000000035b465f: mov     rdx,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b4669: mov     r9d,dword ptr [rdx+0dch]
  0x00000000035b4670: add     r9d,8h
  0x00000000035b4674: mov     dword ptr [rdx+0dch],r9d
  0x00000000035b467b: mov     rdx,172552c8h     ;   {metadata({method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b4685: and     r9d,7ffff8h
  0x00000000035b468c: cmp     r9d,0h
  0x00000000035b4690: je      35b485ch
  0x00000000035b4696: mov     ebx,dword ptr [rsp+0c0h]
  0x00000000035b469d: cmp     ebx,r8d
  0x00000000035b46a0: mov     rdx,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b46aa: mov     r9,108h
  0x00000000035b46b4: jnle    35b46c4h
  0x00000000035b46ba: mov     r9,118h
  0x00000000035b46c4: mov     rdi,qword ptr [rdx+r9]
  0x00000000035b46c8: lea     rdi,[rdi+1h]
  0x00000000035b46cc: mov     qword ptr [rdx+r9],rdi
  0x00000000035b46d0: jnle    35b46ebh          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b46d6: mov     rdx,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b46e0: inc     dword ptr [rdx+128h]
  0x00000000035b46e6: jmp     35b46eeh          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b46eb: mov     rbx,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b46ee: mov     rdi,qword ptr [rsp+0c8h]
  0x00000000035b46f6: mov     rdx,173dc7c0h     ;   {metadata(method data for {method} {0x0000000017279828} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000035b4700: add     qword ptr [rdx+118h],1h
  0x00000000035b4708: mov     rdx,rdi
  0x00000000035b470b: mov     r8d,0h
  0x00000000035b4711: mov     r9,rax
  0x00000000035b4714: mov     edi,0h
  0x00000000035b4719: mov     rsi,rbx
  0x00000000035b471c: mov     qword ptr [rsp+0d8h],rax
  0x00000000035b4724: lea     rcx,[r8+rsi]
  0x00000000035b4728: cmp     ecx,dword ptr [rdx+0ch]
  0x00000000035b472b: jnbe    35b4873h
  0x00000000035b4731: lea     rcx,[rdi+rsi]
  0x00000000035b4735: cmp     ecx,dword ptr [r9+0ch]
  0x00000000035b4739: jnbe    35b4873h
  0x00000000035b473f: test    esi,esi
  0x00000000035b4741: jl      35b4873h
  0x00000000035b4747: je      35b478bh
  0x00000000035b474d: movsxd  r8,r8d
  0x00000000035b4750: movsxd  rdi,edi
  0x00000000035b4753: lea     rcx,[rdx+r8*2+10h]
  0x00000000035b4758: lea     rdx,[r9+rdi*2+10h]
  0x00000000035b475d: mov     r8,rsi
  0x00000000035b4760: sub     rsp,20h
  0x00000000035b4764: test    esp,0fh
  0x00000000035b476a: je      35b4782h
  0x00000000035b4770: sub     rsp,8h
  0x00000000035b4774: call    3502580h          ;   {runtime_call}
  0x00000000035b4779: add     rsp,8h
  0x00000000035b477d: jmp     35b4787h
  0x00000000035b4782: call    3502580h          ;   {runtime_call}
  0x00000000035b4787: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b478b: mov     rax,qword ptr [rsp+0d8h]
  0x00000000035b4793: mov     rdx,qword ptr [rsp+0d0h]
  0x00000000035b479b: mov     r10,rax
  0x00000000035b479e: mov     dword ptr [rdx+10h],r10d
  0x00000000035b47a2: mov     rax,rdx
  0x00000000035b47a5: shr     rax,9h
  0x00000000035b47a9: mov     rsi,123e9000h
  0x00000000035b47b3: mov     byte ptr [rax+rsi],0h  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b47b7: mov     r8d,dword ptr [rsp+0c4h]
  0x00000000035b47bf: mov     eax,dword ptr [rdx+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b47c2: mov     esi,dword ptr [rdx+0ch]  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b47c5: mov     rdi,rsi
  0x00000000035b47c8: inc     edi
  0x00000000035b47ca: mov     dword ptr [rdx+0ch],edi  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b47cd: movsxd  rdi,esi
  0x00000000035b47d0: cmp     esi,dword ptr [rax+0ch]  ; implicit exception: dispatches to 0x00000000035b4881
  0x00000000035b47d3: jnb     35b488bh
  0x00000000035b47d9: mov     word ptr [rax+rdi*2+10h],r8w
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000035b47df: mov     rax,rdx
  0x00000000035b47e2: add     rsp,0f0h
  0x00000000035b47e9: pop     rbp
  0x00000000035b47ea: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b47f0: ret
  0x00000000035b47f1: mov     qword ptr [rsp+8h],rsi
  0x00000000035b47f6: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b47fe: call    35b0d20h          ; OopMap{rdx=Oop off=1027}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x00000000035b4803: jmp     35b4461h
  0x00000000035b4808: mov     qword ptr [rsp+8h],rsi
  0x00000000035b480d: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b4815: call    35b0d20h          ; OopMap{rdx=Oop off=1050}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b481a: jmp     35b44a8h
  0x00000000035b481f: mov     qword ptr [rsp+8h],rdi
  0x00000000035b4824: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b482c: call    35b0d20h          ; OopMap{rdx=Oop off=1073}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b4831: jmp     35b44f4h
  0x00000000035b4836: call    35acf00h          ; OopMap{rdx=Oop rdi=Oop off=1083}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b483b: mov     qword ptr [rsp+8h],rbx
  0x00000000035b4840: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b4848: call    35b0d20h          ; OopMap{[208]=Oop [200]=Oop off=1101}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b484d: jmp     35b45d3h
  0x00000000035b4852: call    35adfc0h          ; OopMap{[208]=Oop [200]=Oop off=1111}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b4857: jmp     35b464dh
  0x00000000035b485c: mov     qword ptr [rsp+8h],rdx
  0x00000000035b4861: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b4869: call    35b0d20h          ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1134}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b486e: jmp     35b4696h
  0x00000000035b4873: nop
  0x00000000035b4874: nop
  0x00000000035b4875: nop
  0x00000000035b4876: nop
  0x00000000035b4877: call    34f6620h          ; OopMap{[208]=Oop [216]=Oop off=1148}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x00000000035b487c: jmp     35b478bh
  0x00000000035b4881: call    35acf00h          ; OopMap{rdx=Oop rax=Oop off=1158}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b4886: call    35acf00h          ; OopMap{rdx=Oop rax=Oop off=1163}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b488b: mov     qword ptr [rsp],rsi
  0x00000000035b488f: call    351f480h          ; OopMap{rdx=Oop rax=Oop off=1172}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000035b4894: nop
  0x00000000035b4895: nop
  0x00000000035b4896: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b489d: mov     r10,0h
  0x00000000035b48a7: mov     qword ptr [r15+2a8h],r10
  0x00000000035b48ae: mov     r10,0h
  0x00000000035b48b8: mov     qword ptr [r15+2b0h],r10
  0x00000000035b48bf: add     rsp,0f0h
  0x00000000035b48c6: pop     rbp
  0x00000000035b48c7: jmp     351f920h          ;   {runtime_call}
  0x00000000035b48cc: hlt
  0x00000000035b48cd: hlt
  0x00000000035b48ce: hlt
  0x00000000035b48cf: hlt
  0x00000000035b48d0: hlt
  0x00000000035b48d1: hlt
  0x00000000035b48d2: hlt
  0x00000000035b48d3: hlt
  0x00000000035b48d4: hlt
  0x00000000035b48d5: hlt
  0x00000000035b48d6: hlt
  0x00000000035b48d7: hlt
  0x00000000035b48d8: hlt
  0x00000000035b48d9: hlt
  0x00000000035b48da: hlt
  0x00000000035b48db: hlt
  0x00000000035b48dc: hlt
  0x00000000035b48dd: hlt
  0x00000000035b48de: hlt
  0x00000000035b48df: hlt
[Stub Code]
  0x00000000035b48e0: nop                       ;   {no_reloc}
  0x00000000035b48e1: nop
  0x00000000035b48e2: nop
  0x00000000035b48e3: nop
  0x00000000035b48e4: nop
  0x00000000035b48e5: mov     rbx,0h            ;   {static_stub}
  0x00000000035b48ef: jmp     35b48efh          ;   {runtime_call}
  0x00000000035b48f4: nop
  0x00000000035b48f5: mov     rbx,0h            ;   {static_stub}
  0x00000000035b48ff: jmp     35b48ffh          ;   {runtime_call}
[Exception Handler]
  0x00000000035b4904: call    35b03a0h          ;   {runtime_call}
  0x00000000035b4909: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b490e: sub     rsp,80h
  0x00000000035b4915: mov     qword ptr [rsp+78h],rax
  0x00000000035b491a: mov     qword ptr [rsp+70h],rcx
  0x00000000035b491f: mov     qword ptr [rsp+68h],rdx
  0x00000000035b4924: mov     qword ptr [rsp+60h],rbx
  0x00000000035b4929: mov     qword ptr [rsp+50h],rbp
  0x00000000035b492e: mov     qword ptr [rsp+48h],rsi
  0x00000000035b4933: mov     qword ptr [rsp+40h],rdi
  0x00000000035b4938: mov     qword ptr [rsp+38h],r8
  0x00000000035b493d: mov     qword ptr [rsp+30h],r9
  0x00000000035b4942: mov     qword ptr [rsp+28h],r10
  0x00000000035b4947: mov     qword ptr [rsp+20h],r11
  0x00000000035b494c: mov     qword ptr [rsp+18h],r12
  0x00000000035b4951: mov     qword ptr [rsp+10h],r13
  0x00000000035b4956: mov     qword ptr [rsp+8h],r14
  0x00000000035b495b: mov     qword ptr [rsp],r15
  0x00000000035b495f: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b4969: mov     rdx,35b4909h      ;   {internal_word}
  0x00000000035b4973: mov     r8,rsp
  0x00000000035b4976: and     rsp,0fffffffffffffff0h
  0x00000000035b497a: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b497f: hlt
[Deopt Handler Code]
  0x00000000035b4980: mov     r10,35b4980h      ;   {section_word}
  0x00000000035b498a: push    r10
  0x00000000035b498c: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b4991: hlt
  0x00000000035b4992: hlt
  0x00000000035b4993: hlt
  0x00000000035b4994: hlt
  0x00000000035b4995: hlt
  0x00000000035b4996: hlt
  0x00000000035b4997: hlt
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00000000035b4400' size='2784' address='0x00000000035b4250' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2232' dependencies_offset='2744' nul_chk_table_offset='2752' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='258' iicount='258' stamp='0.262'/>
<writer thread='7448'/>
<task_queued compile_id='8' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='2560' iicount='2560' level='3' stamp='0.262' comment='tiered' hot_count='2560'/>
<writer thread='4796'/>
<task_queued compile_id='9' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='640' iicount='640' level='3' stamp='0.262' comment='tiered' hot_count='640'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b63d0:
Code:
Argument 0 is unknown.RIP: 0x35b6540 Code size: 0x000001b0
[Entry Point]
[Constants]
  # {method} {0x00000000172e9660} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x00000000035b6540: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b6544: shl     r10,3h
  0x00000000035b6548: cmp     r10,rax
  0x00000000035b654b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b6551: nop     dword ptr [rax+rax+0h]
  0x00000000035b6559: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035b6560: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b6567: push    rbp
  0x00000000035b6568: sub     rsp,30h
  0x00000000035b656c: mov     rax,17394bf8h     ;   {metadata(method data for {method} {0x00000000172e9660} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x00000000035b6576: mov     esi,dword ptr [rax+0dch]
  0x00000000035b657c: add     esi,8h
  0x00000000035b657f: mov     dword ptr [rax+0dch],esi
  0x00000000035b6585: mov     rax,172e9658h     ;   {metadata({method} {0x00000000172e9660} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x00000000035b658f: and     esi,1ff8h
  0x00000000035b6595: cmp     esi,0h
  0x00000000035b6598: je      35b65e2h          ;*aload_0
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@0 (line 656)

  0x00000000035b659e: mov     eax,dword ptr [rdx+30h]  ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x00000000035b65a1: mov     esi,dword ptr [rdx+34h]  ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x00000000035b65a4: mov     rdi,r8
  0x00000000035b65a7: sar     edi,8h
  0x00000000035b65aa: movsxd  rbx,edi
  0x00000000035b65ad: cmp     edi,dword ptr [rsi+0ch]  ; implicit exception: dispatches to 0x00000000035b65f6
  0x00000000035b65b0: jnb     35b6600h
  0x00000000035b65b6: movzx   esi,word ptr [rsi+rbx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x00000000035b65bb: and     r8d,0ffh
  0x00000000035b65c2: add     esi,r8d
  0x00000000035b65c5: movsxd  rdi,esi
  0x00000000035b65c8: cmp     esi,dword ptr [rax+0ch]  ; implicit exception: dispatches to 0x00000000035b6609
  0x00000000035b65cb: jnb     35b6613h
  0x00000000035b65d1: movzx   eax,word ptr [rax+rdi*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x00000000035b65d6: add     rsp,30h
  0x00000000035b65da: pop     rbp
  0x00000000035b65db: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b65e1: ret
  0x00000000035b65e2: mov     qword ptr [rsp+8h],rax
  0x00000000035b65e7: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b65ef: call    35b0d20h          ; OopMap{rdx=Oop off=180}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)
                                                ;   {runtime_call}
  0x00000000035b65f4: jmp     35b659eh
  0x00000000035b65f6: call    35acf00h          ; OopMap{rax=Oop rsi=Oop off=187}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000035b65fb: call    35acf00h          ; OopMap{rax=Oop rsi=Oop off=192}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000035b6600: mov     qword ptr [rsp],rdi
  0x00000000035b6604: call    351f480h          ; OopMap{rax=Oop rsi=Oop off=201}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000035b6609: call    35acf00h          ; OopMap{rax=Oop off=206}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000035b660e: call    35acf00h          ; OopMap{rax=Oop off=211}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000035b6613: mov     qword ptr [rsp],rsi
  0x00000000035b6617: call    351f480h          ; OopMap{rax=Oop off=220}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000035b661c: nop
  0x00000000035b661d: nop
  0x00000000035b661e: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b6625: mov     r10,0h
  0x00000000035b662f: mov     qword ptr [r15+2a8h],r10
  0x00000000035b6636: mov     r10,0h
  0x00000000035b6640: mov     qword ptr [r15+2b0h],r10
  0x00000000035b6647: add     rsp,30h
  0x00000000035b664b: pop     rbp
  0x00000000035b664c: jmp     351f920h          ;   {runtime_call}
  0x00000000035b6651: hlt
  0x00000000035b6652: hlt
  0x00000000035b6653: hlt
  0x00000000035b6654: hlt
  0x00000000035b6655: hlt
  0x00000000035b6656: hlt
  0x00000000035b6657: hlt
  0x00000000035b6658: hlt
  0x00000000035b6659: hlt
  0x00000000035b665a: hlt
  0x00000000035b665b: hlt
  0x00000000035b665c: hlt
  0x00000000035b665d: hlt
  0x00000000035b665e: hlt
  0x00000000035b665f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b6660: call    35b03a0h          ;   {no_reloc}
  0x00000000035b6665: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b666a: sub     rsp,80h
  0x00000000035b6671: mov     qword ptr [rsp+78h],rax
  0x00000000035b6676: mov     qword ptr [rsp+70h],rcx
  0x00000000035b667b: mov     qword ptr [rsp+68h],rdx
  0x00000000035b6680: mov     qword ptr [rsp+60h],rbx
  0x00000000035b6685: mov     qword ptr [rsp+50h],rbp
  0x00000000035b668a: mov     qword ptr [rsp+48h],rsi
  0x00000000035b668f: mov     qword ptr [rsp+40h],rdi
  0x00000000035b6694: mov     qword ptr [rsp+38h],r8
  0x00000000035b6699: mov     qword ptr [rsp+30h],r9
  0x00000000035b669e: mov     qword ptr [rsp+28h],r10
  0x00000000035b66a3: mov     qword ptr [rsp+20h],r11
  0x00000000035b66a8: mov     qword ptr [rsp+18h],r12
  0x00000000035b66ad: mov     qword ptr [rsp+10h],r13
  0x00000000035b66b2: mov     qword ptr [rsp+8h],r14
  0x00000000035b66b7: mov     qword ptr [rsp],r15
  0x00000000035b66bb: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b66c5: mov     rdx,35b6665h      ;   {internal_word}
  0x00000000035b66cf: mov     r8,rsp
  0x00000000035b66d2: and     rsp,0fffffffffffffff0h
  0x00000000035b66d6: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b66db: hlt
[Deopt Handler Code]
  0x00000000035b66dc: mov     r10,35b66dch      ;   {section_word}
  0x00000000035b66e6: push    r10
  0x00000000035b66e8: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b66ed: hlt
  0x00000000035b66ee: hlt
  0x00000000035b66ef: hlt
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00000000035b6540' size='1144' address='0x00000000035b63d0' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='872' dependencies_offset='1096' nul_chk_table_offset='1104' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='2567' iicount='2567' stamp='0.277'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31632'/>
</blob>
Decoding compiled method 0x00000000035b2490:
Code:
Argument 0 is unknown.RIP: 0x35b25e0 Code size: 0x00000130
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000017179508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000035b25e0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b25e7: push    rbp
  0x00000000035b25e8: sub     rsp,30h
  0x00000000035b25ec: mov     rax,173a1ec0h     ;   {metadata(method data for {method} {0x0000000017179508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000035b25f6: mov     esi,dword ptr [rax+0dch]
  0x00000000035b25fc: add     esi,8h
  0x00000000035b25ff: mov     dword ptr [rax+0dch],esi
  0x00000000035b2605: mov     rax,17179500h     ;   {metadata({method} {0x0000000017179508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000035b260f: and     esi,1ff8h
  0x00000000035b2615: cmp     esi,0h
  0x00000000035b2618: je      35b2637h
  0x00000000035b261e: mov     rax,0daf80c78h    ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000035b2628: mov     eax,dword ptr [rax+74h]  ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00000000035b262b: add     rsp,30h
  0x00000000035b262f: pop     rbp
  0x00000000035b2630: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b2636: ret
  0x00000000035b2637: mov     qword ptr [rsp+8h],rax
  0x00000000035b263c: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b2644: call    35b0d20h          ; OopMap{off=105}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00000000035b2649: jmp     35b261eh
  0x00000000035b264b: nop
  0x00000000035b264c: nop
  0x00000000035b264d: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b2654: mov     r10,0h
  0x00000000035b265e: mov     qword ptr [r15+2a8h],r10
  0x00000000035b2665: mov     r10,0h
  0x00000000035b266f: mov     qword ptr [r15+2b0h],r10
  0x00000000035b2676: add     rsp,30h
  0x00000000035b267a: pop     rbp
  0x00000000035b267b: jmp     351f920h          ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00000000035b2680: call    35b03a0h          ;   {no_reloc}
  0x00000000035b2685: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b268a: sub     rsp,80h
  0x00000000035b2691: mov     qword ptr [rsp+78h],rax
  0x00000000035b2696: mov     qword ptr [rsp+70h],rcx
  0x00000000035b269b: mov     qword ptr [rsp+68h],rdx
  0x00000000035b26a0: mov     qword ptr [rsp+60h],rbx
  0x00000000035b26a5: mov     qword ptr [rsp+50h],rbp
  0x00000000035b26aa: mov     qword ptr [rsp+48h],rsi
  0x00000000035b26af: mov     qword ptr [rsp+40h],rdi
  0x00000000035b26b4: mov     qword ptr [rsp+38h],r8
  0x00000000035b26b9: mov     qword ptr [rsp+30h],r9
  0x00000000035b26be: mov     qword ptr [rsp+28h],r10
  0x00000000035b26c3: mov     qword ptr [rsp+20h],r11
  0x00000000035b26c8: mov     qword ptr [rsp+18h],r12
  0x00000000035b26cd: mov     qword ptr [rsp+10h],r13
  0x00000000035b26d2: mov     qword ptr [rsp+8h],r14
  0x00000000035b26d7: mov     qword ptr [rsp],r15
  0x00000000035b26db: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b26e5: mov     rdx,35b2685h      ;   {internal_word}
  0x00000000035b26ef: mov     r8,rsp
  0x00000000035b26f2: and     rsp,0fffffffffffffff0h
  0x00000000035b26f6: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b26fb: hlt
[Deopt Handler Code]
  0x00000000035b26fc: mov     r10,35b26fch      ;   {section_word}
  0x00000000035b2706: push    r10
  0x00000000035b2708: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b270d: hlt
  0x00000000035b270e: hlt
  0x00000000035b270f: hlt
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00000000035b25e0' size='736' address='0x00000000035b2490' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='665' iicount='665' stamp='0.293'/>
<writer thread='7448'/>
<task_queued compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='7040' iicount='7040' level='3' stamp='0.293' comment='tiered' hot_count='7040'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b6010:
Code:
Argument 0 is unknown.RIP: 0x35b6160 Code size: 0x00000110
[Entry Point]
[Constants]
  # {method} {0x0000000017188028} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000035b6160: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b6164: shl     r10,3h
  0x00000000035b6168: cmp     r10,rax
  0x00000000035b616b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b6171: nop     dword ptr [rax+rax+0h]
  0x00000000035b6179: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035b6180: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b6187: push    rbp
  0x00000000035b6188: sub     rsp,30h
  0x00000000035b618c: mov     eax,dword ptr [rdx+0ch]  ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00000000035b618f: add     rsp,30h
  0x00000000035b6193: pop     rbp
  0x00000000035b6194: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b619a: ret
  0x00000000035b619b: nop
  0x00000000035b619c: nop
  0x00000000035b619d: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b61a4: mov     r10,0h
  0x00000000035b61ae: mov     qword ptr [r15+2a8h],r10
  0x00000000035b61b5: mov     r10,0h
  0x00000000035b61bf: mov     qword ptr [r15+2b0h],r10
  0x00000000035b61c6: add     rsp,30h
  0x00000000035b61ca: pop     rbp
  0x00000000035b61cb: jmp     351f920h          ;   {runtime_call}
  0x00000000035b61d0: hlt
  0x00000000035b61d1: hlt
  0x00000000035b61d2: hlt
  0x00000000035b61d3: hlt
  0x00000000035b61d4: hlt
  0x00000000035b61d5: hlt
  0x00000000035b61d6: hlt
  0x00000000035b61d7: hlt
  0x00000000035b61d8: hlt
  0x00000000035b61d9: hlt
  0x00000000035b61da: hlt
  0x00000000035b61db: hlt
  0x00000000035b61dc: hlt
  0x00000000035b61dd: hlt
  0x00000000035b61de: hlt
  0x00000000035b61df: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b61e0: call    35b03a0h          ;   {no_reloc}
  0x00000000035b61e5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b61ea: sub     rsp,80h
  0x00000000035b61f1: mov     qword ptr [rsp+78h],rax
  0x00000000035b61f6: mov     qword ptr [rsp+70h],rcx
  0x00000000035b61fb: mov     qword ptr [rsp+68h],rdx
  0x00000000035b6200: mov     qword ptr [rsp+60h],rbx
  0x00000000035b6205: mov     qword ptr [rsp+50h],rbp
  0x00000000035b620a: mov     qword ptr [rsp+48h],rsi
  0x00000000035b620f: mov     qword ptr [rsp+40h],rdi
  0x00000000035b6214: mov     qword ptr [rsp+38h],r8
  0x00000000035b6219: mov     qword ptr [rsp+30h],r9
  0x00000000035b621e: mov     qword ptr [rsp+28h],r10
  0x00000000035b6223: mov     qword ptr [rsp+20h],r11
  0x00000000035b6228: mov     qword ptr [rsp+18h],r12
  0x00000000035b622d: mov     qword ptr [rsp+10h],r13
  0x00000000035b6232: mov     qword ptr [rsp+8h],r14
  0x00000000035b6237: mov     qword ptr [rsp],r15
  0x00000000035b623b: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b6245: mov     rdx,35b61e5h      ;   {internal_word}
  0x00000000035b624f: mov     r8,rsp
  0x00000000035b6252: and     rsp,0fffffffffffffff0h
  0x00000000035b6256: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b625b: hlt
[Deopt Handler Code]
  0x00000000035b625c: mov     r10,35b625ch      ;   {section_word}
  0x00000000035b6266: push    r10
  0x00000000035b6268: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b626d: hlt
  0x00000000035b626e: hlt
  0x00000000035b626f: hlt
<nmethod compile_id='6' compiler='C1' level='1' entry='0x00000000035b6160' size='680' address='0x00000000035b6010' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='387' iicount='387' stamp='0.308'/>
Decoding compiled method 0x00000000035b5910:
Code:
Argument 0 is unknown.RIP: 0x35b5a60 Code size: 0x00000150
[Entry Point]
[Constants]
  # {method} {0x0000000017160488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000035b5a60: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b5a64: shl     r10,3h
  0x00000000035b5a68: cmp     r10,rax
  0x00000000035b5a6b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b5a71: nop     dword ptr [rax+rax+0h]
  0x00000000035b5a79: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035b5a80: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b5a87: push    rbp
  0x00000000035b5a88: sub     rsp,50h
  0x00000000035b5a8c: mov     rcx,17214088h
  0x00000000035b5a96: mov     esi,dword ptr [rcx+8h]
  0x00000000035b5a99: add     esi,8h
  0x00000000035b5a9c: mov     dword ptr [rcx+8h],esi
  0x00000000035b5a9f: mov     rcx,17160480h     ;   {metadata({method} {0x0000000017160488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000035b5aa9: and     esi,3ff8h
  0x00000000035b5aaf: cmp     esi,0h
  0x00000000035b5ab2: je      35b5ad1h
  0x00000000035b5ab8: mov     rcx,rdx           ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000035b5abb: mov     qword ptr [rsp+40h],rdx
  0x00000000035b5ac0: call    35ad120h          ; OopMap{[64]=Oop off=101}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000000035b5ac5: add     rsp,50h
  0x00000000035b5ac9: pop     rbp
  0x00000000035b5aca: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b5ad0: ret
  0x00000000035b5ad1: mov     qword ptr [rsp+8h],rcx
  0x00000000035b5ad6: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b5ade: call    35b0d20h          ; OopMap{rdx=Oop off=131}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00000000035b5ae3: jmp     35b5ab8h
  0x00000000035b5ae5: nop
  0x00000000035b5ae6: nop
  0x00000000035b5ae7: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b5aee: mov     r10,0h
  0x00000000035b5af8: mov     qword ptr [r15+2a8h],r10
  0x00000000035b5aff: mov     r10,0h
  0x00000000035b5b09: mov     qword ptr [r15+2b0h],r10
  0x00000000035b5b10: add     rsp,50h
  0x00000000035b5b14: pop     rbp
  0x00000000035b5b15: jmp     351f920h          ;   {runtime_call}
  0x00000000035b5b1a: hlt
  0x00000000035b5b1b: hlt
  0x00000000035b5b1c: hlt
  0x00000000035b5b1d: hlt
  0x00000000035b5b1e: hlt
  0x00000000035b5b1f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b5b20: call    35b03a0h          ;   {no_reloc}
  0x00000000035b5b25: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b5b2a: sub     rsp,80h
  0x00000000035b5b31: mov     qword ptr [rsp+78h],rax
  0x00000000035b5b36: mov     qword ptr [rsp+70h],rcx
  0x00000000035b5b3b: mov     qword ptr [rsp+68h],rdx
  0x00000000035b5b40: mov     qword ptr [rsp+60h],rbx
  0x00000000035b5b45: mov     qword ptr [rsp+50h],rbp
  0x00000000035b5b4a: mov     qword ptr [rsp+48h],rsi
  0x00000000035b5b4f: mov     qword ptr [rsp+40h],rdi
  0x00000000035b5b54: mov     qword ptr [rsp+38h],r8
  0x00000000035b5b59: mov     qword ptr [rsp+30h],r9
  0x00000000035b5b5e: mov     qword ptr [rsp+28h],r10
  0x00000000035b5b63: mov     qword ptr [rsp+20h],r11
  0x00000000035b5b68: mov     qword ptr [rsp+18h],r12
  0x00000000035b5b6d: mov     qword ptr [rsp+10h],r13
  0x00000000035b5b72: mov     qword ptr [rsp+8h],r14
  0x00000000035b5b77: mov     qword ptr [rsp],r15
  0x00000000035b5b7b: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b5b85: mov     rdx,35b5b25h      ;   {internal_word}
  0x00000000035b5b8f: mov     r8,rsp
  0x00000000035b5b92: and     rsp,0fffffffffffffff0h
  0x00000000035b5b96: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b5b9b: hlt
[Deopt Handler Code]
  0x00000000035b5b9c: mov     r10,35b5b9ch      ;   {section_word}
  0x00000000035b5ba6: push    r10
  0x00000000035b5ba8: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b5bad: hlt
  0x00000000035b5bae: hlt
  0x00000000035b5baf: hlt
<nmethod compile_id='10' compiler='C1' level='2' entry='0x00000000035b5a60' size='800' address='0x00000000035b5910' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='7065' iicount='7065' stamp='0.321'/>
<writer thread='7448'/>
<task_queued compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.323' comment='tiered' hot_count='128'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b5390:
Code:
Argument 0 is unknown.RIP: 0x35b54e0 Code size: 0x00000110
[Entry Point]
[Constants]
  # {method} {0x0000000017355938} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000035b54e0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b54e4: shl     r10,3h
  0x00000000035b54e8: cmp     r10,rax
  0x00000000035b54eb: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b54f1: nop     dword ptr [rax+rax+0h]
  0x00000000035b54f9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035b5500: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b5507: push    rbp
  0x00000000035b5508: sub     rsp,30h           ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x00000000035b550c: mov     eax,dword ptr [rdx+10h]  ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x00000000035b550f: add     rsp,30h
  0x00000000035b5513: pop     rbp
  0x00000000035b5514: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b551a: ret
  0x00000000035b551b: nop
  0x00000000035b551c: nop
  0x00000000035b551d: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b5524: mov     r10,0h
  0x00000000035b552e: mov     qword ptr [r15+2a8h],r10
  0x00000000035b5535: mov     r10,0h
  0x00000000035b553f: mov     qword ptr [r15+2b0h],r10
  0x00000000035b5546: add     rsp,30h
  0x00000000035b554a: pop     rbp
  0x00000000035b554b: jmp     351f920h          ;   {runtime_call}
  0x00000000035b5550: hlt
  0x00000000035b5551: hlt
  0x00000000035b5552: hlt
  0x00000000035b5553: hlt
  0x00000000035b5554: hlt
  0x00000000035b5555: hlt
  0x00000000035b5556: hlt
  0x00000000035b5557: hlt
  0x00000000035b5558: hlt
  0x00000000035b5559: hlt
  0x00000000035b555a: hlt
  0x00000000035b555b: hlt
  0x00000000035b555c: hlt
  0x00000000035b555d: hlt
  0x00000000035b555e: hlt
  0x00000000035b555f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b5560: call    35b03a0h          ;   {no_reloc}
  0x00000000035b5565: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b556a: sub     rsp,80h
  0x00000000035b5571: mov     qword ptr [rsp+78h],rax
  0x00000000035b5576: mov     qword ptr [rsp+70h],rcx
  0x00000000035b557b: mov     qword ptr [rsp+68h],rdx
  0x00000000035b5580: mov     qword ptr [rsp+60h],rbx
  0x00000000035b5585: mov     qword ptr [rsp+50h],rbp
  0x00000000035b558a: mov     qword ptr [rsp+48h],rsi
  0x00000000035b558f: mov     qword ptr [rsp+40h],rdi
  0x00000000035b5594: mov     qword ptr [rsp+38h],r8
  0x00000000035b5599: mov     qword ptr [rsp+30h],r9
  0x00000000035b559e: mov     qword ptr [rsp+28h],r10
  0x00000000035b55a3: mov     qword ptr [rsp+20h],r11
  0x00000000035b55a8: mov     qword ptr [rsp+18h],r12
  0x00000000035b55ad: mov     qword ptr [rsp+10h],r13
  0x00000000035b55b2: mov     qword ptr [rsp+8h],r14
  0x00000000035b55b7: mov     qword ptr [rsp],r15
  0x00000000035b55bb: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b55c5: mov     rdx,35b5565h      ;   {internal_word}
  0x00000000035b55cf: mov     r8,rsp
  0x00000000035b55d2: and     rsp,0fffffffffffffff0h
  0x00000000035b55d6: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b55db: hlt
[Deopt Handler Code]
  0x00000000035b55dc: mov     r10,35b55dch      ;   {section_word}
  0x00000000035b55e6: push    r10
  0x00000000035b55e8: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b55ed: hlt
  0x00000000035b55ee: hlt
  0x00000000035b55ef: hlt
<nmethod compile_id='11' compiler='C1' level='1' entry='0x00000000035b54e0' size='704' address='0x00000000035b5390' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='131' iicount='131' stamp='0.339'/>
<writer thread='4796'/>
<task_queued compile_id='12' method='java/lang/Character toLowerCase (I)I' bytes='9' count='4736' iicount='4736' level='3' stamp='0.342' comment='tiered' hot_count='4736'/>
<task_queued compile_id='13' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='4736' iicount='4736' level='3' stamp='0.342' comment='tiered' hot_count='4736'/>
<writer thread='14992'/>
Decoding compiled method 0x00000000035b3490:
Code:
Argument 0 is unknown.RIP: 0x35b35e0 Code size: 0x000000b8
[Entry Point]
[Constants]
  # {method} {0x0000000017163d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000035b35e0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b35e4: shl     r10,3h
  0x00000000035b35e8: cmp     rax,r10
  0x00000000035b35eb: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b35f1: nop
  0x00000000035b35f4: nop     word ptr [rax+rax+0h]
  0x00000000035b35fa: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035b3600: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b3607: push    rbp
  0x00000000035b3608: sub     rsp,20h           ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00000000035b360c: test    r8d,r8d
  0x00000000035b360f: jl      35b3649h          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000000035b3611: mov     r10d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00000000035b3615: mov     ebp,dword ptr [r10+0ch]  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00000000035b3671
  0x00000000035b3619: cmp     r8d,ebp
  0x00000000035b361c: jnl     35b365dh          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000000035b361e: cmp     r8d,ebp
  0x00000000035b3621: jnb     35b3635h
  0x00000000035b3623: movzx   eax,word ptr [r10+r8*2+10h]
  0x00000000035b3629: add     rsp,20h
  0x00000000035b362d: pop     rbp
  0x00000000035b362e: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035b3634: ret
  0x00000000035b3635: mov     edx,0ffffffe4h
  0x00000000035b363a: mov     ebp,r8d
  0x00000000035b363d: mov     dword ptr [rsp],r10d
  0x00000000035b3641: nop
  0x00000000035b3643: call    34f57a0h          ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00000000035b3648: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000000035b3649: mov     rbp,rdx
  0x00000000035b364c: mov     dword ptr [rsp+4h],r8d
  0x00000000035b3651: mov     edx,0ffffff65h
  0x00000000035b3656: nop
  0x00000000035b3657: call    34f57a0h          ; OopMap{rbp=Oop off=124}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00000000035b365c: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000000035b365d: mov     qword ptr [rsp],rdx
  0x00000000035b3661: mov     dword ptr [rsp+0ch],r8d
  0x00000000035b3666: mov     edx,0ffffff65h
  0x00000000035b366b: call    34f57a0h          ; OopMap{[0]=Oop off=144}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00000000035b3670: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000000035b3671: mov     edx,0fffffff6h
  0x00000000035b3676: nop
  0x00000000035b3677: call    34f57a0h          ; OopMap{off=156}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00000000035b367c: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x00000000035b367d: hlt
  0x00000000035b367e: hlt
  0x00000000035b367f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b3680: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035b3685: call    35b368ah
  0x00000000035b368a: sub     qword ptr [rsp],5h
  0x00000000035b368f: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b3694: hlt
  0x00000000035b3695: hlt
  0x00000000035b3696: hlt
  0x00000000035b3697: hlt
<nmethod compile_id='5' compiler='C2' level='4' entry='0x00000000035b35e0' size='896' address='0x00000000035b3490' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='632' dependencies_offset='872' nul_chk_table_offset='880' method='java/lang/String charAt (I)C' bytes='29' count='111033' iicount='111033' stamp='0.362'/>
<writer thread='1512'/>
Decoding compiled method 0x00000000035b2fd0:
Code:
Argument 0 is unknown.RIP: 0x35b3100 Code size: 0x00000158
[Entry Point]
[Constants]
  # {method} {0x0000000017164fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000035b3100: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b3104: shl     r10,3h
  0x00000000035b3108: cmp     rax,r10
  0x00000000035b310b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b3111: nop
  0x00000000035b3114: nop     word ptr [rax+rax+0h]
  0x00000000035b311a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035b3120: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b3127: push    rbp
  0x00000000035b3128: sub     rsp,20h           ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000035b312c: mov     rbx,rdx
  0x00000000035b312f: mov     eax,dword ptr [rdx+10h]  ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000000035b3132: test    eax,eax
  0x00000000035b3134: jne     35b3204h          ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000000035b313a: mov     r10d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000000035b313e: mov     edi,dword ptr [r10+0ch]  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000000035b3229
  0x00000000035b3142: test    edi,edi
  0x00000000035b3144: jle     35b3210h          ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000000035b314a: test    edi,edi
  0x00000000035b314c: jbe     35b3214h
  0x00000000035b3152: mov     ecx,edi
  0x00000000035b3154: dec     ecx
  0x00000000035b3156: cmp     ecx,edi
  0x00000000035b3158: jnb     35b3214h          ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000035b315e: movzx   esi,word ptr [r10+10h]  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000000035b3163: mov     r8d,edi
  0x00000000035b3166: add     r8d,0fffffffdh
  0x00000000035b316a: mov     eax,esi
  0x00000000035b316c: shl     eax,5h
  0x00000000035b316f: mov     r11d,1h
  0x00000000035b3175: mov     r9d,80000000h
  0x00000000035b317b: cmp     ecx,r8d
  0x00000000035b317e: cmovl   r8d,r9d
  0x00000000035b3182: cmp     r8d,1h
  0x00000000035b3186: jle     35b31fah
  0x00000000035b3188: sub     eax,esi           ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000035b318a: jmp     35b31b2h          ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000035b318c: movzx   r8d,word ptr [r10+r11*2+10h]
  0x00000000035b3192: sub     eax,esi
  0x00000000035b3194: add     eax,r8d           ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000035b3197: inc     r11d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000035b319a: cmp     r11d,edi
  0x00000000035b319d: jnl     35b3201h          ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000035b319f: mov     r8d,eax
  0x00000000035b31a2: shl     r8d,5h
  0x00000000035b31a6: mov     esi,eax
  0x00000000035b31a8: mov     eax,r8d
  0x00000000035b31ab: jmp     35b318ch
  0x00000000035b31ad: nop
  0x00000000035b31b0: sub     eax,esi           ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000035b31b2: movzx   r9d,word ptr [r10+r11*2+10h]
  0x00000000035b31b8: add     eax,r9d
  0x00000000035b31bb: movsxd  r9,r11d
  0x00000000035b31be: movzx   ecx,word ptr [r10+r9*2+12h]
  0x00000000035b31c4: movzx   ebp,word ptr [r10+r9*2+16h]
  0x00000000035b31ca: movzx   r9d,word ptr [r10+r9*2+14h]
  0x00000000035b31d0: mov     esi,eax
  0x00000000035b31d2: shl     esi,5h
  0x00000000035b31d5: sub     esi,eax
  0x00000000035b31d7: add     esi,ecx
  0x00000000035b31d9: mov     ecx,esi
  0x00000000035b31db: shl     ecx,5h
  0x00000000035b31de: sub     ecx,esi
  0x00000000035b31e0: add     ecx,r9d
  0x00000000035b31e3: mov     esi,ecx
  0x00000000035b31e5: shl     esi,5h
  0x00000000035b31e8: sub     esi,ecx
  0x00000000035b31ea: add     esi,ebp           ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000035b31ec: mov     eax,esi
  0x00000000035b31ee: shl     eax,5h            ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000035b31f1: add     r11d,4h           ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000035b31f5: cmp     r11d,r8d
  0x00000000035b31f8: jl      35b31b0h          ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000035b31fa: cmp     r11d,edi
  0x00000000035b31fd: jl      35b318ch
  0x00000000035b31ff: mov     eax,esi
  0x00000000035b3201: mov     dword ptr [rbx+10h],eax  ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000035b3204: add     rsp,20h
  0x00000000035b3208: pop     rbp
  0x00000000035b3209: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035b320f: ret
  0x00000000035b3210: xor     eax,eax
  0x00000000035b3212: jmp     35b3204h
  0x00000000035b3214: mov     edx,0ffffff86h
  0x00000000035b3219: mov     ebp,r10d
  0x00000000035b321c: mov     qword ptr [rsp],rbx
  0x00000000035b3220: nop
  0x00000000035b3223: call    34f57a0h          ; OopMap{rbp=NarrowOop [0]=Oop off=296}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000000035b3228: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000035b3229: mov     edx,0fffffff6h
  0x00000000035b322e: nop
  0x00000000035b322f: call    34f57a0h          ; OopMap{off=308}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000000035b3234: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x00000000035b3235: hlt
  0x00000000035b3236: hlt
  0x00000000035b3237: hlt
  0x00000000035b3238: hlt
  0x00000000035b3239: hlt
  0x00000000035b323a: hlt
  0x00000000035b323b: hlt
  0x00000000035b323c: hlt
  0x00000000035b323d: hlt
  0x00000000035b323e: hlt
  0x00000000035b323f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b3240: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035b3245: call    35b324ah
  0x00000000035b324a: sub     qword ptr [rsp],5h
  0x00000000035b324f: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b3254: hlt
  0x00000000035b3255: hlt
  0x00000000035b3256: hlt
  0x00000000035b3257: hlt
<nmethod compile_id='4' compiler='C2' level='4' entry='0x00000000035b3100' size='1192' address='0x00000000035b2fd0' relocation_offset='288' insts_offset='304' stub_offset='624' scopes_data_offset='656' scopes_pcs_offset='768' dependencies_offset='1168' nul_chk_table_offset='1176' method='java/lang/String hashCode ()I' bytes='55' count='1583' backedge_count='28565' iicount='1583' stamp='0.376'/>
<writer thread='14996'/>
Decoding compiled method 0x00000000035b7810:
Code:
Argument 0 is unknown.RIP: 0x35b7960 Code size: 0x00000238
[Entry Point]
[Constants]
  # {method} {0x00000000171645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000035b7960: mov     r10d,dword ptr [rdx+8h]
  0x00000000035b7964: shl     r10,3h
  0x00000000035b7968: cmp     rax,r10
  0x00000000035b796b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035b7971: nop
  0x00000000035b7974: nop     word ptr [rax+rax+0h]
  0x00000000035b797a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035b7980: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b7987: push    rbp
  0x00000000035b7988: sub     rsp,30h           ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000035b798c: cmp     rdx,r8
  0x00000000035b798f: je      35b79c3h          ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00000000035b7991: mov     r10d,dword ptr [r8+8h]  ; implicit exception: dispatches to 0x00000000035b7b51
  0x00000000035b7995: cmp     r10d,200002dah    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000035b799c: jne     35b7b3dh          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000035b79a2: mov     r9d,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00000000035b79a6: mov     ecx,dword ptr [r9+0ch]  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ; implicit exception: dispatches to 0x00000000035b7b61
  0x00000000035b79aa: mov     ebx,dword ptr [r8+0ch]  ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00000000035b79ae: mov     edi,dword ptr [rbx+0ch]  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00000000035b7b6d
  0x00000000035b79b1: xor     eax,eax
  0x00000000035b79b3: cmp     ecx,edi
  0x00000000035b79b5: je      35b79cah          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000035b79b7: add     rsp,30h
  0x00000000035b79bb: pop     rbp
  0x00000000035b79bc: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035b79c2: ret
  0x00000000035b79c3: mov     eax,1h
  0x00000000035b79c8: jmp     35b79b7h
  0x00000000035b79ca: test    ecx,ecx
  0x00000000035b79cc: je      35b7af9h          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000035b79d2: mov     r13d,ecx
  0x00000000035b79d5: dec     r13d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000035b79d8: movsxd  r11,ecx
  0x00000000035b79db: mov     edx,ecx
  0x00000000035b79dd: add     edx,0fffffffeh
  0x00000000035b79e0: mov     r8d,0ffffffffh
  0x00000000035b79e6: cmp     edx,r8d
  0x00000000035b79e9: cmovl   edx,r8d
  0x00000000035b79ed: mov     esi,r13d
  0x00000000035b79f0: mov     r10d,r13d
  0x00000000035b79f3: sub     r10d,esi          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000035b79f6: cmp     r10d,ecx
  0x00000000035b79f9: jnb     35b7b03h
  0x00000000035b79ff: movsxd  rbp,esi
  0x00000000035b7a02: mov     r14,r11
  0x00000000035b7a05: sub     r14,rbp
  0x00000000035b7a08: movzx   ebp,word ptr [r9+r14*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7a0e: cmp     r10d,edi
  0x00000000035b7a11: jnb     35b7b21h          ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7a17: movzx   r14d,word ptr [rbx+r14*2+0eh]
  0x00000000035b7a1d: cmp     ebp,r14d
  0x00000000035b7a20: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7a22: dec     esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000035b7a24: cmp     esi,edx
  0x00000000035b7a26: jnle    35b79f0h          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000035b7a28: mov     ebp,ecx
  0x00000000035b7a2a: sub     ebp,edi
  0x00000000035b7a2c: dec     ebp
  0x00000000035b7a2e: cmp     ebp,r8d
  0x00000000035b7a31: cmovl   ebp,r8d
  0x00000000035b7a35: mov     edx,ebp
  0x00000000035b7a37: add     edx,3h
  0x00000000035b7a3a: mov     r10d,7fffffffh
  0x00000000035b7a40: cmp     ebp,edx
  0x00000000035b7a42: cmovnle edx,r10d
  0x00000000035b7a46: cmp     esi,edx
  0x00000000035b7a48: jle     35b7abdh
  0x00000000035b7a4a: nop     word ptr [rax+rax+0h]  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000035b7a50: movsxd  r10,esi
  0x00000000035b7a53: mov     rbp,r11
  0x00000000035b7a56: sub     rbp,r10           ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7a59: movzx   r10d,word ptr [rbx+rbp*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7a5f: movzx   r8d,word ptr [r9+rbp*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7a65: cmp     r8d,r10d
  0x00000000035b7a68: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7a6e: movzx   r8d,word ptr [rbx+rbp*2+10h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7a74: movzx   r10d,word ptr [r9+rbp*2+10h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7a7a: cmp     r10d,r8d
  0x00000000035b7a7d: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7a83: mov     r10d,ecx
  0x00000000035b7a86: sub     r10d,esi
  0x00000000035b7a89: movsxd  r8,r10d
  0x00000000035b7a8c: movzx   r10d,word ptr [r9+r8*2+12h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7a92: movzx   ebp,word ptr [rbx+r8*2+12h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7a98: cmp     r10d,ebp
  0x00000000035b7a9b: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7aa1: movzx   ebp,word ptr [rbx+r8*2+14h]
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7aa7: movzx   r10d,word ptr [r9+r8*2+14h]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7aad: cmp     r10d,ebp
  0x00000000035b7ab0: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7ab6: add     esi,0fffffffch    ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000035b7ab9: cmp     esi,edx
  0x00000000035b7abb: jnle    35b7a50h          ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000035b7abd: cmp     esi,0ffffffffh
  0x00000000035b7ac0: je      35b7af9h
  0x00000000035b7ac2: nop
  0x00000000035b7ac4: mov     r10d,r13d
  0x00000000035b7ac7: sub     r10d,esi          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000035b7aca: cmp     r10d,ecx
  0x00000000035b7acd: jnb     35b7b03h
  0x00000000035b7acf: movsxd  r8,esi
  0x00000000035b7ad2: mov     rdx,r11
  0x00000000035b7ad5: sub     rdx,r8
  0x00000000035b7ad8: movzx   ebp,word ptr [r9+rdx*2+0eh]
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7ade: cmp     r10d,edi
  0x00000000035b7ae1: jnb     35b7b21h          ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7ae3: movzx   r8d,word ptr [rbx+rdx*2+0eh]
  0x00000000035b7ae9: cmp     ebp,r8d
  0x00000000035b7aec: jne     35b79b7h          ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000035b7af2: dec     esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000035b7af4: cmp     esi,0ffffffffh
  0x00000000035b7af7: jne     35b7ac4h          ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x00000000035b7af9: mov     eax,1h
  0x00000000035b7afe: jmp     35b79b7h
  0x00000000035b7b03: mov     edx,0ffffffe4h
  0x00000000035b7b08: mov     ebp,esi
  0x00000000035b7b0a: mov     dword ptr [rsp+4h],ebx
  0x00000000035b7b0e: mov     dword ptr [rsp+0ch],r9d
  0x00000000035b7b13: mov     dword ptr [rsp+10h],r10d
  0x00000000035b7b18: nop
  0x00000000035b7b1b: call    34f57a0h          ; OopMap{[4]=NarrowOop [12]=NarrowOop off=448}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00000000035b7b20: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000035b7b21: mov     edx,0ffffffe4h
  0x00000000035b7b26: mov     dword ptr [rsp],esi
  0x00000000035b7b29: mov     dword ptr [rsp+4h],r9d
  0x00000000035b7b2e: mov     dword ptr [rsp+10h],ebx
  0x00000000035b7b32: mov     dword ptr [rsp+14h],r10d
  0x00000000035b7b37: call    34f57a0h          ; OopMap{[4]=NarrowOop [16]=NarrowOop off=476}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00000000035b7b3c: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000035b7b3d: mov     rbp,rdx
  0x00000000035b7b40: mov     qword ptr [rsp+8h],r8
  0x00000000035b7b45: mov     edx,0ffffffdeh
  0x00000000035b7b4a: nop
  0x00000000035b7b4b: call    34f57a0h          ; OopMap{rbp=Oop [8]=Oop off=496}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x00000000035b7b50: int3
  0x00000000035b7b51: mov     rbp,rdx
  0x00000000035b7b54: mov     edx,0fffffff4h
  0x00000000035b7b59: nop
  0x00000000035b7b5b: call    34f57a0h          ; OopMap{rbp=Oop off=512}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x00000000035b7b60: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000035b7b61: mov     edx,0fffffff6h
  0x00000000035b7b66: nop
  0x00000000035b7b67: call    34f57a0h          ; OopMap{off=524}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00000000035b7b6c: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x00000000035b7b6d: mov     edx,0fffffff6h
  0x00000000035b7b72: nop
  0x00000000035b7b73: call    34f57a0h          ; OopMap{off=536}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00000000035b7b78: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x00000000035b7b79: hlt
  0x00000000035b7b7a: hlt
  0x00000000035b7b7b: hlt
  0x00000000035b7b7c: hlt
  0x00000000035b7b7d: hlt
  0x00000000035b7b7e: hlt
  0x00000000035b7b7f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b7b80: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035b7b85: call    35b7b8ah
  0x00000000035b7b8a: sub     qword ptr [rsp],5h
  0x00000000035b7b8f: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b7b94: hlt
  0x00000000035b7b95: hlt
  0x00000000035b7b96: hlt
  0x00000000035b7b97: hlt
<nmethod compile_id='3' compiler='C2' level='4' entry='0x00000000035b7960' size='2000' address='0x00000000035b7810' relocation_offset='288' insts_offset='336' stub_offset='880' scopes_data_offset='920' scopes_pcs_offset='1144' dependencies_offset='1960' nul_chk_table_offset='1968' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='12897' backedge_count='9928' iicount='12897' stamp='0.394'/>
<writer thread='4796'/>
<task_queued compile_id='14' method='java/lang/Math min (II)I' bytes='11' count='2944' iicount='2944' level='3' stamp='0.394' comment='tiered' hot_count='2944'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b7350:
Code:
Argument 0 is unknown.RIP: 0x35b74c0 Code size: 0x00000238
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000171fb700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000035b74c0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b74c7: push    rbp
  0x00000000035b74c8: sub     rsp,30h
  0x00000000035b74cc: mov     rsi,1734f8b0h     ;   {metadata(method data for {method} {0x00000000171fb700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035b74d6: mov     edi,dword ptr [rsi+0dch]
  0x00000000035b74dc: add     edi,8h
  0x00000000035b74df: mov     dword ptr [rsi+0dch],edi
  0x00000000035b74e5: mov     rsi,171fb6f8h     ;   {metadata({method} {0x00000000171fb700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035b74ef: and     edi,1ff8h
  0x00000000035b74f5: cmp     edi,0h
  0x00000000035b74f8: je      35b75e0h          ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6374)

  0x00000000035b74fe: mov     rsi,1734f8b0h     ;   {metadata(method data for {method} {0x00000000171fb700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035b7508: add     qword ptr [rsi+108h],1h
  0x00000000035b7510: mov     rsi,rdx
  0x00000000035b7513: mov     rdx,rsi           ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)

  0x00000000035b7516: mov     dword ptr [rsp+20h],esi
  0x00000000035b751a: nop
  0x00000000035b751b: nop
  0x00000000035b751c: nop
  0x00000000035b751d: nop
  0x00000000035b751e: nop
  0x00000000035b751f: call    34f6620h          ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ;   {static_call}
  0x00000000035b7524: cmp     rax,qword ptr [rax]  ; implicit exception: dispatches to 0x00000000035b75f7
  0x00000000035b7527: mov     r8,rax
  0x00000000035b752a: mov     rdx,1734f8b0h     ;   {metadata(method data for {method} {0x00000000171fb700} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035b7534: mov     r8d,dword ptr [r8+8h]
  0x00000000035b7538: shl     r8,3h
  0x00000000035b753c: cmp     r8,qword ptr [rdx+120h]
  0x00000000035b7543: jne     35b7552h
  0x00000000035b7545: add     qword ptr [rdx+128h],1h
  0x00000000035b754d: jmp     35b75b8h
  0x00000000035b7552: cmp     r8,qword ptr [rdx+130h]
  0x00000000035b7559: jne     35b7568h
  0x00000000035b755b: add     qword ptr [rdx+138h],1h
  0x00000000035b7563: jmp     35b75b8h
  0x00000000035b7568: cmp     qword ptr [rdx+120h],0h
  0x00000000035b7573: jne     35b758ch
  0x00000000035b7575: mov     qword ptr [rdx+120h],r8
  0x00000000035b757c: mov     qword ptr [rdx+128h],1h
  0x00000000035b7587: jmp     35b75b8h
  0x00000000035b758c: cmp     qword ptr [rdx+130h],0h
  0x00000000035b7597: jne     35b75b0h
  0x00000000035b7599: mov     qword ptr [rdx+130h],r8
  0x00000000035b75a0: mov     qword ptr [rdx+138h],1h
  0x00000000035b75ab: jmp     35b75b8h
  0x00000000035b75b0: add     qword ptr [rdx+118h],1h
  0x00000000035b75b8: mov     r8d,dword ptr [rsp+20h]
  0x00000000035b75bd: mov     rdx,rax           ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)

  0x00000000035b75c0: nop
  0x00000000035b75c1: nop
  0x00000000035b75c2: nop
  0x00000000035b75c3: nop
  0x00000000035b75c4: nop
  0x00000000035b75c5: mov     rax,0ffffffffffffffffh
  0x00000000035b75cf: call    34f63e0h          ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {virtual_call}
  0x00000000035b75d4: add     rsp,30h
  0x00000000035b75d8: pop     rbp
  0x00000000035b75d9: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b75df: ret
  0x00000000035b75e0: mov     qword ptr [rsp+8h],rsi
  0x00000000035b75e5: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b75ed: call    35b0d20h          ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ;   {runtime_call}
  0x00000000035b75f2: jmp     35b74feh
  0x00000000035b75f7: call    35acf00h          ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {runtime_call}
  0x00000000035b75fc: nop
  0x00000000035b75fd: nop
  0x00000000035b75fe: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b7605: mov     r10,0h
  0x00000000035b760f: mov     qword ptr [r15+2a8h],r10
  0x00000000035b7616: mov     r10,0h
  0x00000000035b7620: mov     qword ptr [r15+2b0h],r10
  0x00000000035b7627: add     rsp,30h
  0x00000000035b762b: pop     rbp
  0x00000000035b762c: jmp     351f920h          ;   {runtime_call}
  0x00000000035b7631: hlt
  0x00000000035b7632: hlt
  0x00000000035b7633: hlt
  0x00000000035b7634: hlt
  0x00000000035b7635: hlt
  0x00000000035b7636: hlt
  0x00000000035b7637: hlt
  0x00000000035b7638: hlt
  0x00000000035b7639: hlt
  0x00000000035b763a: hlt
  0x00000000035b763b: hlt
  0x00000000035b763c: hlt
  0x00000000035b763d: hlt
  0x00000000035b763e: hlt
  0x00000000035b763f: hlt
[Stub Code]
  0x00000000035b7640: nop                       ;   {no_reloc}
  0x00000000035b7641: nop
  0x00000000035b7642: nop
  0x00000000035b7643: nop
  0x00000000035b7644: nop
  0x00000000035b7645: mov     rbx,0h            ;   {static_stub}
  0x00000000035b764f: jmp     35b764fh          ;   {runtime_call}
  0x00000000035b7654: nop
  0x00000000035b7655: mov     rbx,0h            ;   {static_stub}
  0x00000000035b765f: jmp     35b765fh          ;   {runtime_call}
[Exception Handler]
  0x00000000035b7664: call    35b03a0h          ;   {runtime_call}
  0x00000000035b7669: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b766e: sub     rsp,80h
  0x00000000035b7675: mov     qword ptr [rsp+78h],rax
  0x00000000035b767a: mov     qword ptr [rsp+70h],rcx
  0x00000000035b767f: mov     qword ptr [rsp+68h],rdx
  0x00000000035b7684: mov     qword ptr [rsp+60h],rbx
  0x00000000035b7689: mov     qword ptr [rsp+50h],rbp
  0x00000000035b768e: mov     qword ptr [rsp+48h],rsi
  0x00000000035b7693: mov     qword ptr [rsp+40h],rdi
  0x00000000035b7698: mov     qword ptr [rsp+38h],r8
  0x00000000035b769d: mov     qword ptr [rsp+30h],r9
  0x00000000035b76a2: mov     qword ptr [rsp+28h],r10
  0x00000000035b76a7: mov     qword ptr [rsp+20h],r11
  0x00000000035b76ac: mov     qword ptr [rsp+18h],r12
  0x00000000035b76b1: mov     qword ptr [rsp+10h],r13
  0x00000000035b76b6: mov     qword ptr [rsp+8h],r14
  0x00000000035b76bb: mov     qword ptr [rsp],r15
  0x00000000035b76bf: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b76c9: mov     rdx,35b7669h      ;   {internal_word}
  0x00000000035b76d3: mov     r8,rsp
  0x00000000035b76d6: and     rsp,0fffffffffffffff0h
  0x00000000035b76da: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b76df: hlt
[Deopt Handler Code]
  0x00000000035b76e0: mov     r10,35b76e0h      ;   {section_word}
  0x00000000035b76ea: push    r10
  0x00000000035b76ec: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b76f1: hlt
  0x00000000035b76f2: hlt
  0x00000000035b76f3: hlt
  0x00000000035b76f4: hlt
  0x00000000035b76f5: hlt
  0x00000000035b76f6: hlt
  0x00000000035b76f7: hlt
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00000000035b74c0' size='1160' address='0x00000000035b7350' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='4764' iicount='4764' stamp='0.408'/>
<writer thread='4796'/>
<task_queued compile_id='15' method='java/lang/String indexOf (II)I' bytes='70' count='855' backedge_count='31308' iicount='855' stamp='0.409' comment='tiered' hot_count='855'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035c6b90:
Code:
Argument 0 is unknown.RIP: 0x35c6d00 Code size: 0x00000270
[Entry Point]
[Constants]
  # {method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000035c6d00: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c6d04: shl     r10,3h
  0x00000000035c6d08: cmp     r10,rax
  0x00000000035c6d0b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c6d11: nop     dword ptr [rax+rax+0h]
  0x00000000035c6d19: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c6d20: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c6d27: push    rbp
  0x00000000035c6d28: sub     rsp,40h
  0x00000000035c6d2c: mov     rax,1734fca8h     ;   {metadata(method data for {method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6d36: mov     esi,dword ptr [rax+0dch]
  0x00000000035c6d3c: add     esi,8h
  0x00000000035c6d3f: mov     dword ptr [rax+0dch],esi
  0x00000000035c6d45: mov     rax,17334138h     ;   {metadata({method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6d4f: and     esi,1ff8h
  0x00000000035c6d55: cmp     esi,0h
  0x00000000035c6d58: je      35c6e67h          ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x00000000035c6d5e: mov     rax,1734fca8h     ;   {metadata(method data for {method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6d68: add     qword ptr [rax+118h],1h
  0x00000000035c6d70: mov     rax,1734fe68h     ;   {metadata(method data for {method} {0x0000000017333970} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6d7a: mov     esi,dword ptr [rax+0dch]
  0x00000000035c6d80: add     esi,8h
  0x00000000035c6d83: mov     dword ptr [rax+0dch],esi
  0x00000000035c6d89: mov     rax,17333968h     ;   {metadata({method} {0x0000000017333970} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6d93: and     esi,7ffff8h
  0x00000000035c6d99: cmp     esi,0h
  0x00000000035c6d9c: je      35c6e7eh
  0x00000000035c6da2: mov     rax,r8
  0x00000000035c6da5: and     eax,0ffffh
  0x00000000035c6dab: mov     rsi,0db00b8f0h    ;   {oop([I)}
  0x00000000035c6db5: movsxd  rdi,eax
  0x00000000035c6db8: cmp     eax,dword ptr [rsi+0ch]  ; implicit exception: dispatches to 0x00000000035c6e95
  0x00000000035c6dbb: jnb     35c6e9fh
  0x00000000035c6dc1: mov     eax,dword ptr [rsi+rdi*4+10h]
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000000035c6dc5: mov     rsi,rax
  0x00000000035c6dc8: and     esi,20000h
  0x00000000035c6dce: cmp     esi,0h
  0x00000000035c6dd1: mov     rsi,1734fca8h     ;   {metadata(method data for {method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6ddb: mov     rdi,138h
  0x00000000035c6de5: je      35c6df5h
  0x00000000035c6deb: mov     rdi,148h
  0x00000000035c6df5: mov     rbx,qword ptr [rsi+rdi]
  0x00000000035c6df9: lea     rbx,[rbx+1h]
  0x00000000035c6dfd: mov     qword ptr [rsi+rdi],rbx
  0x00000000035c6e01: je      35c6e58h          ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x00000000035c6e07: mov     rsi,rax
  0x00000000035c6e0a: and     esi,7fc0000h
  0x00000000035c6e10: cmp     esi,7fc0000h
  0x00000000035c6e16: mov     rsi,1734fca8h     ;   {metadata(method data for {method} {0x0000000017334140} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000035c6e20: mov     rdi,158h
  0x00000000035c6e2a: je      35c6e3ah
  0x00000000035c6e30: mov     rdi,168h
  0x00000000035c6e3a: mov     rbx,qword ptr [rsi+rdi]
  0x00000000035c6e3e: lea     rbx,[rbx+1h]
  0x00000000035c6e42: mov     qword ptr [rsi+rdi],rbx
  0x00000000035c6e46: je      35c6e58h          ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000000035c6e4c: shl     eax,5h
  0x00000000035c6e4f: sar     eax,17h
  0x00000000035c6e52: add     eax,r8d
  0x00000000035c6e55: mov     r8,rax            ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00000000035c6e58: mov     rax,r8
  0x00000000035c6e5b: add     rsp,40h
  0x00000000035c6e5f: pop     rbp
  0x00000000035c6e60: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c6e66: ret
  0x00000000035c6e67: mov     qword ptr [rsp+8h],rax
  0x00000000035c6e6c: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c6e74: call    35b0d20h          ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x00000000035c6e79: jmp     35c6d5eh
  0x00000000035c6e7e: mov     qword ptr [rsp+8h],rax
  0x00000000035c6e83: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c6e8b: call    35b0d20h          ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000035c6e90: jmp     35c6da2h
  0x00000000035c6e95: call    35acf00h          ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000035c6e9a: call    35acf00h          ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000035c6e9f: mov     qword ptr [rsp],rax
  0x00000000035c6ea3: call    351f480h          ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000035c6ea8: nop
  0x00000000035c6ea9: nop
  0x00000000035c6eaa: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c6eb1: mov     r10,0h
  0x00000000035c6ebb: mov     qword ptr [r15+2a8h],r10
  0x00000000035c6ec2: mov     r10,0h
  0x00000000035c6ecc: mov     qword ptr [r15+2b0h],r10
  0x00000000035c6ed3: add     rsp,40h
  0x00000000035c6ed7: pop     rbp
  0x00000000035c6ed8: jmp     351f920h          ;   {runtime_call}
  0x00000000035c6edd: hlt
  0x00000000035c6ede: hlt
  0x00000000035c6edf: hlt
[Exception Handler]
[Stub Code]
  0x00000000035c6ee0: call    35b03a0h          ;   {no_reloc}
  0x00000000035c6ee5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c6eea: sub     rsp,80h
  0x00000000035c6ef1: mov     qword ptr [rsp+78h],rax
  0x00000000035c6ef6: mov     qword ptr [rsp+70h],rcx
  0x00000000035c6efb: mov     qword ptr [rsp+68h],rdx
  0x00000000035c6f00: mov     qword ptr [rsp+60h],rbx
  0x00000000035c6f05: mov     qword ptr [rsp+50h],rbp
  0x00000000035c6f0a: mov     qword ptr [rsp+48h],rsi
  0x00000000035c6f0f: mov     qword ptr [rsp+40h],rdi
  0x00000000035c6f14: mov     qword ptr [rsp+38h],r8
  0x00000000035c6f19: mov     qword ptr [rsp+30h],r9
  0x00000000035c6f1e: mov     qword ptr [rsp+28h],r10
  0x00000000035c6f23: mov     qword ptr [rsp+20h],r11
  0x00000000035c6f28: mov     qword ptr [rsp+18h],r12
  0x00000000035c6f2d: mov     qword ptr [rsp+10h],r13
  0x00000000035c6f32: mov     qword ptr [rsp+8h],r14
  0x00000000035c6f37: mov     qword ptr [rsp],r15
  0x00000000035c6f3b: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c6f45: mov     rdx,35c6ee5h      ;   {internal_word}
  0x00000000035c6f4f: mov     r8,rsp
  0x00000000035c6f52: and     rsp,0fffffffffffffff0h
  0x00000000035c6f56: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c6f5b: hlt
[Deopt Handler Code]
  0x00000000035c6f5c: mov     r10,35c6f5ch      ;   {section_word}
  0x00000000035c6f66: push    r10
  0x00000000035c6f68: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c6f6d: hlt
  0x00000000035c6f6e: hlt
  0x00000000035c6f6f: hlt
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00000000035c6d00' size='1352' address='0x00000000035c6b90' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='4764' iicount='4764' stamp='0.423'/>
<writer thread='4796'/>
<task_queued compile_id='16' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='256' iicount='256' level='3' stamp='0.423' comment='tiered' hot_count='256'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035b6b10:
Code:
Argument 0 is unknown.RIP: 0x35b6c60 Code size: 0x00000190
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000035b6c60: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035b6c67: push    rbp
  0x00000000035b6c68: sub     rsp,30h
  0x00000000035b6c6c: mov     rax,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b6c76: mov     esi,dword ptr [rax+0dch]
  0x00000000035b6c7c: add     esi,8h
  0x00000000035b6c7f: mov     dword ptr [rax+0dch],esi
  0x00000000035b6c85: mov     rax,172552c8h     ;   {metadata({method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b6c8f: and     esi,1ff8h
  0x00000000035b6c95: cmp     esi,0h
  0x00000000035b6c98: je      35b6cfeh          ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00000000035b6c9e: cmp     edx,r8d
  0x00000000035b6ca1: mov     rax,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b6cab: mov     rsi,108h
  0x00000000035b6cb5: jnle    35b6cc5h
  0x00000000035b6cbb: mov     rsi,118h
  0x00000000035b6cc5: mov     rdi,qword ptr [rax+rsi]
  0x00000000035b6cc9: lea     rdi,[rdi+1h]
  0x00000000035b6ccd: mov     qword ptr [rax+rsi],rdi
  0x00000000035b6cd1: jnle    35b6cech          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00000000035b6cd7: mov     rax,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035b6ce1: inc     dword ptr [rax+128h]
  0x00000000035b6ce7: jmp     35b6cefh          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00000000035b6cec: mov     rdx,r8            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00000000035b6cef: mov     rax,rdx
  0x00000000035b6cf2: add     rsp,30h
  0x00000000035b6cf6: pop     rbp
  0x00000000035b6cf7: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035b6cfd: ret
  0x00000000035b6cfe: mov     qword ptr [rsp+8h],rax
  0x00000000035b6d03: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035b6d0b: call    35b0d20h          ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00000000035b6d10: jmp     35b6c9eh
  0x00000000035b6d12: nop
  0x00000000035b6d13: nop
  0x00000000035b6d14: mov     rax,qword ptr [r15+2a8h]
  0x00000000035b6d1b: mov     r10,0h
  0x00000000035b6d25: mov     qword ptr [r15+2a8h],r10
  0x00000000035b6d2c: mov     r10,0h
  0x00000000035b6d36: mov     qword ptr [r15+2b0h],r10
  0x00000000035b6d3d: add     rsp,30h
  0x00000000035b6d41: pop     rbp
  0x00000000035b6d42: jmp     351f920h          ;   {runtime_call}
  0x00000000035b6d47: hlt
  0x00000000035b6d48: hlt
  0x00000000035b6d49: hlt
  0x00000000035b6d4a: hlt
  0x00000000035b6d4b: hlt
  0x00000000035b6d4c: hlt
  0x00000000035b6d4d: hlt
  0x00000000035b6d4e: hlt
  0x00000000035b6d4f: hlt
  0x00000000035b6d50: hlt
  0x00000000035b6d51: hlt
  0x00000000035b6d52: hlt
  0x00000000035b6d53: hlt
  0x00000000035b6d54: hlt
  0x00000000035b6d55: hlt
  0x00000000035b6d56: hlt
  0x00000000035b6d57: hlt
  0x00000000035b6d58: hlt
  0x00000000035b6d59: hlt
  0x00000000035b6d5a: hlt
  0x00000000035b6d5b: hlt
  0x00000000035b6d5c: hlt
  0x00000000035b6d5d: hlt
  0x00000000035b6d5e: hlt
  0x00000000035b6d5f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035b6d60: call    35b03a0h          ;   {no_reloc}
  0x00000000035b6d65: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035b6d6a: sub     rsp,80h
  0x00000000035b6d71: mov     qword ptr [rsp+78h],rax
  0x00000000035b6d76: mov     qword ptr [rsp+70h],rcx
  0x00000000035b6d7b: mov     qword ptr [rsp+68h],rdx
  0x00000000035b6d80: mov     qword ptr [rsp+60h],rbx
  0x00000000035b6d85: mov     qword ptr [rsp+50h],rbp
  0x00000000035b6d8a: mov     qword ptr [rsp+48h],rsi
  0x00000000035b6d8f: mov     qword ptr [rsp+40h],rdi
  0x00000000035b6d94: mov     qword ptr [rsp+38h],r8
  0x00000000035b6d99: mov     qword ptr [rsp+30h],r9
  0x00000000035b6d9e: mov     qword ptr [rsp+28h],r10
  0x00000000035b6da3: mov     qword ptr [rsp+20h],r11
  0x00000000035b6da8: mov     qword ptr [rsp+18h],r12
  0x00000000035b6dad: mov     qword ptr [rsp+10h],r13
  0x00000000035b6db2: mov     qword ptr [rsp+8h],r14
  0x00000000035b6db7: mov     qword ptr [rsp],r15
  0x00000000035b6dbb: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035b6dc5: mov     rdx,35b6d65h      ;   {internal_word}
  0x00000000035b6dcf: mov     r8,rsp
  0x00000000035b6dd2: and     rsp,0fffffffffffffff0h
  0x00000000035b6dd6: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035b6ddb: hlt
[Deopt Handler Code]
  0x00000000035b6ddc: mov     r10,35b6ddch      ;   {section_word}
  0x00000000035b6de6: push    r10
  0x00000000035b6de8: jmp     34f7200h          ;   {runtime_call}
  0x00000000035b6ded: hlt
  0x00000000035b6dee: hlt
  0x00000000035b6def: hlt
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00000000035b6c60' size='904' address='0x00000000035b6b10' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='2965' iicount='2965' stamp='0.437'/>
<writer thread='4796'/>
<task_queued compile_id='17' method='java/lang/String length ()I' bytes='6' count='29056' iicount='29056' stamp='0.437' comment='tiered' hot_count='29056'/>
<writer thread='14992'/>
Decoding compiled method 0x00000000035c35d0:
Code:
Argument 0 is unknown.RIP: 0x35c3720 Code size: 0x000002a8
[Entry Point]
[Constants]
  # {method} {0x00000000171d4a18} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000000035c3720: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c3724: shl     r10,3h
  0x00000000035c3728: cmp     rax,r10
  0x00000000035c372b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c3731: nop
  0x00000000035c3734: nop     word ptr [rax+rax+0h]
  0x00000000035c373a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035c3740: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c3747: push    rbp
  0x00000000035c3748: sub     rsp,60h           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000035c374c: mov     qword ptr [rsp+40h],rdx
  0x00000000035c3751: mov     ebx,dword ptr [rdx+10h]  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000035c3754: mov     ebp,dword ptr [rbx+0ch]  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00000000035c3968
  0x00000000035c3757: mov     r11d,r8d
  0x00000000035c375a: sub     r11d,ebp
  0x00000000035c375d: test    r11d,r11d
  0x00000000035c3760: jnle    35c3773h          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000035c3762: add     rsp,60h
  0x00000000035c3766: pop     rbp
  0x00000000035c3767: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035c376d: ret
  0x00000000035c376e: mov     r11d,r8d
  0x00000000035c3771: jmp     35c378ch
  0x00000000035c3773: mov     r11d,ebp
  0x00000000035c3776: shl     r11d,1h           ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c3779: mov     r9d,r11d
  0x00000000035c377c: sub     r9d,r8d
  0x00000000035c377f: add     r9d,2h
  0x00000000035c3783: test    r9d,r9d
  0x00000000035c3786: jl      35c376eh          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c3788: add     r11d,2h           ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c378c: test    r11d,r11d
  0x00000000035c378f: jle     35c379fh          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c3791: mov     r9d,7ffffff7h
  0x00000000035c3797: sub     r9d,r11d
  0x00000000035c379a: test    r9d,r9d
  0x00000000035c379d: jnl     35c37afh          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c379f: mov     dword ptr [rsp+28h],ebx
  0x00000000035c37a3: call    34f61a0h          ; OopMap{[40]=NarrowOop [64]=Oop off=136}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00000000035c37a8: mov     r11d,eax
  0x00000000035c37ab: mov     ebx,dword ptr [rsp+28h]  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c37af: cmp     r11d,80000h
  0x00000000035c37b6: jnbe    35c3927h
  0x00000000035c37bc: movsxd  r10,r11d
  0x00000000035c37bf: shl     r10,1h
  0x00000000035c37c2: add     r10,17h
  0x00000000035c37c6: mov     rdi,r10
  0x00000000035c37c9: and     rdi,0fffffffffffffff8h
  0x00000000035c37cd: cmp     r11d,80000h
  0x00000000035c37d4: jnbe    35c38ddh
  0x00000000035c37da: mov     r13,qword ptr [r15+60h]
  0x00000000035c37de: mov     r8,r13
  0x00000000035c37e1: add     r8,rdi
  0x00000000035c37e4: cmp     r8,qword ptr [r15+70h]
  0x00000000035c37e8: jnb     35c38ddh
  0x00000000035c37ee: mov     qword ptr [r15+60h],r8
  0x00000000035c37f2: prefetchnta byte ptr [r8+100h]
  0x00000000035c37fa: mov     qword ptr [r13+0h],1h
  0x00000000035c3802: prefetchnta byte ptr [r8+140h]
  0x00000000035c380a: mov     dword ptr [r13+8h],20000041h
                                                ;   {metadata({type array char})}
  0x00000000035c3812: mov     dword ptr [r13+0ch],r11d
  0x00000000035c3816: prefetchnta byte ptr [r8+180h]  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c381e: cmp     ebp,r11d
  0x00000000035c3821: mov     esi,r11d
  0x00000000035c3824: cmovl   esi,ebp           ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c3827: mov     r9,r13
  0x00000000035c382a: add     r9,10h            ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c382e: mov     rdx,rbx           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000035c3831: shr     r10,3h
  0x00000000035c3835: mov     rcx,r10
  0x00000000035c3838: add     rcx,0fffffffffffffffeh
  0x00000000035c383c: cmp     ebp,esi
  0x00000000035c383e: jb      35c392fh
  0x00000000035c3844: cmp     r11d,esi
  0x00000000035c3847: jb      35c392fh
  0x00000000035c384d: test    esi,esi
  0x00000000035c384f: jle     35c395ah
  0x00000000035c3855: lea     rbx,[rbx+10h]
  0x00000000035c3859: cmp     esi,r11d
  0x00000000035c385c: jl      35c389eh
  0x00000000035c385e: add     rdi,0fffffffffffffff0h
  0x00000000035c3862: shr     rdi,3h
  0x00000000035c3866: mov     rcx,rbx
  0x00000000035c3869: mov     rdx,r9
  0x00000000035c386c: mov     r8,rdi
  0x00000000035c386f: mov     r10,3502860h
  0x00000000035c3879: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c387c: mov     r10,r13
  0x00000000035c387f: mov     r11,qword ptr [rsp+40h]
  0x00000000035c3884: mov     dword ptr [r11+10h],r10d
  0x00000000035c3888: mov     r10,r11
  0x00000000035c388b: shr     r10,9h
  0x00000000035c388f: mov     r11d,123e9000h
  0x00000000035c3895: mov     byte ptr [r11+r10],r12l  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00000000035c3899: jmp     35c3762h
  0x00000000035c389e: movsxd  r8,esi
  0x00000000035c38a1: mov     r11,r8
  0x00000000035c38a4: shl     r11,1h
  0x00000000035c38a7: add     r11,10h
  0x00000000035c38ab: mov     rcx,r11
  0x00000000035c38ae: and     rcx,0fffffffffffffff9h
  0x00000000035c38b2: mov     rdi,r13
  0x00000000035c38b5: add     rdi,rcx
  0x00000000035c38b8: shr     r11,3h
  0x00000000035c38bc: sub     r10,r11
  0x00000000035c38bf: mov     rcx,r10
  0x00000000035c38c2: xor     rax,rax
  0x00000000035c38c5: rep stos qword ptr [rdi]
  0x00000000035c38c8: mov     rcx,rbx
  0x00000000035c38cb: mov     rdx,r9
  0x00000000035c38ce: mov     r10,3502580h
  0x00000000035c38d8: call indirect r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c38db: jmp     35c387ch
  0x00000000035c38dd: mov     dword ptr [rsp+2ch],ebx
  0x00000000035c38e1: mov     qword ptr [rsp+38h],rdi
  0x00000000035c38e6: mov     qword ptr [rsp+30h],r10
  0x00000000035c38eb: mov     dword ptr [rsp+28h],r11d
  0x00000000035c38f0: push    qword ptr [rsp+40h]
  0x00000000035c38f5: pop     qword ptr [rsp+20h]
  0x00000000035c38fa: mov     rdx,100000208h    ;   {metadata({type array char})}
  0x00000000035c3904: mov     r8d,r11d
  0x00000000035c3907: call    35b08a0h          ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=492}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000035c390c: mov     r11d,dword ptr [rsp+28h]
  0x00000000035c3911: mov     r10,qword ptr [rsp+30h]
  0x00000000035c3916: mov     rdi,qword ptr [rsp+38h]
  0x00000000035c391b: mov     ebx,dword ptr [rsp+2ch]
  0x00000000035c391f: mov     r13,rax
  0x00000000035c3922: jmp     35c381eh
  0x00000000035c3927: movsxd  r10,r11d          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c392a: jmp     35c37bfh
  0x00000000035c392f: mov     rdi,r9
  0x00000000035c3932: xor     rax,rax
  0x00000000035c3935: rep stos qword ptr [rdi]
  0x00000000035c3938: xor     r8d,r8d
  0x00000000035c393b: mov     r9,r13
  0x00000000035c393e: xor     edi,edi
  0x00000000035c3940: mov     rbp,qword ptr [rsp+40h]
  0x00000000035c3945: mov     qword ptr [rsp+28h],r13
  0x00000000035c394a: nop
  0x00000000035c394b: call    35b5320h          ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=560}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000035c3950: mov     r13,qword ptr [rsp+28h]
  0x00000000035c3955: jmp     35c387ch
  0x00000000035c395a: mov     rdi,r9
  0x00000000035c395d: xor     rax,rax
  0x00000000035c3960: rep stos qword ptr [rdi]  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c3963: jmp     35c387ch
  0x00000000035c3968: mov     edx,0fffffff6h
  0x00000000035c396d: nop
  0x00000000035c396f: call    34f57a0h          ; OopMap{off=596}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00000000035c3974: int3
  0x00000000035c3975: jmp     35c3977h          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000035c3977: mov     rdx,rax
  0x00000000035c397a: jmp     35c397fh          ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000035c397c: mov     rdx,rax           ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000035c397f: add     rsp,60h
  0x00000000035c3983: pop     rbp
  0x00000000035c3984: jmp     35b56e0h          ;   {runtime_call}
  0x00000000035c3989: hlt
  0x00000000035c398a: hlt
  0x00000000035c398b: hlt
  0x00000000035c398c: hlt
  0x00000000035c398d: hlt
  0x00000000035c398e: hlt
  0x00000000035c398f: hlt
  0x00000000035c3990: hlt
  0x00000000035c3991: hlt
  0x00000000035c3992: hlt
  0x00000000035c3993: hlt
  0x00000000035c3994: hlt
  0x00000000035c3995: hlt
  0x00000000035c3996: hlt
  0x00000000035c3997: hlt
  0x00000000035c3998: hlt
  0x00000000035c3999: hlt
  0x00000000035c399a: hlt
  0x00000000035c399b: hlt
  0x00000000035c399c: hlt
  0x00000000035c399d: hlt
  0x00000000035c399e: hlt
  0x00000000035c399f: hlt
[Stub Code]
  0x00000000035c39a0: mov     rbx,0h            ;   {no_reloc}
  0x00000000035c39aa: jmp     35c39aah          ;   {runtime_call}
[Exception Handler]
  0x00000000035c39af: jmp     351fc20h          ;   {runtime_call}
[Deopt Handler Code]
  0x00000000035c39b4: call    35c39b9h
  0x00000000035c39b9: sub     qword ptr [rsp],5h
  0x00000000035c39be: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c39c3: hlt
  0x00000000035c39c4: hlt
  0x00000000035c39c5: hlt
  0x00000000035c39c6: hlt
  0x00000000035c39c7: hlt
<nmethod compile_id='1' compiler='C2' level='4' entry='0x00000000035c3720' size='1784' address='0x00000000035c35d0' relocation_offset='288' insts_offset='336' stub_offset='976' scopes_data_offset='1048' scopes_pcs_offset='1240' dependencies_offset='1688' handler_table_offset='1696' nul_chk_table_offset='1768' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='9797' iicount='9797' stamp='0.455'/>
<writer thread='4796'/>
<task_queued compile_id='18' method='java/lang/String getChars (II[CI)V' bytes='62' count='1152' iicount='1152' level='3' stamp='0.455' comment='tiered' hot_count='1152'/>
<writer thread='14996'/>
Decoding compiled method 0x00000000035c0950:
Code:
Argument 0 is unknown.RIP: 0x35c0a80 Code size: 0x00000078
[Entry Point]
[Constants]
  # {method} {0x0000000017163c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000035c0a80: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c0a84: shl     r10,3h
  0x00000000035c0a88: cmp     rax,r10
  0x00000000035c0a8b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c0a91: nop
  0x00000000035c0a94: nop     word ptr [rax+rax+0h]
  0x00000000035c0a9a: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035c0aa0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c0aa7: push    rbp
  0x00000000035c0aa8: sub     rsp,10h           ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x00000000035c0aac: mov     r11d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00000000035c0ab0: mov     eax,dword ptr [r11+0ch]  ; implicit exception: dispatches to 0x00000000035c0ac0
  0x00000000035c0ab4: add     rsp,10h
  0x00000000035c0ab8: pop     rbp
  0x00000000035c0ab9: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035c0abf: ret
  0x00000000035c0ac0: mov     edx,0fffffff6h
  0x00000000035c0ac5: nop
  0x00000000035c0ac7: call    34f57a0h          ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00000000035c0acc: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x00000000035c0acd: hlt
  0x00000000035c0ace: hlt
  0x00000000035c0acf: hlt
  0x00000000035c0ad0: hlt
  0x00000000035c0ad1: hlt
  0x00000000035c0ad2: hlt
  0x00000000035c0ad3: hlt
  0x00000000035c0ad4: hlt
  0x00000000035c0ad5: hlt
  0x00000000035c0ad6: hlt
  0x00000000035c0ad7: hlt
  0x00000000035c0ad8: hlt
  0x00000000035c0ad9: hlt
  0x00000000035c0ada: hlt
  0x00000000035c0adb: hlt
  0x00000000035c0adc: hlt
  0x00000000035c0add: hlt
  0x00000000035c0ade: hlt
  0x00000000035c0adf: hlt
[Exception Handler]
[Stub Code]
  0x00000000035c0ae0: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035c0ae5: call    35c0aeah
  0x00000000035c0aea: sub     qword ptr [rsp],5h
  0x00000000035c0aef: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c0af4: hlt
  0x00000000035c0af5: hlt
  0x00000000035c0af6: hlt
  0x00000000035c0af7: hlt
<nmethod compile_id='17' compiler='C2' level='4' entry='0x00000000035c0a80' size='584' address='0x00000000035c0950' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='29070' iicount='29070' stamp='0.468'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035bff90:
Code:
Argument 0 is unknown.RIP: 0x35c0140 Code size: 0x00000498
[Entry Point]
[Constants]
  # {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00000000035c0140: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c0144: shl     r10,3h
  0x00000000035c0148: cmp     r10,rax
  0x00000000035c014b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c0151: nop     dword ptr [rax+rax+0h]
  0x00000000035c0159: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c0160: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c0167: push    rbp
  0x00000000035c0168: sub     rsp,60h
  0x00000000035c016c: mov     rbx,rdx
  0x00000000035c016f: mov     r11,r8
  0x00000000035c0172: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c017c: mov     esi,dword ptr [rdx+0dch]
  0x00000000035c0182: add     esi,8h
  0x00000000035c0185: mov     dword ptr [rdx+0dch],esi
  0x00000000035c018b: mov     rdx,17165c70h     ;   {metadata({method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c0195: and     esi,1ff8h
  0x00000000035c019b: cmp     esi,0h
  0x00000000035c019e: je      35c042eh          ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1959)

  0x00000000035c01a4: cmp     r11d,0h
  0x00000000035c01a8: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c01b2: mov     rsi,108h
  0x00000000035c01bc: jnl     35c01cch
  0x00000000035c01c2: mov     rsi,118h
  0x00000000035c01cc: mov     rdi,qword ptr [rdx+rsi]
  0x00000000035c01d0: lea     rdi,[rdi+1h]
  0x00000000035c01d4: mov     qword ptr [rdx+rsi],rdi
  0x00000000035c01d8: jl      35c03eeh          ;*ifge
                                                ; - java.lang.String::substring@1 (line 1959)

  0x00000000035c01de: mov     r8d,dword ptr [rbx+0ch]  ;*getfield value
                                                ; - java.lang.String::substring@15 (line 1962)

  0x00000000035c01e2: mov     edx,dword ptr [r8+0ch]  ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x00000000035c0445
  0x00000000035c01e6: cmp     r9d,edx
  0x00000000035c01e9: mov     rsi,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c01f3: mov     rdi,138h
  0x00000000035c01fd: jle     35c020dh
  0x00000000035c0203: mov     rdi,148h
  0x00000000035c020d: mov     rax,qword ptr [rsi+rdi]
  0x00000000035c0211: lea     rax,[rax+1h]
  0x00000000035c0215: mov     qword ptr [rsi+rdi],rax
  0x00000000035c0219: jnle    35c03aeh          ;*if_icmple
                                                ; - java.lang.String::substring@19 (line 1962)

  0x00000000035c021f: mov     r13,r9
  0x00000000035c0222: sub     r13d,r11d
  0x00000000035c0225: cmp     r13d,0h
  0x00000000035c0229: mov     rsi,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c0233: mov     rdi,168h
  0x00000000035c023d: jnl     35c024dh
  0x00000000035c0243: mov     rdi,178h
  0x00000000035c024d: mov     rax,qword ptr [rsi+rdi]
  0x00000000035c0251: lea     rax,[rax+1h]
  0x00000000035c0255: mov     qword ptr [rsi+rdi],rax
  0x00000000035c0259: jl      35c036ch          ;*ifge
                                                ; - java.lang.String::substring@36 (line 1966)

  0x00000000035c025f: cmp     r11d,0h
  0x00000000035c0263: mov     rsi,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c026d: mov     rdi,198h
  0x00000000035c0277: jne     35c0287h
  0x00000000035c027d: mov     rdi,1a8h
  0x00000000035c0287: mov     rax,qword ptr [rsi+rdi]
  0x00000000035c028b: lea     rax,[rax+1h]
  0x00000000035c028f: mov     qword ptr [rsi+rdi],rax
  0x00000000035c0293: jne     35c02d2h          ;*ifne
                                                ; - java.lang.String::substring@49 (line 1969)

  0x00000000035c0299: cmp     r9d,edx
  0x00000000035c029c: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c02a6: mov     rsi,1b8h
  0x00000000035c02b0: jne     35c02c0h
  0x00000000035c02b6: mov     rsi,1c8h
  0x00000000035c02c0: mov     rdi,qword ptr [rdx+rsi]
  0x00000000035c02c4: lea     rdi,[rdi+1h]
  0x00000000035c02c8: mov     qword ptr [rdx+rsi],rdi
  0x00000000035c02cc: je      35c034dh          ;*if_icmpne
                                                ; - java.lang.String::substring@58 (line 1969)

  0x00000000035c02d2: mov     rdx,1000016d0h    ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000035c02dc: mov     rax,qword ptr [r15+60h]
  0x00000000035c02e0: lea     rdi,[rax+18h]
  0x00000000035c02e4: cmp     rdi,qword ptr [r15+70h]
  0x00000000035c02e8: jnbe    35c044ah
  0x00000000035c02ee: mov     qword ptr [r15+60h],rdi
  0x00000000035c02f2: mov     rcx,qword ptr [rdx+0a8h]
  0x00000000035c02f9: mov     qword ptr [rax],rcx
  0x00000000035c02fc: mov     rcx,rdx
  0x00000000035c02ff: shr     rcx,3h
  0x00000000035c0303: mov     dword ptr [rax+8h],ecx
  0x00000000035c0306: xor     rcx,rcx
  0x00000000035c0309: mov     dword ptr [rax+0ch],ecx
  0x00000000035c030c: xor     rcx,rcx
  0x00000000035c030f: mov     qword ptr [rax+10h],rcx  ;*new
                                                ; - java.lang.String::substring@65 (line 1969)

  0x00000000035c0313: mov     r9,rax
  0x00000000035c0316: mov     rdi,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c0320: add     qword ptr [rdi+1f0h],1h
  0x00000000035c0328: mov     r9,r11
  0x00000000035c032b: mov     rdi,r13
  0x00000000035c032e: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)

  0x00000000035c0331: mov     qword ptr [rsp+30h],rax
  0x00000000035c0336: nop
  0x00000000035c0337: call    34f61a0h          ; OopMap{[48]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x00000000035c033c: mov     rax,qword ptr [rsp+30h]  ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00000000035c0341: add     rsp,60h
  0x00000000035c0345: pop     rbp
  0x00000000035c0346: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c034c: ret
  0x00000000035c034d: mov     rax,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c0357: inc     dword ptr [rax+1d8h]
  0x00000000035c035d: mov     rax,rbx           ;*goto
                                                ; - java.lang.String::substring@62 (line 1969)

  0x00000000035c0360: add     rsp,60h
  0x00000000035c0364: pop     rbp
  0x00000000035c0365: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c036b: ret                       ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x00000000035c036c: nop     dword ptr [rax+0h]
  0x00000000035c0370: jmp     35c0466h          ;   {no_reloc}
  0x00000000035c0375: add     byte ptr [rax],al
  0x00000000035c0377: add     byte ptr [rax],al
  0x00000000035c0379: add     cl,ch
  0x00000000035c037b: db      0f1h
  0x00000000035c037c: add     byte ptr [rax],al
  0x00000000035c037e: add     byte ptr [rbx+rcx*4+0ffffffffffffffc0h],cl
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)

  0x00000000035c0382: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c038c: add     qword ptr [rdx+188h],1h
  0x00000000035c0394: mov     r8,r13
  0x00000000035c0397: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)

  0x00000000035c039a: mov     qword ptr [rsp+38h],rax
  0x00000000035c039f: call    34f61a0h          ; OopMap{[56]=Oop off=612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x00000000035c03a4: mov     rax,qword ptr [rsp+38h]
  0x00000000035c03a9: jmp     35c04f4h          ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x00000000035c03ae: nop
  0x00000000035c03b0: jmp     35c048ch          ;   {no_reloc}
  0x00000000035c03b5: add     byte ptr [rax],al
  0x00000000035c03b7: add     byte ptr [rax],al
  0x00000000035c03b9: add     cl,ch
  0x00000000035c03bb: xlat    byte ptr [rbx]
  0x00000000035c03bc: add     byte ptr [rax],al
  0x00000000035c03be: add     byte ptr [rbx+rcx*4+0ffffffffffffffc0h],cl
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)

  0x00000000035c03c2: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c03cc: add     qword ptr [rdx+158h],1h
  0x00000000035c03d4: mov     r8,r9
  0x00000000035c03d7: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)

  0x00000000035c03da: mov     qword ptr [rsp+40h],rax
  0x00000000035c03df: call    34f61a0h          ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x00000000035c03e4: mov     rax,qword ptr [rsp+40h]
  0x00000000035c03e9: jmp     35c04f4h          ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x00000000035c03ee: nop
  0x00000000035c03f0: jmp     35c04b2h          ;   {no_reloc}
  0x00000000035c03f5: add     byte ptr [rax],al
  0x00000000035c03f7: add     byte ptr [rax],al
  0x00000000035c03f9: add     cl,ch
  0x00000000035c03fb: mov     ebp,4c000000h     ;*new  ; - java.lang.String::substring@4 (line 1960)

  0x00000000035c0400: mov     eax,eax
  0x00000000035c0402: mov     rdx,17413fe0h     ;   {metadata(method data for {method} {0x0000000017165c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c040c: add     qword ptr [rdx+128h],1h
  0x00000000035c0414: mov     r8,r11
  0x00000000035c0417: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)

  0x00000000035c041a: mov     qword ptr [rsp+48h],rax
  0x00000000035c041f: call    34f61a0h          ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x00000000035c0424: mov     rax,qword ptr [rsp+48h]
  0x00000000035c0429: jmp     35c04f4h
  0x00000000035c042e: mov     qword ptr [rsp+8h],rdx
  0x00000000035c0433: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c043b: call    35b0d20h          ; OopMap{rbx=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x00000000035c0440: jmp     35c01a4h
  0x00000000035c0445: call    35acf00h          ; OopMap{rbx=Oop r8=Oop off=778}
                                                ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x00000000035c044a: mov     rdx,rdx
  0x00000000035c044d: call    35ad680h          ; OopMap{rbx=Oop r8=Oop off=786}
                                                ;*new  ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x00000000035c0452: jmp     35c0313h
  0x00000000035c0457: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c0461: mov     eax,0a050f00h
  0x00000000035c0466: call    35aeda0h          ; OopMap{off=811}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00000000035c046b: jmp     35c0370h
  0x00000000035c0470: mov     rdx,rdx
  0x00000000035c0473: call    35ad3a0h          ; OopMap{off=824}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x00000000035c0478: jmp     35c037fh
  0x00000000035c047d: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c0487: mov     eax,0a050f00h
  0x00000000035c048c: call    35aeda0h          ; OopMap{off=849}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00000000035c0491: jmp     35c03b0h
  0x00000000035c0496: mov     rdx,rdx
  0x00000000035c0499: call    35ad3a0h          ; OopMap{off=862}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x00000000035c049e: jmp     35c03bfh
  0x00000000035c04a3: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c04ad: mov     eax,0a050f00h
  0x00000000035c04b2: call    35aeda0h          ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00000000035c04b7: jmp     35c03f0h
  0x00000000035c04bc: mov     rdx,rdx
  0x00000000035c04bf: call    35ad3a0h          ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x00000000035c04c4: jmp     35c03ffh
  0x00000000035c04c9: nop
  0x00000000035c04ca: nop
  0x00000000035c04cb: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c04d2: mov     r10,0h
  0x00000000035c04dc: mov     qword ptr [r15+2a8h],r10
  0x00000000035c04e3: mov     r10,0h
  0x00000000035c04ed: mov     qword ptr [r15+2b0h],r10
  0x00000000035c04f4: add     rsp,60h
  0x00000000035c04f8: pop     rbp
  0x00000000035c04f9: jmp     351f920h          ;   {runtime_call}
  0x00000000035c04fe: hlt
  0x00000000035c04ff: hlt
[Stub Code]
  0x00000000035c0500: nop                       ;   {no_reloc}
  0x00000000035c0501: nop
  0x00000000035c0502: nop
  0x00000000035c0503: nop
  0x00000000035c0504: nop
  0x00000000035c0505: mov     rbx,0h            ;   {static_stub}
  0x00000000035c050f: jmp     35c050fh          ;   {runtime_call}
  0x00000000035c0514: nop
  0x00000000035c0515: mov     rbx,0h            ;   {static_stub}
  0x00000000035c051f: jmp     35c051fh          ;   {runtime_call}
  0x00000000035c0524: nop
  0x00000000035c0525: mov     rbx,0h            ;   {static_stub}
  0x00000000035c052f: jmp     35c052fh          ;   {runtime_call}
  0x00000000035c0534: nop
  0x00000000035c0535: mov     rbx,0h            ;   {static_stub}
  0x00000000035c053f: jmp     35c053fh          ;   {runtime_call}
[Exception Handler]
  0x00000000035c0544: call    35b03a0h          ;   {runtime_call}
  0x00000000035c0549: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c054e: sub     rsp,80h
  0x00000000035c0555: mov     qword ptr [rsp+78h],rax
  0x00000000035c055a: mov     qword ptr [rsp+70h],rcx
  0x00000000035c055f: mov     qword ptr [rsp+68h],rdx
  0x00000000035c0564: mov     qword ptr [rsp+60h],rbx
  0x00000000035c0569: mov     qword ptr [rsp+50h],rbp
  0x00000000035c056e: mov     qword ptr [rsp+48h],rsi
  0x00000000035c0573: mov     qword ptr [rsp+40h],rdi
  0x00000000035c0578: mov     qword ptr [rsp+38h],r8
  0x00000000035c057d: mov     qword ptr [rsp+30h],r9
  0x00000000035c0582: mov     qword ptr [rsp+28h],r10
  0x00000000035c0587: mov     qword ptr [rsp+20h],r11
  0x00000000035c058c: mov     qword ptr [rsp+18h],r12
  0x00000000035c0591: mov     qword ptr [rsp+10h],r13
  0x00000000035c0596: mov     qword ptr [rsp+8h],r14
  0x00000000035c059b: mov     qword ptr [rsp],r15
  0x00000000035c059f: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c05a9: mov     rdx,35c0549h      ;   {internal_word}
  0x00000000035c05b3: mov     r8,rsp
  0x00000000035c05b6: and     rsp,0fffffffffffffff0h
  0x00000000035c05ba: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c05bf: hlt
[Deopt Handler Code]
  0x00000000035c05c0: mov     r10,35c05c0h      ;   {section_word}
  0x00000000035c05ca: push    r10
  0x00000000035c05cc: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c05d1: hlt
  0x00000000035c05d2: hlt
  0x00000000035c05d3: hlt
  0x00000000035c05d4: hlt
  0x00000000035c05d5: hlt
  0x00000000035c05d6: hlt
  0x00000000035c05d7: hlt
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00000000035c0140' size='2480' address='0x00000000035bff90' relocation_offset='288' insts_offset='432' stub_offset='1392' scopes_data_offset='1616' scopes_pcs_offset='1880' dependencies_offset='2456' nul_chk_table_offset='2464' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='257' iicount='257' stamp='0.490'/>
<writer thread='1512'/>
Decoding compiled method 0x00000000035c1a90:
Code:
Argument 0 is unknown.RIP: 0x35c1be0 Code size: 0x000001b8
[Entry Point]
[Constants]
  # {method} {0x0000000017165140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000035c1be0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c1be4: shl     r10,3h
  0x00000000035c1be8: cmp     rax,r10
  0x00000000035c1beb: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c1bf1: nop
  0x00000000035c1bf4: nop     word ptr [rax+rax+0h]
  0x00000000035c1bfa: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035c1c00: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c1c07: push    rbp
  0x00000000035c1c08: sub     rsp,30h           ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x00000000035c1c0c: mov     r10,rdx
  0x00000000035c1c0f: mov     r11d,dword ptr [rdx+0ch]
                                                ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00000000035c1c13: mov     ebp,dword ptr [r11+0ch]  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00000000035c1d55
  0x00000000035c1c17: test    r9d,r9d
  0x00000000035c1c1a: jl      35c1d1dh          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000035c1c20: mov     eax,0ffffffffh
  0x00000000035c1c25: cmp     r9d,ebp
  0x00000000035c1c28: jnl     35c1ce3h          ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00000000035c1c2e: cmp     r8d,10000h
  0x00000000035c1c35: jnl     35c1d39h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000035c1c3b: cmp     r9d,ebp
  0x00000000035c1c3e: jnb     35c1d03h
  0x00000000035c1c44: mov     r10d,ebp
  0x00000000035c1c47: dec     r10d
  0x00000000035c1c4a: cmp     r10d,ebp
  0x00000000035c1c4d: jnb     35c1d03h
  0x00000000035c1c53: mov     ebx,r9d
  0x00000000035c1c56: inc     ebx               ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000035c1c58: movzx   edi,word ptr [r11+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1c5e: cmp     edi,r8d
  0x00000000035c1c61: je      35c1cfeh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1c67: inc     r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000035c1c6a: cmp     r9d,ebx
  0x00000000035c1c6d: jl      35c1c58h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000035c1c6f: mov     edx,ebp
  0x00000000035c1c71: add     edx,0fffffffdh
  0x00000000035c1c74: mov     ecx,80000000h
  0x00000000035c1c79: cmp     r10d,edx
  0x00000000035c1c7c: cmovl   edx,ecx
  0x00000000035c1c7f: cmp     r9d,edx
  0x00000000035c1c82: jnl     35c1cc8h
  0x00000000035c1c84: nop     word ptr [rax+rax+0h]
  0x00000000035c1c8a: nop     word ptr [rax+rax+0h]  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000035c1c90: movzx   ecx,word ptr [r11+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1c96: cmp     ecx,r8d
  0x00000000035c1c99: je      35c1cfeh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1c9b: movsxd  r10,r9d
  0x00000000035c1c9e: movzx   ebx,word ptr [r11+r10*2+12h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1ca4: cmp     ebx,r8d
  0x00000000035c1ca7: je      35c1cefh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1ca9: movzx   ecx,word ptr [r11+r10*2+14h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1caf: cmp     ecx,r8d
  0x00000000035c1cb2: je      35c1cf4h          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1cb4: movzx   r10d,word ptr [r11+r10*2+16h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1cba: cmp     r10d,r8d
  0x00000000035c1cbd: je      35c1cfah          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1cbf: add     r9d,4h            ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000035c1cc3: cmp     r9d,edx
  0x00000000035c1cc6: jl      35c1c90h          ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000035c1cc8: cmp     r9d,ebp
  0x00000000035c1ccb: jnl     35c1ce3h
  0x00000000035c1ccd: nop                       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000035c1cd0: movzx   r10d,word ptr [r11+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000035c1cd6: cmp     r10d,r8d
  0x00000000035c1cd9: je      35c1cfeh          ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000035c1cdb: inc     r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000035c1cde: cmp     r9d,ebp
  0x00000000035c1ce1: jl      35c1cd0h          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000035c1ce3: add     rsp,30h
  0x00000000035c1ce7: pop     rbp
  0x00000000035c1ce8: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035c1cee: ret
  0x00000000035c1cef: inc     r9d
  0x00000000035c1cf2: jmp     35c1cfeh
  0x00000000035c1cf4: add     r9d,2h
  0x00000000035c1cf8: jmp     35c1cfeh
  0x00000000035c1cfa: add     r9d,3h            ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000035c1cfe: mov     eax,r9d
  0x00000000035c1d01: jmp     35c1ce3h
  0x00000000035c1d03: mov     edx,0ffffff86h
  0x00000000035c1d08: mov     dword ptr [rsp],r8d
  0x00000000035c1d0c: mov     dword ptr [rsp+4h],r11d
  0x00000000035c1d11: mov     dword ptr [rsp+8h],r9d
  0x00000000035c1d16: nop
  0x00000000035c1d17: call    34f57a0h          ; OopMap{[4]=NarrowOop off=316}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x00000000035c1d1c: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000035c1d1d: mov     edx,0ffffff65h
  0x00000000035c1d22: mov     dword ptr [rsp],r8d
  0x00000000035c1d26: mov     dword ptr [rsp+8h],r9d
  0x00000000035c1d2b: mov     qword ptr [rsp+10h],r10
  0x00000000035c1d30: nop
  0x00000000035c1d33: call    34f57a0h          ; OopMap{[16]=Oop off=344}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x00000000035c1d38: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000035c1d39: mov     edx,0ffffff65h
  0x00000000035c1d3e: mov     dword ptr [rsp+4h],r9d
  0x00000000035c1d43: mov     dword ptr [rsp+8h],r8d
  0x00000000035c1d48: mov     qword ptr [rsp+10h],r10
  0x00000000035c1d4d: nop
  0x00000000035c1d4f: call    34f57a0h          ; OopMap{[16]=Oop off=372}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x00000000035c1d54: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000035c1d55: mov     edx,0fffffff6h
  0x00000000035c1d5a: nop
  0x00000000035c1d5b: call    34f57a0h          ; OopMap{off=384}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00000000035c1d60: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x00000000035c1d61: hlt
  0x00000000035c1d62: hlt
  0x00000000035c1d63: hlt
  0x00000000035c1d64: hlt
  0x00000000035c1d65: hlt
  0x00000000035c1d66: hlt
  0x00000000035c1d67: hlt
  0x00000000035c1d68: hlt
  0x00000000035c1d69: hlt
  0x00000000035c1d6a: hlt
  0x00000000035c1d6b: hlt
  0x00000000035c1d6c: hlt
  0x00000000035c1d6d: hlt
  0x00000000035c1d6e: hlt
  0x00000000035c1d6f: hlt
  0x00000000035c1d70: hlt
  0x00000000035c1d71: hlt
  0x00000000035c1d72: hlt
  0x00000000035c1d73: hlt
  0x00000000035c1d74: hlt
  0x00000000035c1d75: hlt
  0x00000000035c1d76: hlt
  0x00000000035c1d77: hlt
  0x00000000035c1d78: hlt
  0x00000000035c1d79: hlt
  0x00000000035c1d7a: hlt
  0x00000000035c1d7b: hlt
  0x00000000035c1d7c: hlt
  0x00000000035c1d7d: hlt
  0x00000000035c1d7e: hlt
  0x00000000035c1d7f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035c1d80: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035c1d85: call    35c1d8ah
  0x00000000035c1d8a: sub     qword ptr [rsp],5h
  0x00000000035c1d8f: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c1d94: hlt
  0x00000000035c1d95: hlt
  0x00000000035c1d96: hlt
  0x00000000035c1d97: hlt
<nmethod compile_id='15' compiler='C2' level='4' entry='0x00000000035c1be0' size='1576' address='0x00000000035c1a90' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='784' scopes_pcs_offset='944' dependencies_offset='1552' nul_chk_table_offset='1560' method='java/lang/String indexOf (II)I' bytes='70' count='859' backedge_count='31469' iicount='859' stamp='0.507'/>
<writer thread='4796'/>
<task_queued compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.508' comment='tiered' hot_count='512'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035c0f90:
Code:
Argument 0 is unknown.RIP: 0x35c1140 Code size: 0x00000438
[Entry Point]
[Constants]
  # {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000035c1140: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c1144: shl     r10,3h
  0x00000000035c1148: cmp     r10,rax
  0x00000000035c114b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c1151: nop     dword ptr [rax+rax+0h]
  0x00000000035c1159: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c1160: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c1167: push    rbp
  0x00000000035c1168: sub     rsp,60h
  0x00000000035c116c: mov     rbx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c1176: mov     eax,dword ptr [rbx+0dch]
  0x00000000035c117c: add     eax,8h
  0x00000000035c117f: mov     dword ptr [rbx+0dch],eax
  0x00000000035c1185: mov     rbx,171641c0h     ;   {metadata({method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c118f: and     eax,1ff8h
  0x00000000035c1195: cmp     eax,0h
  0x00000000035c1198: je      35c13c6h          ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00000000035c119e: cmp     r8d,0h
  0x00000000035c11a2: mov     rbx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c11ac: mov     rax,108h
  0x00000000035c11b6: jnl     35c11c6h
  0x00000000035c11bc: mov     rax,118h
  0x00000000035c11c6: mov     rcx,qword ptr [rbx+rax]
  0x00000000035c11ca: lea     rcx,[rcx+1h]
  0x00000000035c11ce: mov     qword ptr [rbx+rax],rcx
  0x00000000035c11d2: jl      35c1386h          ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00000000035c11d8: mov     edx,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00000000035c11db: mov     ebx,dword ptr [rdx+0ch]  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00000000035c13dd
  0x00000000035c11de: cmp     r9d,ebx
  0x00000000035c11e1: mov     rbx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c11eb: mov     rax,138h
  0x00000000035c11f5: jle     35c1205h
  0x00000000035c11fb: mov     rax,148h
  0x00000000035c1205: mov     rcx,qword ptr [rbx+rax]
  0x00000000035c1209: lea     rcx,[rcx+1h]
  0x00000000035c120d: mov     qword ptr [rbx+rax],rcx
  0x00000000035c1211: jnle    35c1346h          ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00000000035c1217: cmp     r8d,r9d
  0x00000000035c121a: mov     rbx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c1224: mov     rax,168h
  0x00000000035c122e: jle     35c123eh
  0x00000000035c1234: mov     rax,178h
  0x00000000035c123e: mov     rcx,qword ptr [rbx+rax]
  0x00000000035c1242: lea     rcx,[rcx+1h]
  0x00000000035c1246: mov     qword ptr [rbx+rax],rcx
  0x00000000035c124a: jnle    35c12feh          ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00000000035c1250: mov     rbx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c125a: add     qword ptr [rbx+198h],1h
  0x00000000035c1262: mov     rbx,r9
  0x00000000035c1265: sub     ebx,r8d
  0x00000000035c1268: mov     r9,rdi
  0x00000000035c126b: mov     rdi,rsi
  0x00000000035c126e: mov     rsi,rbx
  0x00000000035c1271: test    r9,r9
  0x00000000035c1274: je      35c13e2h
  0x00000000035c127a: test    r8d,r8d
  0x00000000035c127d: jl      35c13e2h
  0x00000000035c1283: test    edi,edi
  0x00000000035c1285: jl      35c13e2h
  0x00000000035c128b: lea     rcx,[r8+rsi]
  0x00000000035c128f: cmp     ecx,dword ptr [rdx+0ch]
  0x00000000035c1292: jnbe    35c13e2h
  0x00000000035c1298: lea     rcx,[rdi+rsi]
  0x00000000035c129c: cmp     ecx,dword ptr [r9+0ch]
  0x00000000035c12a0: jnbe    35c13e2h
  0x00000000035c12a6: test    esi,esi
  0x00000000035c12a8: jl      35c13e2h
  0x00000000035c12ae: je      35c12f2h
  0x00000000035c12b4: movsxd  r8,r8d
  0x00000000035c12b7: movsxd  rdi,edi
  0x00000000035c12ba: lea     rcx,[rdx+r8*2+10h]
  0x00000000035c12bf: lea     rdx,[r9+rdi*2+10h]
  0x00000000035c12c4: mov     r8,rsi
  0x00000000035c12c7: sub     rsp,20h
  0x00000000035c12cb: test    esp,0fh
  0x00000000035c12d1: je      35c12e9h
  0x00000000035c12d7: sub     rsp,8h
  0x00000000035c12db: call    3502640h          ;   {runtime_call}
  0x00000000035c12e0: add     rsp,8h
  0x00000000035c12e4: jmp     35c12eeh
  0x00000000035c12e9: call    3502640h          ;   {runtime_call}
  0x00000000035c12ee: add     rsp,20h           ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x00000000035c12f2: add     rsp,60h
  0x00000000035c12f6: pop     rbp
  0x00000000035c12f7: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c12fd: ret                       ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00000000035c12fe: nop
  0x00000000035c1300: jmp     35c1400h          ;   {no_reloc}
  0x00000000035c1305: add     byte ptr [rax],al
  0x00000000035c1307: add     byte ptr [rax],al
  0x00000000035c1309: add     cl,ch
  0x00000000035c130b: sti
  0x00000000035c130c: add     byte ptr [rax],al
  0x00000000035c130e: add     byte ptr [rax+0ffffffffffffff8bh],cl
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00000000035c1311: ror     byte ptr [rax+0ffffffffffffffbeh],1h
                                                ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c1314: mov     byte ptr [rbx+1738h],bl
  0x00000000035c131a: add     byte ptr [rax],al
  0x00000000035c131c: add     qword ptr [rsi+188h],1h
  0x00000000035c1324: sub     r9d,r8d
  0x00000000035c1327: mov     r8,r9
  0x00000000035c132a: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00000000035c132d: mov     qword ptr [rsp+38h],rax
  0x00000000035c1332: nop
  0x00000000035c1333: nop
  0x00000000035c1334: nop
  0x00000000035c1335: nop
  0x00000000035c1336: nop
  0x00000000035c1337: call    34f61a0h          ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00000000035c133c: mov     rax,qword ptr [rsp+38h]
  0x00000000035c1341: jmp     35c148eh          ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00000000035c1346: nop
  0x00000000035c1348: jmp     35c1426h          ;   {no_reloc}
  0x00000000035c134d: add     byte ptr [rax],al
  0x00000000035c134f: add     byte ptr [rax],al
  0x00000000035c1351: add     cl,ch
  0x00000000035c1353: fld     dword ptr [rax]
  0x00000000035c1355: add     byte ptr [rax],al  ;*new
                                                ; - java.lang.String::getChars@22 (line 821)

  0x00000000035c1357: mov     r8,rax
  0x00000000035c135a: mov     rdx,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c1364: add     qword ptr [rdx+158h],1h
  0x00000000035c136c: mov     r8,r9
  0x00000000035c136f: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00000000035c1372: mov     qword ptr [rsp+40h],rax
  0x00000000035c1377: call    34f61a0h          ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00000000035c137c: mov     rax,qword ptr [rsp+40h]
  0x00000000035c1381: jmp     35c148eh          ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00000000035c1386: nop
  0x00000000035c1388: jmp     35c144ch          ;   {no_reloc}
  0x00000000035c138d: add     byte ptr [rax],al
  0x00000000035c138f: add     byte ptr [rax],al
  0x00000000035c1391: add     cl,ch
  0x00000000035c1393: mov     edi,48000000h     ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00000000035c1398: mov     edx,eax
  0x00000000035c139a: mov     rsi,17389b88h     ;   {metadata(method data for {method} {0x00000000171641c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c13a4: add     qword ptr [rsi+128h],1h
  0x00000000035c13ac: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00000000035c13af: mov     qword ptr [rsp+48h],rax
  0x00000000035c13b4: nop
  0x00000000035c13b5: nop
  0x00000000035c13b6: nop
  0x00000000035c13b7: call    34f61a0h          ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00000000035c13bc: mov     rax,qword ptr [rsp+48h]
  0x00000000035c13c1: jmp     35c148eh
  0x00000000035c13c6: mov     qword ptr [rsp+8h],rbx
  0x00000000035c13cb: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c13d3: call    35b0d20h          ; OopMap{rdx=Oop rdi=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00000000035c13d8: jmp     35c119eh
  0x00000000035c13dd: call    35acf00h          ; OopMap{rdi=Oop rdx=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00000000035c13e2: nop
  0x00000000035c13e3: nop
  0x00000000035c13e4: nop
  0x00000000035c13e5: nop
  0x00000000035c13e6: nop
  0x00000000035c13e7: call    34f6620h          ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00000000035c13ec: jmp     35c12f2h
  0x00000000035c13f1: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c13fb: mov     eax,0a050f00h
  0x00000000035c1400: call    35aeda0h          ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000000035c1405: jmp     35c1300h
  0x00000000035c140a: mov     rdx,rdx
  0x00000000035c140d: call    35ad3a0h          ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000000035c1412: jmp     35c130fh
  0x00000000035c1417: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c1421: mov     eax,0a050f00h
  0x00000000035c1426: call    35aeda0h          ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00000000035c142b: jmp     35c1348h
  0x00000000035c1430: mov     rdx,rdx
  0x00000000035c1433: call    35ad3a0h          ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00000000035c1438: jmp     35c1357h
  0x00000000035c143d: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c1447: mov     eax,0a050f00h
  0x00000000035c144c: call    35aeda0h          ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00000000035c1451: jmp     35c1388h
  0x00000000035c1456: mov     rdx,rdx
  0x00000000035c1459: call    35ad3a0h          ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00000000035c145e: jmp     35c1397h
  0x00000000035c1463: nop
  0x00000000035c1464: nop
  0x00000000035c1465: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c146c: mov     r10,0h
  0x00000000035c1476: mov     qword ptr [r15+2a8h],r10
  0x00000000035c147d: mov     r10,0h
  0x00000000035c1487: mov     qword ptr [r15+2b0h],r10
  0x00000000035c148e: add     rsp,60h
  0x00000000035c1492: pop     rbp
  0x00000000035c1493: jmp     351f920h          ;   {runtime_call}
  0x00000000035c1498: hlt
  0x00000000035c1499: hlt
  0x00000000035c149a: hlt
  0x00000000035c149b: hlt
  0x00000000035c149c: hlt
  0x00000000035c149d: hlt
  0x00000000035c149e: hlt
  0x00000000035c149f: hlt
[Stub Code]
  0x00000000035c14a0: nop                       ;   {no_reloc}
  0x00000000035c14a1: nop
  0x00000000035c14a2: nop
  0x00000000035c14a3: nop
  0x00000000035c14a4: nop
  0x00000000035c14a5: mov     rbx,0h            ;   {static_stub}
  0x00000000035c14af: jmp     35c14afh          ;   {runtime_call}
  0x00000000035c14b4: nop
  0x00000000035c14b5: mov     rbx,0h            ;   {static_stub}
  0x00000000035c14bf: jmp     35c14bfh          ;   {runtime_call}
  0x00000000035c14c4: nop
  0x00000000035c14c5: mov     rbx,0h            ;   {static_stub}
  0x00000000035c14cf: jmp     35c14cfh          ;   {runtime_call}
  0x00000000035c14d4: nop
  0x00000000035c14d5: mov     rbx,0h            ;   {static_stub}
  0x00000000035c14df: jmp     35c14dfh          ;   {runtime_call}
[Exception Handler]
  0x00000000035c14e4: call    35b03a0h          ;   {runtime_call}
  0x00000000035c14e9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c14ee: sub     rsp,80h
  0x00000000035c14f5: mov     qword ptr [rsp+78h],rax
  0x00000000035c14fa: mov     qword ptr [rsp+70h],rcx
  0x00000000035c14ff: mov     qword ptr [rsp+68h],rdx
  0x00000000035c1504: mov     qword ptr [rsp+60h],rbx
  0x00000000035c1509: mov     qword ptr [rsp+50h],rbp
  0x00000000035c150e: mov     qword ptr [rsp+48h],rsi
  0x00000000035c1513: mov     qword ptr [rsp+40h],rdi
  0x00000000035c1518: mov     qword ptr [rsp+38h],r8
  0x00000000035c151d: mov     qword ptr [rsp+30h],r9
  0x00000000035c1522: mov     qword ptr [rsp+28h],r10
  0x00000000035c1527: mov     qword ptr [rsp+20h],r11
  0x00000000035c152c: mov     qword ptr [rsp+18h],r12
  0x00000000035c1531: mov     qword ptr [rsp+10h],r13
  0x00000000035c1536: mov     qword ptr [rsp+8h],r14
  0x00000000035c153b: mov     qword ptr [rsp],r15
  0x00000000035c153f: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c1549: mov     rdx,35c14e9h      ;   {internal_word}
  0x00000000035c1553: mov     r8,rsp
  0x00000000035c1556: and     rsp,0fffffffffffffff0h
  0x00000000035c155a: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c155f: hlt
[Deopt Handler Code]
  0x00000000035c1560: mov     r10,35c1560h      ;   {section_word}
  0x00000000035c156a: push    r10
  0x00000000035c156c: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c1571: hlt
  0x00000000035c1572: hlt
  0x00000000035c1573: hlt
  0x00000000035c1574: hlt
  0x00000000035c1575: hlt
  0x00000000035c1576: hlt
  0x00000000035c1577: hlt
<nmethod compile_id='18' compiler='C1' level='3' entry='0x00000000035c1140' size='2256' address='0x00000000035c0f90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='1164' iicount='1164' stamp='0.527'/>
<writer thread='4796'/>
<task_queued compile_id='20' method='java/util/ArrayList size ()I' bytes='5' count='384' iicount='384' level='1' stamp='0.527' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1024' backedge_count='995' iicount='1024' level='3' stamp='0.527' comment='tiered' hot_count='1024'/>
<task_queued compile_id='22' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='271' backedge_count='10240' iicount='271' level='3' stamp='0.528' comment='tiered' hot_count='271'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035c2d10:
Code:
Argument 0 is unknown.RIP: 0x35c2e80 Code size: 0x00000208
[Entry Point]
[Constants]
  # {method} {0x0000000017164e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000035c2e80: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c2e84: shl     r10,3h
  0x00000000035c2e88: cmp     r10,rax
  0x00000000035c2e8b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c2e91: nop     dword ptr [rax+rax+0h]
  0x00000000035c2e99: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c2ea0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c2ea7: push    rbp
  0x00000000035c2ea8: sub     rsp,30h
  0x00000000035c2eac: mov     r9,1741b140h      ;   {metadata(method data for {method} {0x0000000017164e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c2eb6: mov     esi,dword ptr [r9+0dch]
  0x00000000035c2ebd: add     esi,8h
  0x00000000035c2ec0: mov     dword ptr [r9+0dch],esi
  0x00000000035c2ec7: mov     r9,17164e48h      ;   {metadata({method} {0x0000000017164e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c2ed1: and     esi,1ff8h
  0x00000000035c2ed7: cmp     esi,0h
  0x00000000035c2eda: je      35c2f8bh          ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x00000000035c2ee0: mov     r9,rdx
  0x00000000035c2ee3: mov     rsi,1741b140h     ;   {metadata(method data for {method} {0x0000000017164e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c2eed: mov     r9d,dword ptr [r9+8h]
  0x00000000035c2ef1: shl     r9,3h
  0x00000000035c2ef5: cmp     r9,qword ptr [rsi+110h]
  0x00000000035c2efc: jne     35c2f0bh
  0x00000000035c2efe: add     qword ptr [rsi+118h],1h
  0x00000000035c2f06: jmp     35c2f71h
  0x00000000035c2f0b: cmp     r9,qword ptr [rsi+120h]
  0x00000000035c2f12: jne     35c2f21h
  0x00000000035c2f14: add     qword ptr [rsi+128h],1h
  0x00000000035c2f1c: jmp     35c2f71h
  0x00000000035c2f21: cmp     qword ptr [rsi+110h],0h
  0x00000000035c2f2c: jne     35c2f45h
  0x00000000035c2f2e: mov     qword ptr [rsi+110h],r9
  0x00000000035c2f35: mov     qword ptr [rsi+118h],1h
  0x00000000035c2f40: jmp     35c2f71h
  0x00000000035c2f45: cmp     qword ptr [rsi+120h],0h
  0x00000000035c2f50: jne     35c2f69h
  0x00000000035c2f52: mov     qword ptr [rsi+120h],r9
  0x00000000035c2f59: mov     qword ptr [rsi+128h],1h
  0x00000000035c2f64: jmp     35c2f71h
  0x00000000035c2f69: add     qword ptr [rsi+108h],1h
  0x00000000035c2f71: mov     r9d,0h            ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00000000035c2f77: call    34f61a0h          ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00000000035c2f7c: and     eax,1h
  0x00000000035c2f7f: add     rsp,30h
  0x00000000035c2f83: pop     rbp
  0x00000000035c2f84: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c2f8a: ret
  0x00000000035c2f8b: mov     qword ptr [rsp+8h],r9
  0x00000000035c2f90: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c2f98: call    35b0d20h          ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00000000035c2f9d: jmp     35c2ee0h
  0x00000000035c2fa2: nop
  0x00000000035c2fa3: nop
  0x00000000035c2fa4: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c2fab: mov     r10,0h
  0x00000000035c2fb5: mov     qword ptr [r15+2a8h],r10
  0x00000000035c2fbc: mov     r10,0h
  0x00000000035c2fc6: mov     qword ptr [r15+2b0h],r10
  0x00000000035c2fcd: add     rsp,30h
  0x00000000035c2fd1: pop     rbp
  0x00000000035c2fd2: jmp     351f920h          ;   {runtime_call}
  0x00000000035c2fd7: hlt
  0x00000000035c2fd8: hlt
  0x00000000035c2fd9: hlt
  0x00000000035c2fda: hlt
  0x00000000035c2fdb: hlt
  0x00000000035c2fdc: hlt
  0x00000000035c2fdd: hlt
  0x00000000035c2fde: hlt
  0x00000000035c2fdf: hlt
[Stub Code]
  0x00000000035c2fe0: nop                       ;   {no_reloc}
  0x00000000035c2fe1: nop
  0x00000000035c2fe2: nop
  0x00000000035c2fe3: nop
  0x00000000035c2fe4: nop
  0x00000000035c2fe5: mov     rbx,0h            ;   {static_stub}
  0x00000000035c2fef: jmp     35c2fefh          ;   {runtime_call}
[Exception Handler]
  0x00000000035c2ff4: call    35b03a0h          ;   {runtime_call}
  0x00000000035c2ff9: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c2ffe: sub     rsp,80h
  0x00000000035c3005: mov     qword ptr [rsp+78h],rax
  0x00000000035c300a: mov     qword ptr [rsp+70h],rcx
  0x00000000035c300f: mov     qword ptr [rsp+68h],rdx
  0x00000000035c3014: mov     qword ptr [rsp+60h],rbx
  0x00000000035c3019: mov     qword ptr [rsp+50h],rbp
  0x00000000035c301e: mov     qword ptr [rsp+48h],rsi
  0x00000000035c3023: mov     qword ptr [rsp+40h],rdi
  0x00000000035c3028: mov     qword ptr [rsp+38h],r8
  0x00000000035c302d: mov     qword ptr [rsp+30h],r9
  0x00000000035c3032: mov     qword ptr [rsp+28h],r10
  0x00000000035c3037: mov     qword ptr [rsp+20h],r11
  0x00000000035c303c: mov     qword ptr [rsp+18h],r12
  0x00000000035c3041: mov     qword ptr [rsp+10h],r13
  0x00000000035c3046: mov     qword ptr [rsp+8h],r14
  0x00000000035c304b: mov     qword ptr [rsp],r15
  0x00000000035c304f: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c3059: mov     rdx,35c2ff9h      ;   {internal_word}
  0x00000000035c3063: mov     r8,rsp
  0x00000000035c3066: and     rsp,0fffffffffffffff0h
  0x00000000035c306a: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c306f: hlt
[Deopt Handler Code]
  0x00000000035c3070: mov     r10,35c3070h      ;   {section_word}
  0x00000000035c307a: push    r10
  0x00000000035c307c: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c3081: hlt
  0x00000000035c3082: hlt
  0x00000000035c3083: hlt
  0x00000000035c3084: hlt
  0x00000000035c3085: hlt
  0x00000000035c3086: hlt
  0x00000000035c3087: hlt
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00000000035c2e80' size='1040' address='0x00000000035c2d10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='585' iicount='585' stamp='0.545'/>
<writer thread='4796'/>
<task_queued compile_id='23' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='768' backedge_count='24' iicount='768' level='3' stamp='0.545' comment='tiered' hot_count='768'/>
<writer thread='7448'/>
<task_queued compile_id='24' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' level='3' stamp='0.545' comment='tiered' hot_count='896'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035c8290:
Code:
Argument 0 is unknown.RIP: 0x35c8400 Code size: 0x00000330
[Entry Point]
[Constants]
  # {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000035c8400: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c8404: shl     r10,3h
  0x00000000035c8408: cmp     r10,rax
  0x00000000035c840b: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c8411: nop     dword ptr [rax+rax+0h]
  0x00000000035c8419: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c8420: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c8427: push    rbp
  0x00000000035c8428: sub     rsp,30h
  0x00000000035c842c: mov     rax,17395030h     ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c8436: mov     esi,dword ptr [rax+0dch]
  0x00000000035c843c: add     esi,8h
  0x00000000035c843f: mov     dword ptr [rax+0dch],esi
  0x00000000035c8445: mov     rax,17164db0h     ;   {metadata({method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c844f: and     esi,1ff8h
  0x00000000035c8455: cmp     esi,0h
  0x00000000035c8458: je      35c860dh          ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00000000035c845e: mov     eax,dword ptr [rdx+0ch]  ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00000000035c8461: mov     esi,dword ptr [r8+0ch]  ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ; implicit exception: dispatches to 0x00000000035c8624
  0x00000000035c8465: mov     edi,dword ptr [rsi+0ch]  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00000000035c8629
  0x00000000035c8468: cmp     r9d,0h
  0x00000000035c846c: mov     rbx,17395030h     ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c8476: mov     rdx,108h
  0x00000000035c8480: jl      35c8490h
  0x00000000035c8486: mov     rdx,118h
  0x00000000035c8490: mov     rcx,qword ptr [rbx+rdx]
  0x00000000035c8494: lea     rcx,[rcx+1h]
  0x00000000035c8498: mov     qword ptr [rbx+rdx],rcx
  0x00000000035c849c: jl      35c85dah          ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000000035c84a2: mov     ebx,dword ptr [rax+0ch]  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00000000035c862e
  0x00000000035c84a5: sub     ebx,edi
  0x00000000035c84a7: cmp     r9d,ebx
  0x00000000035c84aa: mov     rbx,17395030h     ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c84b4: mov     rdx,128h
  0x00000000035c84be: jle     35c84ceh
  0x00000000035c84c4: mov     rdx,138h
  0x00000000035c84ce: mov     rcx,qword ptr [rbx+rdx]
  0x00000000035c84d2: lea     rcx,[rcx+1h]
  0x00000000035c84d6: mov     qword ptr [rbx+rdx],rcx
  0x00000000035c84da: jnle    35c85dah          ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00000000035c84e0: mov     ebx,0h
  0x00000000035c84e5: jmp     35c859ah          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000035c84ea: nop     word ptr [rax+rax+0h]
  0x00000000035c84f0: mov     rdx,r9
  0x00000000035c84f3: inc     edx
  0x00000000035c84f5: movsxd  rcx,r9d
  0x00000000035c84f8: cmp     r9d,dword ptr [rax+0ch]
  0x00000000035c84fc: jnb     35c8633h
  0x00000000035c8502: movzx   ecx,word ptr [rax+rcx*2+10h]
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00000000035c8507: mov     r8,rbx
  0x00000000035c850a: inc     r8d
  0x00000000035c850d: movsxd  r9,ebx
  0x00000000035c8510: cmp     ebx,dword ptr [rsi+0ch]
  0x00000000035c8513: jnb     35c863ch
  0x00000000035c8519: movzx   ebx,word ptr [rsi+r9*2+10h]
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00000000035c851f: mov     r9,17395030h      ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c8529: mov     r11d,dword ptr [r9+0e0h]
  0x00000000035c8530: add     r11d,8h
  0x00000000035c8534: mov     dword ptr [r9+0e0h],r11d
  0x00000000035c853b: mov     r9,17164db0h      ;   {metadata({method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c8545: and     r11d,0fff8h
  0x00000000035c854c: cmp     r11d,0h
  0x00000000035c8550: je      35c8645h          ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000035c8556: test    dword ptr [15c0100h],eax
                                                ;   {poll}
  0x00000000035c855c: cmp     ecx,ebx
  0x00000000035c855e: mov     rbx,17395030h     ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c8568: mov     rcx,168h
  0x00000000035c8572: je      35c8582h
  0x00000000035c8578: mov     rcx,178h
  0x00000000035c8582: mov     r9,qword ptr [rbx+rcx]
  0x00000000035c8586: lea     r9,[r9+1h]
  0x00000000035c858a: mov     qword ptr [rbx+rcx],r9
  0x00000000035c858e: jne     35c85ebh          ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000035c8594: mov     rbx,r8
  0x00000000035c8597: mov     r9,rdx            ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000035c859a: dec     edi
  0x00000000035c859c: cmp     edi,0h
  0x00000000035c859f: mov     rdx,17395030h     ;   {metadata(method data for {method} {0x0000000017164db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000035c85a9: mov     rcx,148h
  0x00000000035c85b3: jl      35c85c3h
  0x00000000035c85b9: mov     rcx,158h
  0x00000000035c85c3: mov     r8,qword ptr [rdx+rcx]
  0x00000000035c85c7: lea     r8,[r8+1h]
  0x00000000035c85cb: mov     qword ptr [rdx+rcx],r8
  0x00000000035c85cf: jl      35c85fch
  0x00000000035c85d5: jmp     35c84f0h          ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00000000035c85da: mov     eax,0h
  0x00000000035c85df: add     rsp,30h
  0x00000000035c85e3: pop     rbp
  0x00000000035c85e4: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c85ea: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00000000035c85eb: mov     eax,0h
  0x00000000035c85f0: add     rsp,30h
  0x00000000035c85f4: pop     rbp
  0x00000000035c85f5: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c85fb: ret                       ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00000000035c85fc: mov     eax,1h
  0x00000000035c8601: add     rsp,30h
  0x00000000035c8605: pop     rbp
  0x00000000035c8606: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c860c: ret
  0x00000000035c860d: mov     qword ptr [rsp+8h],rax
  0x00000000035c8612: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c861a: call    35b0d20h          ; OopMap{rdx=Oop r8=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00000000035c861f: jmp     35c845eh
  0x00000000035c8624: call    35acf00h          ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00000000035c8629: call    35acf00h          ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00000000035c862e: call    35acf00h          ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00000000035c8633: mov     qword ptr [rsp],r9
  0x00000000035c8637: call    351f480h          ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00000000035c863c: mov     qword ptr [rsp],rbx
  0x00000000035c8640: call    351f480h          ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00000000035c8645: mov     qword ptr [rsp+8h],r9
  0x00000000035c864a: mov     qword ptr [rsp],41h
  0x00000000035c8652: call    35b0d20h          ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00000000035c8657: jmp     35c8556h
  0x00000000035c865c: nop
  0x00000000035c865d: nop
  0x00000000035c865e: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c8665: mov     r10,0h
  0x00000000035c866f: mov     qword ptr [r15+2a8h],r10
  0x00000000035c8676: mov     r10,0h
  0x00000000035c8680: mov     qword ptr [r15+2b0h],r10
  0x00000000035c8687: add     rsp,30h
  0x00000000035c868b: pop     rbp
  0x00000000035c868c: jmp     351f920h          ;   {runtime_call}
  0x00000000035c8691: hlt
  0x00000000035c8692: hlt
  0x00000000035c8693: hlt
  0x00000000035c8694: hlt
  0x00000000035c8695: hlt
  0x00000000035c8696: hlt
  0x00000000035c8697: hlt
  0x00000000035c8698: hlt
  0x00000000035c8699: hlt
  0x00000000035c869a: hlt
  0x00000000035c869b: hlt
  0x00000000035c869c: hlt
  0x00000000035c869d: hlt
  0x00000000035c869e: hlt
  0x00000000035c869f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035c86a0: call    35b03a0h          ;   {no_reloc}
  0x00000000035c86a5: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c86aa: sub     rsp,80h
  0x00000000035c86b1: mov     qword ptr [rsp+78h],rax
  0x00000000035c86b6: mov     qword ptr [rsp+70h],rcx
  0x00000000035c86bb: mov     qword ptr [rsp+68h],rdx
  0x00000000035c86c0: mov     qword ptr [rsp+60h],rbx
  0x00000000035c86c5: mov     qword ptr [rsp+50h],rbp
  0x00000000035c86ca: mov     qword ptr [rsp+48h],rsi
  0x00000000035c86cf: mov     qword ptr [rsp+40h],rdi
  0x00000000035c86d4: mov     qword ptr [rsp+38h],r8
  0x00000000035c86d9: mov     qword ptr [rsp+30h],r9
  0x00000000035c86de: mov     qword ptr [rsp+28h],r10
  0x00000000035c86e3: mov     qword ptr [rsp+20h],r11
  0x00000000035c86e8: mov     qword ptr [rsp+18h],r12
  0x00000000035c86ed: mov     qword ptr [rsp+10h],r13
  0x00000000035c86f2: mov     qword ptr [rsp+8h],r14
  0x00000000035c86f7: mov     qword ptr [rsp],r15
  0x00000000035c86fb: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c8705: mov     rdx,35c86a5h      ;   {internal_word}
  0x00000000035c870f: mov     r8,rsp
  0x00000000035c8712: and     rsp,0fffffffffffffff0h
  0x00000000035c8716: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c871b: hlt
[Deopt Handler Code]
  0x00000000035c871c: mov     r10,35c871ch      ;   {section_word}
  0x00000000035c8726: push    r10
  0x00000000035c8728: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c872d: hlt
  0x00000000035c872e: hlt
  0x00000000035c872f: hlt
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00000000035c8400' size='1824' address='0x00000000035c8290' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1061' backedge_count='1043' iicount='1061' stamp='0.564'/>
<writer thread='4796'/>
<task_queued compile_id='25' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='8448' iicount='8448' stamp='0.564' comment='tiered' hot_count='8448'/>
<task_queued compile_id='26' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='9472' iicount='9472' stamp='0.564' comment='tiered' hot_count='9472'/>
<task_queued compile_id='27' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='167' backedge_count='8192' iicount='167' level='3' stamp='0.564' comment='tiered' hot_count='167'/>
<task_queued compile_id='28' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='8832' iicount='8832' stamp='0.564' comment='tiered' hot_count='8832'/>
<task_queued compile_id='29' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='384' iicount='384' level='3' stamp='0.564' comment='tiered' hot_count='384'/>
<writer thread='14996'/>
Decoding compiled method 0x00000000035c2490:
Code:
Argument 0 is unknown.RIP: 0x35c25c0 Code size: 0x00000078
[Entry Point]
[Constants]
  # {method} {0x00000000172dce50} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x00000000035c25c0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c25c4: shl     r10,3h
  0x00000000035c25c8: cmp     rax,r10
  0x00000000035c25cb: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c25d1: nop
  0x00000000035c25d4: nop     word ptr [rax+rax+0h]
  0x00000000035c25da: nop     word ptr [rax+rax+0h]
[Verified Entry Point]
  0x00000000035c25e0: sub     rsp,18h
  0x00000000035c25e7: mov     qword ptr [rsp+10h],rbp  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x00000000035c25ec: cmp     r8d,5ch
  0x00000000035c25f0: je      35c2606h          ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x00000000035c25f2: cmp     r8d,2fh
  0x00000000035c25f6: je      35c2606h          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x00000000035c25f8: xor     eax,eax           ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x00000000035c25fa: add     rsp,10h
  0x00000000035c25fe: pop     rbp
  0x00000000035c25ff: test    dword ptr [15c0000h],eax
                                                ;   {poll_return}
  0x00000000035c2605: ret                       ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x00000000035c2606: mov     eax,1h
  0x00000000035c260b: jmp     35c25fah
  0x00000000035c260d: hlt
  0x00000000035c260e: hlt
  0x00000000035c260f: hlt
  0x00000000035c2610: hlt
  0x00000000035c2611: hlt
  0x00000000035c2612: hlt
  0x00000000035c2613: hlt
  0x00000000035c2614: hlt
  0x00000000035c2615: hlt
  0x00000000035c2616: hlt
  0x00000000035c2617: hlt
  0x00000000035c2618: hlt
  0x00000000035c2619: hlt
  0x00000000035c261a: hlt
  0x00000000035c261b: hlt
  0x00000000035c261c: hlt
  0x00000000035c261d: hlt
  0x00000000035c261e: hlt
  0x00000000035c261f: hlt
[Exception Handler]
[Stub Code]
  0x00000000035c2620: jmp     351fc20h          ;   {no_reloc}
[Deopt Handler Code]
  0x00000000035c2625: call    35c262ah
  0x00000000035c262a: sub     qword ptr [rsp],5h
  0x00000000035c262f: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c2634: hlt
  0x00000000035c2635: hlt
  0x00000000035c2636: hlt
  0x00000000035c2637: hlt
<nmethod compile_id='26' compiler='C2' level='4' entry='0x00000000035c25c0' size='584' address='0x00000000035c2490' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='9542' iicount='9542' stamp='0.579'/>
<writer thread='5164'/>
Decoding compiled method 0x00000000035c55d0:
Code:
Argument 0 is unknown.RIP: 0x35c57c0 Code size: 0x00000b18
[Entry Point]
[Constants]
  # {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x00000000035c57c0: mov     r10d,dword ptr [rdx+8h]
  0x00000000035c57c4: shl     r10,3h
  0x00000000035c57c8: cmp     r10,rax
  0x00000000035c57cb: jne     34f5f60h          ;   {runtime_call}
  0x00000000035c57d1: nop     dword ptr [rax+rax+0h]
  0x00000000035c57d9: nop     dword ptr [rax+0h]
[Verified Entry Point]
  0x00000000035c57e0: mov     dword ptr [rsp+0ffffffffffffa000h],eax
  0x00000000035c57e7: push    rbp
  0x00000000035c57e8: sub     rsp,80h
  0x00000000035c57ef: mov     qword ptr [rsp+50h],rdx
  0x00000000035c57f4: mov     qword ptr [rsp+60h],r8
  0x00000000035c57f9: mov     qword ptr [rsp+70h],rsi
  0x00000000035c57fe: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5808: mov     ebx,dword ptr [rax+0dch]
  0x00000000035c580e: add     ebx,8h
  0x00000000035c5811: mov     dword ptr [rax+0dch],ebx
  0x00000000035c5817: mov     rax,172c4de8h     ;   {metadata({method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5821: and     ebx,1ff8h
  0x00000000035c5827: cmp     ebx,0h
  0x00000000035c582a: je      35c60a6h          ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x00000000035c5830: mov     rbx,r9
  0x00000000035c5833: add     ebx,edi
  0x00000000035c5835: mov     dword ptr [rsp+68h],ebx
  0x00000000035c5839: mov     eax,dword ptr [rsi+0ch]  ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00000000035c60bd
  0x00000000035c583c: mov     rcx,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5846: add     qword ptr [rcx+108h],1h
  0x00000000035c584e: mov     rcx,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035c5858: mov     r11d,dword ptr [rcx+0dch]
  0x00000000035c585f: add     r11d,8h
  0x00000000035c5863: mov     dword ptr [rcx+0dch],r11d
  0x00000000035c586a: mov     rcx,172552c8h     ;   {metadata({method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035c5874: and     r11d,7ffff8h
  0x00000000035c587b: cmp     r11d,0h
  0x00000000035c587f: je      35c60c2h
  0x00000000035c5885: cmp     edi,eax
  0x00000000035c5887: mov     rcx,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035c5891: mov     r11,108h
  0x00000000035c589b: jnle    35c58abh
  0x00000000035c58a1: mov     r11,118h
  0x00000000035c58ab: mov     r13,qword ptr [rcx+r11]
  0x00000000035c58af: lea     r13,[r13+1h]
  0x00000000035c58b3: mov     qword ptr [rcx+r11],r13
  0x00000000035c58b7: jnle    35c58d2h          ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000000035c58bd: mov     rax,1734ff90h     ;   {metadata(method data for {method} {0x00000000172552d0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000035c58c7: inc     dword ptr [rax+128h]
  0x00000000035c58cd: jmp     35c58d5h          ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000000035c58d2: mov     rdi,rax           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000000035c58d5: mov     eax,0h
  0x00000000035c58da: jmp     35c5994h          ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x00000000035c58df: nop
  0x00000000035c58e0: movsxd  rcx,r9d
  0x00000000035c58e3: cmp     r9d,dword ptr [r8+0ch]  ; implicit exception: dispatches to 0x00000000035c60d9
  0x00000000035c58e7: jnb     35c60e3h
  0x00000000035c58ed: movzx   ecx,word ptr [r8+rcx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000035c58f3: cmp     ecx,80h
  0x00000000035c58f9: mov     r11,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5903: mov     r13,138h
  0x00000000035c590d: jnl     35c591dh
  0x00000000035c5913: mov     r13,148h
  0x00000000035c591d: mov     r14,qword ptr [r11+r13]
  0x00000000035c5921: lea     r14,[r14+1h]
  0x00000000035c5925: mov     qword ptr [r11+r13],r14
  0x00000000035c5929: jnl     35c59d0h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000035c592f: mov     r11,rax
  0x00000000035c5932: inc     r11d
  0x00000000035c5935: inc     r9d
  0x00000000035c5938: movsxd  r13,eax
  0x00000000035c593b: cmp     eax,dword ptr [rsi+0ch]
  0x00000000035c593e: jnb     35c60ech
  0x00000000035c5944: mov     byte ptr [rsi+r13+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000035c5949: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5953: mov     ecx,dword ptr [rax+0e0h]
  0x00000000035c5959: add     ecx,8h
  0x00000000035c595c: mov     dword ptr [rax+0e0h],ecx
  0x00000000035c5962: mov     rax,172c4de8h     ;   {metadata({method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c596c: and     ecx,0fff8h
  0x00000000035c5972: cmp     ecx,0h
  0x00000000035c5975: je      35c60f5h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=443}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00000000035c597b: test    dword ptr [15c0100h],eax
                                                ;   {poll}
  0x00000000035c5981: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c598b: inc     dword ptr [rax+158h]
  0x00000000035c5991: mov     rax,r11           ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x00000000035c5994: cmp     eax,edi
  0x00000000035c5996: mov     rcx,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c59a0: mov     r11,118h
  0x00000000035c59aa: jnl     35c59bah
  0x00000000035c59b0: mov     r11,128h
  0x00000000035c59ba: mov     r13,qword ptr [rcx+r11]
  0x00000000035c59be: lea     r13,[r13+1h]
  0x00000000035c59c2: mov     qword ptr [rcx+r11],r13
  0x00000000035c59c6: jl      35c58e0h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000035c59cc: nop     dword ptr [rax+0h]
  0x00000000035c59d0: cmp     r9d,ebx
  0x00000000035c59d3: mov     rdi,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c59dd: mov     rcx,170h
  0x00000000035c59e7: jnl     35c59f7h
  0x00000000035c59ed: mov     rcx,180h
  0x00000000035c59f7: mov     r11,qword ptr [rdi+rcx]
  0x00000000035c59fb: lea     r11,[r11+1h]
  0x00000000035c59ff: mov     qword ptr [rdi+rcx],r11
  0x00000000035c5a03: jnl     35c6091h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00000000035c5a09: mov     rdi,r9
  0x00000000035c5a0c: inc     edi
  0x00000000035c5a0e: movsxd  rcx,r9d
  0x00000000035c5a11: cmp     r9d,dword ptr [r8+0ch]  ; implicit exception: dispatches to 0x00000000035c610c
  0x00000000035c5a15: jnb     35c6116h
  0x00000000035c5a1b: movzx   ecx,word ptr [r8+rcx*2+10h]
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x00000000035c5a21: cmp     ecx,80h
  0x00000000035c5a27: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5a31: mov     r11,190h
  0x00000000035c5a3b: jnl     35c5a4bh
  0x00000000035c5a41: mov     r11,1a0h
  0x00000000035c5a4b: mov     r13,qword ptr [r9+r11]
  0x00000000035c5a4f: lea     r13,[r13+1h]
  0x00000000035c5a53: mov     qword ptr [r9+r11],r13
  0x00000000035c5a57: jnl     35c5a8ch          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x00000000035c5a5d: mov     r9,rax
  0x00000000035c5a60: inc     r9d
  0x00000000035c5a63: movsxd  r11,eax
  0x00000000035c5a66: cmp     eax,dword ptr [rsi+0ch]
  0x00000000035c5a69: jnb     35c611fh
  0x00000000035c5a6f: mov     byte ptr [rsi+r11+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x00000000035c5a74: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5a7e: inc     dword ptr [rax+1b0h]
  0x00000000035c5a84: mov     rbx,rsi
  0x00000000035c5a87: jmp     35c601bh          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x00000000035c5a8c: cmp     ecx,800h
  0x00000000035c5a92: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5a9c: mov     r11,1c8h
  0x00000000035c5aa6: jnl     35c5ab6h
  0x00000000035c5aac: mov     r11,1d8h
  0x00000000035c5ab6: mov     r13,qword ptr [r9+r11]
  0x00000000035c5aba: lea     r13,[r13+1h]
  0x00000000035c5abe: mov     qword ptr [r9+r11],r13
  0x00000000035c5ac2: jnl     35c5b21h          ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x00000000035c5ac8: mov     r9,rcx
  0x00000000035c5acb: sar     r9d,6h
  0x00000000035c5acf: or      r9d,0c0h
  0x00000000035c5ad6: movsxd  r11,eax
  0x00000000035c5ad9: cmp     eax,dword ptr [rsi+0ch]
  0x00000000035c5adc: jnb     35c6128h
  0x00000000035c5ae2: mov     byte ptr [rsi+r11+10h],r9l
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x00000000035c5ae7: inc     eax
  0x00000000035c5ae9: mov     r9,rax
  0x00000000035c5aec: inc     r9d
  0x00000000035c5aef: and     ecx,3fh
  0x00000000035c5af2: or      ecx,80h
  0x00000000035c5af8: movsxd  r11,eax
  0x00000000035c5afb: cmp     eax,dword ptr [rsi+0ch]
  0x00000000035c5afe: jnb     35c6131h
  0x00000000035c5b04: mov     byte ptr [rsi+r11+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x00000000035c5b09: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5b13: inc     dword ptr [rax+1e8h]
  0x00000000035c5b19: mov     rbx,rsi
  0x00000000035c5b1c: jmp     35c601bh          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x00000000035c5b21: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5b2b: add     qword ptr [r9+200h],1h
  0x00000000035c5b33: mov     r9,17429f70h      ;   {metadata(method data for {method} {0x00000000171f93c8} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035c5b3d: mov     r11d,dword ptr [r9+0dch]
  0x00000000035c5b44: add     r11d,8h
  0x00000000035c5b48: mov     dword ptr [r9+0dch],r11d
  0x00000000035c5b4f: mov     r9,171f93c0h      ;   {metadata({method} {0x00000000171f93c8} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035c5b59: and     r11d,7ffff8h
  0x00000000035c5b60: cmp     r11d,0h
  0x00000000035c5b64: je      35c613ah
  0x00000000035c5b6a: cmp     ecx,0d800h
  0x00000000035c5b70: mov     r9,17429f70h      ;   {metadata(method data for {method} {0x00000000171f93c8} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035c5b7a: mov     r11,108h
  0x00000000035c5b84: jl      35c5b94h
  0x00000000035c5b8a: mov     r11,118h
  0x00000000035c5b94: mov     r13,qword ptr [r9+r11]
  0x00000000035c5b98: lea     r13,[r13+1h]
  0x00000000035c5b9c: mov     qword ptr [r9+r11],r13
  0x00000000035c5ba0: jl      35c5be2h          ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4794)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000000035c5ba6: cmp     ecx,0e000h
  0x00000000035c5bac: mov     r9,17429f70h      ;   {metadata(method data for {method} {0x00000000171f93c8} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035c5bb6: mov     r11,128h
  0x00000000035c5bc0: jnl     35c5bd0h
  0x00000000035c5bc6: mov     r11,138h
  0x00000000035c5bd0: mov     r13,qword ptr [r9+r11]
  0x00000000035c5bd4: lea     r13,[r13+1h]
  0x00000000035c5bd8: mov     qword ptr [r9+r11],r13
  0x00000000035c5bdc: jl      35c5bedh          ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4794)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000000035c5be2: mov     r9d,0h
  0x00000000035c5be8: jmp     35c5c04h          ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4794)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000000035c5bed: mov     r9,17429f70h      ;   {metadata(method data for {method} {0x00000000171f93c8} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x00000000035c5bf7: inc     dword ptr [r9+148h]
  0x00000000035c5bfe: mov     r9d,1h            ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4794)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000000035c5c04: and     r9d,1h
  0x00000000035c5c08: cmp     r9d,0h
  0x00000000035c5c0c: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5c16: mov     r11,210h
  0x00000000035c5c20: je      35c5c30h
  0x00000000035c5c26: mov     r11,220h
  0x00000000035c5c30: mov     r13,qword ptr [r9+r11]
  0x00000000035c5c34: lea     r13,[r13+1h]
  0x00000000035c5c38: mov     qword ptr [r9+r11],r13
  0x00000000035c5c3c: je      35c5fafh          ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x00000000035c5c42: mov     r9d,dword ptr [rdx+30h]  ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x00000000035c5c46: cmp     r9,0h
  0x00000000035c5c4a: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5c54: mov     r11,230h
  0x00000000035c5c5e: jne     35c5c6eh
  0x00000000035c5c64: mov     r11,240h
  0x00000000035c5c6e: mov     r13,qword ptr [r9+r11]
  0x00000000035c5c72: lea     r13,[r13+1h]
  0x00000000035c5c76: mov     qword ptr [r9+r11],r13
  0x00000000035c5c7a: mov     dword ptr [rsp+5ch],ecx
  0x00000000035c5c7e: mov     dword ptr [rsp+58h],edi
  0x00000000035c5c82: mov     dword ptr [rsp+6ch],eax
  0x00000000035c5c86: jne     35c5cebh          ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x00000000035c5c8c: nop     dword ptr [rax+0h]
  0x00000000035c5c90: jmp     35c6160h          ;   {no_reloc}
  0x00000000035c5c95: add     byte ptr [rax],al
  0x00000000035c5c97: add     byte ptr [rax],al
  0x00000000035c5c99: add     cl,ch
  0x00000000035c5c9b: retf
  0x00000000035c5c9c: add     al,0h
  0x00000000035c5c9e: add     byte ptr [rax+0ffffffffffffff8bh],cl
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x00000000035c5ca1: ror     byte ptr [rcx+0ffffffffffffffbdh],1h
                                                ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5ca4: nop
  0x00000000035c5ca5: add     dword ptr [rdi+rdx],edi
  0x00000000035c5ca8: add     byte ptr [rax],al
  0x00000000035c5caa: add     byte ptr [rax],al
  0x00000000035c5cac: add     qword ptr [r13+250h],1h
  0x00000000035c5cb4: mov     rdx,rax           ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x00000000035c5cb7: mov     qword ptr [rsp+48h],rax
  0x00000000035c5cbc: nop
  0x00000000035c5cbd: nop
  0x00000000035c5cbe: nop
  0x00000000035c5cbf: call    34f61a0h          ; OopMap{[72]=Oop [80]=Oop [112]=Oop [96]=Oop off=1284}
                                                ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x00000000035c5cc4: mov     rax,qword ptr [rsp+48h]
  0x00000000035c5cc9: mov     rdx,qword ptr [rsp+50h]
  0x00000000035c5cce: mov     r10,rax
  0x00000000035c5cd1: mov     dword ptr [rdx+30h],r10d
  0x00000000035c5cd5: mov     r8,rdx
  0x00000000035c5cd8: shr     r8,9h
  0x00000000035c5cdc: mov     r9,123e9000h
  0x00000000035c5ce6: mov     byte ptr [r8+r9],0h  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x00000000035c5ceb: mov     ebx,dword ptr [rdx+30h]  ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x00000000035c5cee: cmp     rax,qword ptr [rbx]  ; implicit exception: dispatches to 0x00000000035c6177
  0x00000000035c5cf1: mov     r8,rbx
  0x00000000035c5cf4: mov     r9,173c0190h      ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5cfe: mov     r8d,dword ptr [r8+8h]
  0x00000000035c5d02: shl     r8,3h
  0x00000000035c5d06: cmp     r8,qword ptr [r9+268h]
  0x00000000035c5d0d: jne     35c5d1ch
  0x00000000035c5d0f: add     qword ptr [r9+270h],1h
  0x00000000035c5d17: jmp     35c5d82h
  0x00000000035c5d1c: cmp     r8,qword ptr [r9+278h]
  0x00000000035c5d23: jne     35c5d32h
  0x00000000035c5d25: add     qword ptr [r9+280h],1h
  0x00000000035c5d2d: jmp     35c5d82h
  0x00000000035c5d32: cmp     qword ptr [r9+268h],0h
  0x00000000035c5d3d: jne     35c5d56h
  0x00000000035c5d3f: mov     qword ptr [r9+268h],r8
  0x00000000035c5d46: mov     qword ptr [r9+270h],1h
  0x00000000035c5d51: jmp     35c5d82h
  0x00000000035c5d56: cmp     qword ptr [r9+278h],0h
  0x00000000035c5d61: jne     35c5d7ah
  0x00000000035c5d63: mov     qword ptr [r9+278h],r8
  0x00000000035c5d6a: mov     qword ptr [r9+280h],1h
  0x00000000035c5d75: jmp     35c5d82h
  0x00000000035c5d7a: add     qword ptr [r9+260h],1h
  0x00000000035c5d82: mov     edi,dword ptr [rsp+58h]
  0x00000000035c5d86: dec     edi
  0x00000000035c5d88: mov     r8d,dword ptr [rsp+5ch]
  0x00000000035c5d8d: mov     r9,qword ptr [rsp+60h]
  0x00000000035c5d92: mov     esi,dword ptr [rsp+68h]
  0x00000000035c5d96: mov     rdx,rbx           ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x00000000035c5d99: nop
  0x00000000035c5d9a: nop
  0x00000000035c5d9b: nop
  0x00000000035c5d9c: nop
  0x00000000035c5d9d: mov     rax,0ffffffffffffffffh
  0x00000000035c5da7: call    34f63e0h          ; OopMap{[112]=Oop [96]=Oop [80]=Oop off=1516}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x00000000035c5dac: cmp     eax,0h
  0x00000000035c5daf: mov     rsi,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5db9: mov     rdi,290h
  0x00000000035c5dc3: jnl     35c5dd3h
  0x00000000035c5dc9: mov     rdi,2a0h
  0x00000000035c5dd3: mov     rbx,qword ptr [rsi+rdi]
  0x00000000035c5dd7: lea     rbx,[rbx+1h]
  0x00000000035c5ddb: mov     qword ptr [rsi+rdi],rbx
  0x00000000035c5ddf: jnl     35c5efch          ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x00000000035c5de5: mov     rdx,qword ptr [rsp+50h]
  0x00000000035c5dea: mov     rax,rdx
  0x00000000035c5ded: mov     rsi,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5df7: mov     eax,dword ptr [rax+8h]
  0x00000000035c5dfa: shl     rax,3h
  0x00000000035c5dfe: cmp     rax,qword ptr [rsi+2b8h]
  0x00000000035c5e05: jne     35c5e14h
  0x00000000035c5e07: add     qword ptr [rsi+2c0h],1h
  0x00000000035c5e0f: jmp     35c5e7ah
  0x00000000035c5e14: cmp     rax,qword ptr [rsi+2c8h]
  0x00000000035c5e1b: jne     35c5e2ah
  0x00000000035c5e1d: add     qword ptr [rsi+2d0h],1h
  0x00000000035c5e25: jmp     35c5e7ah
  0x00000000035c5e2a: cmp     qword ptr [rsi+2b8h],0h
  0x00000000035c5e35: jne     35c5e4eh
  0x00000000035c5e37: mov     qword ptr [rsi+2b8h],rax
  0x00000000035c5e3e: mov     qword ptr [rsi+2c0h],1h
  0x00000000035c5e49: jmp     35c5e7ah
  0x00000000035c5e4e: cmp     qword ptr [rsi+2c8h],0h
  0x00000000035c5e59: jne     35c5e72h
  0x00000000035c5e5b: mov     qword ptr [rsi+2c8h],rax
  0x00000000035c5e62: mov     qword ptr [rsi+2d0h],1h
  0x00000000035c5e6d: jmp     35c5e7ah
  0x00000000035c5e72: add     qword ptr [rsi+2b0h],1h
  0x00000000035c5e7a: mov     eax,dword ptr [rdx+20h]  ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x00000000035c5e7d: mov     r10,0dafd4128h    ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00000000035c5e87: cmp     rax,r10
  0x00000000035c5e8a: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5e94: mov     rsi,2e0h
  0x00000000035c5e9e: je      35c5eaeh
  0x00000000035c5ea4: mov     rsi,2f0h
  0x00000000035c5eae: mov     rdi,qword ptr [rax+rsi]
  0x00000000035c5eb2: lea     rdi,[rdi+1h]
  0x00000000035c5eb6: mov     qword ptr [rax+rsi],rdi
  0x00000000035c5eba: jne     35c607dh          ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x00000000035c5ec0: mov     esi,dword ptr [rsp+6ch]
  0x00000000035c5ec4: mov     rbx,qword ptr [rsp+70h]
  0x00000000035c5ec9: mov     rax,rsi
  0x00000000035c5ecc: inc     eax
  0x00000000035c5ece: movsx   edi,byte ptr [rdx+2ch]  ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x00000000035c5ed2: movsxd  rcx,esi
  0x00000000035c5ed5: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5ed8: jnb     35c617ch
  0x00000000035c5ede: mov     byte ptr [rbx+rcx+10h],dil
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x00000000035c5ee3: mov     rsi,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5eed: inc     dword ptr [rsi+300h]
  0x00000000035c5ef3: mov     edi,dword ptr [rsp+58h]
  0x00000000035c5ef7: jmp     35c5f97h          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x00000000035c5efc: mov     esi,dword ptr [rsp+6ch]
  0x00000000035c5f00: mov     rbx,qword ptr [rsp+70h]
  0x00000000035c5f05: mov     rdx,qword ptr [rsp+50h]
  0x00000000035c5f0a: mov     rdi,rax
  0x00000000035c5f0d: sar     edi,12h
  0x00000000035c5f10: or      edi,0f0h
  0x00000000035c5f16: movsxd  rcx,esi
  0x00000000035c5f19: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5f1c: jnb     35c6185h
  0x00000000035c5f22: mov     byte ptr [rbx+rcx+10h],dil
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x00000000035c5f27: inc     esi
  0x00000000035c5f29: mov     rdi,rax
  0x00000000035c5f2c: sar     edi,0ch
  0x00000000035c5f2f: and     edi,3fh
  0x00000000035c5f32: or      edi,80h
  0x00000000035c5f38: movsxd  rcx,esi
  0x00000000035c5f3b: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5f3e: jnb     35c618eh
  0x00000000035c5f44: mov     byte ptr [rbx+rcx+10h],dil
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x00000000035c5f49: inc     esi
  0x00000000035c5f4b: mov     rdi,rax
  0x00000000035c5f4e: sar     edi,6h
  0x00000000035c5f51: and     edi,3fh
  0x00000000035c5f54: or      edi,80h
  0x00000000035c5f5a: movsxd  rcx,esi
  0x00000000035c5f5d: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5f60: jnb     35c6197h
  0x00000000035c5f66: mov     byte ptr [rbx+rcx+10h],dil
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x00000000035c5f6b: inc     esi
  0x00000000035c5f6d: mov     rdi,rsi
  0x00000000035c5f70: inc     edi
  0x00000000035c5f72: and     eax,3fh
  0x00000000035c5f75: or      eax,80h
  0x00000000035c5f7b: movsxd  rcx,esi
  0x00000000035c5f7e: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5f81: jnb     35c61a0h
  0x00000000035c5f87: mov     byte ptr [rbx+rcx+10h],al
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x00000000035c5f8b: mov     esi,dword ptr [rsp+58h]
  0x00000000035c5f8f: inc     esi
  0x00000000035c5f91: mov     rax,rdi
  0x00000000035c5f94: mov     rdi,rsi
  0x00000000035c5f97: mov     rsi,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c5fa1: inc     dword ptr [rsi+318h]
  0x00000000035c5fa7: mov     r9,rax
  0x00000000035c5faa: jmp     35c601bh          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x00000000035c5faf: mov     rbx,rsi
  0x00000000035c5fb2: mov     rsi,rax
  0x00000000035c5fb5: mov     rax,rcx
  0x00000000035c5fb8: sar     eax,0ch
  0x00000000035c5fbb: or      eax,0e0h
  0x00000000035c5fc1: movsxd  r8,esi
  0x00000000035c5fc4: cmp     esi,dword ptr [rbx+0ch]
  0x00000000035c5fc7: jnb     35c61a9h
  0x00000000035c5fcd: mov     byte ptr [rbx+r8+10h],al
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x00000000035c5fd2: mov     rax,rsi
  0x00000000035c5fd5: inc     eax
  0x00000000035c5fd7: mov     rsi,rcx
  0x00000000035c5fda: sar     esi,6h
  0x00000000035c5fdd: and     esi,3fh
  0x00000000035c5fe0: or      esi,80h
  0x00000000035c5fe6: movsxd  r8,eax
  0x00000000035c5fe9: cmp     eax,dword ptr [rbx+0ch]
  0x00000000035c5fec: jnb     35c61b2h
  0x00000000035c5ff2: mov     byte ptr [rbx+r8+10h],sil
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x00000000035c5ff7: inc     eax
  0x00000000035c5ff9: mov     rsi,rax
  0x00000000035c5ffc: inc     esi
  0x00000000035c5ffe: and     ecx,3fh
  0x00000000035c6001: or      ecx,80h
  0x00000000035c6007: movsxd  r8,eax
  0x00000000035c600a: cmp     eax,dword ptr [rbx+0ch]
  0x00000000035c600d: jnb     35c61bbh
  0x00000000035c6013: mov     byte ptr [rbx+r8+10h],cl
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x00000000035c6018: mov     r9,rsi            ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00000000035c601b: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c6025: mov     esi,dword ptr [rax+0e0h]
  0x00000000035c602b: add     esi,8h
  0x00000000035c602e: mov     dword ptr [rax+0e0h],esi
  0x00000000035c6034: mov     rax,172c4de8h     ;   {metadata({method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c603e: and     esi,0fff8h
  0x00000000035c6044: cmp     esi,0h
  0x00000000035c6047: je      35c61c4h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2189}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00000000035c604d: test    dword ptr [15c0100h],eax
                                                ;   {poll}
  0x00000000035c6053: mov     rax,173c0190h     ;   {metadata(method data for {method} {0x00000000172c4df0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000000035c605d: inc     dword ptr [rax+330h]
  0x00000000035c6063: mov     rsi,r9
  0x00000000035c6066: mov     r9,rdi
  0x00000000035c6069: mov     rax,rsi
  0x00000000035c606c: mov     rsi,rbx
  0x00000000035c606f: mov     r8,qword ptr [rsp+60h]
  0x00000000035c6074: mov     ebx,dword ptr [rsp+68h]
  0x00000000035c6078: jmp     35c59d0h          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00000000035c607d: mov     eax,0ffffffffh
  0x00000000035c6082: add     rsp,80h
  0x00000000035c6089: pop     rbp
  0x00000000035c608a: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c6090: ret                       ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x00000000035c6091: mov     rsi,rax
  0x00000000035c6094: mov     rax,rsi
  0x00000000035c6097: add     rsp,80h
  0x00000000035c609e: pop     rbp
  0x00000000035c609f: test    dword ptr [15c0100h],eax
                                                ;   {poll_return}
  0x00000000035c60a5: ret
  0x00000000035c60a6: mov     qword ptr [rsp+8h],rax
  0x00000000035c60ab: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c60b3: call    35b0d20h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2296}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x00000000035c60b8: jmp     35c5830h
  0x00000000035c60bd: call    35acf00h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2306}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00000000035c60c2: mov     qword ptr [rsp+8h],rcx
  0x00000000035c60c7: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c60cf: call    35b0d20h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2324}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x00000000035c60d4: jmp     35c5885h
  0x00000000035c60d9: call    35acf00h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2334}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00000000035c60de: call    35acf00h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2339}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00000000035c60e3: mov     qword ptr [rsp],r9
  0x00000000035c60e7: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2348}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x00000000035c60ec: mov     qword ptr [rsp],rax
  0x00000000035c60f0: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2357}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x00000000035c60f5: mov     qword ptr [rsp+8h],rax
  0x00000000035c60fa: mov     qword ptr [rsp],33h
  0x00000000035c6102: call    35b0d20h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2375}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x00000000035c6107: jmp     35c597bh
  0x00000000035c610c: call    35acf00h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2385}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00000000035c6111: call    35acf00h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2390}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00000000035c6116: mov     qword ptr [rsp],r9
  0x00000000035c611a: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2399}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x00000000035c611f: mov     qword ptr [rsp],rax
  0x00000000035c6123: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2408}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x00000000035c6128: mov     qword ptr [rsp],rax
  0x00000000035c612c: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2417}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x00000000035c6131: mov     qword ptr [rsp],rax
  0x00000000035c6135: call    351f480h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2426}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x00000000035c613a: mov     qword ptr [rsp+8h],r9
  0x00000000035c613f: mov     qword ptr [rsp],0ffffffffffffffffh
  0x00000000035c6147: call    35b0d20h          ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop rsi=Oop [112]=Oop off=2444}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4794)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x00000000035c614c: jmp     35c5b6ah
  0x00000000035c6151: mov     rdx,0h            ;   {metadata(NULL)}
  0x00000000035c615b: mov     eax,0a050f00h
  0x00000000035c6160: call    35aeda0h          ; OopMap{[112]=Oop [96]=Oop [80]=Oop off=2469}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00000000035c6165: jmp     35c5c90h
  0x00000000035c616a: mov     rdx,rdx
  0x00000000035c616d: call    35ad3a0h          ; OopMap{[112]=Oop [96]=Oop [80]=Oop off=2482}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x00000000035c6172: jmp     35c5c9fh
  0x00000000035c6177: call    35acf00h          ; OopMap{[112]=Oop [96]=Oop rdx=Oop [80]=Oop rbx=Oop off=2492}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x00000000035c617c: mov     qword ptr [rsp],rsi
  0x00000000035c6180: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2501}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x00000000035c6185: mov     qword ptr [rsp],rsi
  0x00000000035c6189: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2510}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x00000000035c618e: mov     qword ptr [rsp],rsi
  0x00000000035c6192: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2519}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x00000000035c6197: mov     qword ptr [rsp],rsi
  0x00000000035c619b: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2528}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x00000000035c61a0: mov     qword ptr [rsp],rsi
  0x00000000035c61a4: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2537}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x00000000035c61a9: mov     qword ptr [rsp],rsi
  0x00000000035c61ad: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2546}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x00000000035c61b2: mov     qword ptr [rsp],rax
  0x00000000035c61b6: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2555}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x00000000035c61bb: mov     qword ptr [rsp],rax
  0x00000000035c61bf: call    351f480h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2564}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x00000000035c61c4: mov     qword ptr [rsp+8h],rax
  0x00000000035c61c9: mov     qword ptr [rsp],161h
  0x00000000035c61d1: call    35b0d20h          ; OopMap{[96]=Oop rdx=Oop [80]=Oop rbx=Oop [112]=Oop off=2582}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x00000000035c61d6: jmp     35c604dh
  0x00000000035c61db: nop
  0x00000000035c61dc: nop
  0x00000000035c61dd: mov     rax,qword ptr [r15+2a8h]
  0x00000000035c61e4: mov     r10,0h
  0x00000000035c61ee: mov     qword ptr [r15+2a8h],r10
  0x00000000035c61f5: mov     r10,0h
  0x00000000035c61ff: mov     qword ptr [r15+2b0h],r10
  0x00000000035c6206: add     rsp,80h
  0x00000000035c620d: pop     rbp
  0x00000000035c620e: jmp     351f920h          ;   {runtime_call}
  0x00000000035c6213: hlt
  0x00000000035c6214: hlt
  0x00000000035c6215: hlt
  0x00000000035c6216: hlt
  0x00000000035c6217: hlt
  0x00000000035c6218: hlt
  0x00000000035c6219: hlt
  0x00000000035c621a: hlt
  0x00000000035c621b: hlt
  0x00000000035c621c: hlt
  0x00000000035c621d: hlt
  0x00000000035c621e: hlt
  0x00000000035c621f: hlt
[Stub Code]
  0x00000000035c6220: nop                       ;   {no_reloc}
  0x00000000035c6221: nop
  0x00000000035c6222: nop
  0x00000000035c6223: nop
  0x00000000035c6224: nop
  0x00000000035c6225: mov     rbx,0h            ;   {static_stub}
  0x00000000035c622f: jmp     35c622fh          ;   {runtime_call}
  0x00000000035c6234: nop
  0x00000000035c6235: mov     rbx,0h            ;   {static_stub}
  0x00000000035c623f: jmp     35c623fh          ;   {runtime_call}
[Exception Handler]
  0x00000000035c6244: call    35b03a0h          ;   {runtime_call}
  0x00000000035c6249: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x00000000035c624e: sub     rsp,80h
  0x00000000035c6255: mov     qword ptr [rsp+78h],rax
  0x00000000035c625a: mov     qword ptr [rsp+70h],rcx
  0x00000000035c625f: mov     qword ptr [rsp+68h],rdx
  0x00000000035c6264: mov     qword ptr [rsp+60h],rbx
  0x00000000035c6269: mov     qword ptr [rsp+50h],rbp
  0x00000000035c626e: mov     qword ptr [rsp+48h],rsi
  0x00000000035c6273: mov     qword ptr [rsp+40h],rdi
  0x00000000035c6278: mov     qword ptr [rsp+38h],r8
  0x00000000035c627d: mov     qword ptr [rsp+30h],r9
  0x00000000035c6282: mov     qword ptr [rsp+28h],r10
  0x00000000035c6287: mov     qword ptr [rsp+20h],r11
  0x00000000035c628c: mov     qword ptr [rsp+18h],r12
  0x00000000035c6291: mov     qword ptr [rsp+10h],r13
  0x00000000035c6296: mov     qword ptr [rsp+8h],r14
  0x00000000035c629b: mov     qword ptr [rsp],r15
  0x00000000035c629f: mov     rcx,74f00770h     ;   {external_word}
  0x00000000035c62a9: mov     rdx,35c6249h      ;   {internal_word}
  0x00000000035c62b3: mov     r8,rsp
  0x00000000035c62b6: and     rsp,0fffffffffffffff0h
  0x00000000035c62ba: call    74bb6cc0h         ;   {runtime_call}
  0x00000000035c62bf: hlt
[Deopt Handler Code]
  0x00000000035c62c0: mov     r10,35c62c0h      ;   {section_word}
  0x00000000035c62ca: push    r10
  0x00000000035c62cc: jmp     34f7200h          ;   {runtime_call}
  0x00000000035c62d1: hlt
  0x00000000035c62d2: hlt
  0x00000000035c62d3: hlt
  0x00000000035c62d4: hlt
  0x00000000035c62d5: hlt
  0x00000000035c62d6: hlt
  0x00000000035c62d7: hlt
<nmethod compile_id='22' compiler='C1' level='3' entry='0x00000000035c57c0' size='5528' address='0x00000000035c55d0' relocation_offset='288' insts_offset='496' stub_offset='3152' scopes_data_offset='3368' scopes_pcs_offset='4152' dependencies_offset='5464' nul_chk_table_offset='5472' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='271' backedge_count='10254' iicount='271' stamp='0.609'/>
<writer thread='4796'/>
<task_queued compile_id='30' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='385' iicount='385' level='3' stamp='0.610' comment='tiered' hot_count='384'/>
<writer thread='14108'/>
<destroy_vm stamp='0.611'/>
<tty_done stamp='0.631'/>
</tty>
<compilation_log thread='14992'>
<start_compile_thread name='C2 CompilerThread2' thread='14992' process='10012' stamp='0.223'/>
<task compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='110996' iicount='110996' stamp='0.339'>
<phase name='parse' nodes='3' live='3' stamp='0.339'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='110996'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='844' bci='13' reason='unloaded' action='reinterpret' index='245' klass='846'/>
<parse method='844' uses='110996' stamp='0.340'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='110996' cnt='110996' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='110996' not_taken='0' cnt='110996' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='0.340'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.340'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.340'>
<phase name='ccp' nodes='103' live='63' stamp='0.340'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.340'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.340'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.340'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.340'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.340'>
<phase_done name='matcher' nodes='53' live='53' stamp='0.340'/>
</phase>
<phase name='regalloc' nodes='68' live='67' stamp='0.340'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='78' live='73' stamp='0.340'/>
</phase>
<phase name='output' nodes='78' live='73' stamp='0.340'>
<phase_done name='output' nodes='91' live='83' stamp='0.341'/>
</phase>
<code_cache total_blobs='256' nmethods='8' adapters='160' free_code_cache='250536128'/>
<task_done success='1' nmsize='184' count='111033' stamp='0.362'/>
</task>
<task compile_id='1' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='9767' iicount='9767' stamp='0.376'>
<phase name='parse' nodes='3' live='3' stamp='0.394'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='9767'/>
<parse method='844' uses='9767' stamp='0.394'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='9482' not_taken='285' cnt='9767' prob='0.97082'/>
<bc code='183' bci='17'/>
<method id='846' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='440'/>
<call method='846' count='270' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='285' stamp='0.409'>
<bc code='183' bci='31'/>
<method id='849' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='849' count='-1' prof_factor='0.647727' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='849' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.409'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='496'/>
<call method='848' count='270' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='285' stamp='0.409'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='2955'/>
<call method='852' count='-1' prof_factor='0.574597' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='853' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='4096'/>
<call method='853' count='-1' prof_factor='0.574597' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77672' stamp='0.409'/>
</parse>
<parse_done nodes='347' live='342' memory='83016' stamp='0.423'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='0.423'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='0.423'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='0.423'>
<phase name='connectionGraph' nodes='354' live='219' stamp='0.423'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='0.424'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='0.424'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='0.424'>
<phase_done name='ccp' nodes='354' live='219' stamp='0.424'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='0.424'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='0.424'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='0.424'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='0.424'/>
</phase>
<phase_done name='optimizer' nodes='421' live='243' stamp='0.424'/>
</phase>
<phase name='matcher' nodes='421' live='243' stamp='0.424'>
<phase_done name='matcher' nodes='245' live='245' stamp='0.424'/>
</phase>
<phase name='regalloc' nodes='308' live='307' stamp='0.425'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='380' live='358' stamp='0.426'/>
</phase>
<phase name='output' nodes='380' live='358' stamp='0.426'>
<phase_done name='output' nodes='399' live='368' stamp='0.438'/>
</phase>
<code_cache total_blobs='265' nmethods='14' adapters='163' free_code_cache='250525632'/>
<task_done success='1' nmsize='680' count='9797' inlined_bytes='69' stamp='0.455'/>
</task>
<fragment>
<![CDATA[
<task compile_id='25' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='8483' iicount='8485' stamp='0.564'>
<phase name='parse' nodes='3' live='3' stamp='0.564'>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' iicount='8485'/>
<parse method='844' uses='8485' stamp='0.564'>
<bc code='183' bci='7'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='8798'/>
<call method='846' count='7996' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='8485' stamp='0.564'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='847' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='1' compiler='C2' level='4' iicount='9799'/>
<call method='847' count='8330' prof_factor='0.964424' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='8485' stamp='0.564'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='9505' not_taken='294' cnt='9799' prob='0.969997'/>
<bc code='183' bci='17'/>
<method id='849' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='445'/>
<call method='849' count='279' prof_factor='0.865905' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='255' stamp='0.564'>
<bc code='183' bci='31'/>
<method id='853' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='853' count='-1' prof_factor='0.573034' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='853' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='174' live='172' memory='50160' stamp='0.564'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='509'/>
<call method='851' count='279' prof_factor='0.865905' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='255' stamp='0.609'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='14' compiler='C1' level='3' iicount='3056'/>
<call method='856' count='-1' prof_factor='0.500982' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='857' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='4096'/>
<call method='857' count='-1' prof_factor='0.500982' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='366' live='362' memory='88816' stamp='0.609'/>
</parse>
<parse_done nodes='396' live='391' memory='95848' stamp='0.609'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='446' live='438' memory='105080' stamp='0.609'/>
</parse>
<parse_done nodes='467' live='458' memory='108304' stamp='0.609'/>
</parse>
<phase_done name='parse' nodes='469' live='292' stamp='0.609'/>
</phase>
<phase name='optimizer' nodes='469' live='292' stamp='0.609'>
<phase name='escapeAnalysis' nodes='473' live='288' stamp='0.609'>
<phase name='connectionGraph' nodes='473' live='288' stamp='0.609'>
<phase_done name='connectionGraph' nodes='473' live='288' stamp='0.609'/>
</phase>
<phase_done name='escapeAnalysis' nodes='473' live='288' stamp='0.609'/>
</phase>
<phase name='ccp' nodes='473' live='288' stamp='0.610'>
<phase_done name='ccp' nodes='473' live='288' stamp='0.610'/>
</phase>
<phase name='idealLoop' nodes='473' live='287' stamp='0.610'>
<phase_done name='idealLoop' nodes='491' live='278' stamp='0.610'/>
</phase>
<phase name='idealLoop' nodes='491' live='278' stamp='0.610'>
<phase_done name='idealLoop' nodes='497' live='278' stamp='0.610'/>
</phase>
<phase_done name='optimizer' nodes='658' live='405' stamp='0.610'/>
</phase>
<phase name='matcher' nodes='658' live='405' stamp='0.610'>
<phase_done name='matcher' nodes='400' live='400' stamp='0.611'/>
</phase>
]]>
</fragment>
</compilation_log>
<compilation_log thread='1512'>
<start_compile_thread name='C2 CompilerThread0' thread='1512' process='10012' stamp='0.223'/>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='1579' backedge_count='28482' iicount='1579' stamp='0.339'>
<phase name='parse' nodes='3' live='3' stamp='0.339'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='1579'/>
<parse method='844' uses='1579' stamp='0.339'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='664' not_taken='531' cnt='1195' prob='0.555649'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='530' cnt='531' prob='0.00188324'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='530' not_taken='24642' cnt='25172' prob='0.0210551'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='530' not_taken='24642' cnt='24642' prob='0.0210551'/>
<parse_done nodes='190' live='184' memory='50048' stamp='0.340'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.340'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.340'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.340'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.340'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.340'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.340'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.340'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.340'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.341'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.341'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.341'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.341'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.341'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='0.341'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='0.341'>
<phase_done name='matcher' nodes='139' live='139' stamp='0.341'/>
</phase>
<phase name='regalloc' nodes='175' live='174' stamp='0.342'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='194' live='189' stamp='0.342'/>
</phase>
<phase name='output' nodes='194' live='189' stamp='0.342'>
<phase_done name='output' nodes='211' live='199' stamp='0.362'/>
</phase>
<code_cache total_blobs='257' nmethods='9' adapters='160' free_code_cache='250533824'/>
<task_done success='1' nmsize='344' count='1583' backedge_count='28565' stamp='0.376'/>
</task>
<task compile_id='15' method='java/lang/String indexOf (II)I' bytes='70' count='855' backedge_count='31308' iicount='855' stamp='0.409'>
<phase name='parse' nodes='3' live='3' stamp='0.409'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='855'/>
<parse method='844' uses='855' stamp='0.423'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='639' not_taken='0' cnt='639' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='537' not_taken='102' cnt='639' prob='0.840376'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='537' cnt='537' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='524' not_taken='26169' cnt='26693' prob='0.0196306'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='26156' not_taken='13' cnt='26169' prob='0.999503'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='524' not_taken='26169' cnt='26156' prob='0.0196306'/>
<parse_done nodes='184' live='174' memory='50272' stamp='0.437'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.438'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.438'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.438'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.438'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.438'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.438'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.438'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.438'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.438'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.438'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.438'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.438'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.438'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='209' stamp='0.438'/>
</phase>
<phase name='idealLoop' nodes='342' live='209' stamp='0.438'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='206' stamp='0.439'/>
</phase>
<phase_done name='optimizer' nodes='372' live='203' stamp='0.439'/>
</phase>
<phase name='matcher' nodes='372' live='203' stamp='0.439'>
<phase_done name='matcher' nodes='159' live='159' stamp='0.439'/>
</phase>
<phase name='regalloc' nodes='225' live='224' stamp='0.439'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='242' live='239' stamp='0.440'/>
</phase>
<phase name='output' nodes='242' live='239' stamp='0.440'>
<phase_done name='output' nodes='268' live='252' stamp='0.455'/>
</phase>
<code_cache total_blobs='266' nmethods='17' adapters='163' free_code_cache='250531648'/>
<task_done success='1' nmsize='440' count='859' backedge_count='31469' stamp='0.507'/>
</task>
<fragment>
<![CDATA[
<task compile_id='28' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='8842' iicount='8842' stamp='0.564'>
<phase name='parse' nodes='3' live='3' stamp='0.564'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='728' name='char'/>
<method id='844' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='8842'/>
<parse method='844' uses='8842' stamp='0.564'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='846' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='1' compiler='C2' level='4' iicount='9799'/>
<call method='846' count='8330' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='8842' stamp='0.564'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='9505' not_taken='294' cnt='9799' prob='0.969997'/>
<bc code='183' bci='17'/>
<method id='847' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='445'/>
<call method='847' count='279' prof_factor='0.902337' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='266' stamp='0.564'>
<bc code='183' bci='31'/>
<method id='851' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='851' count='-1' prof_factor='0.597753' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='851' bci='7' reason='unloaded' action='reinterpret' index='145' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='0.564'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='509'/>
<call method='849' count='279' prof_factor='0.902337' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='266' stamp='0.609'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='14' compiler='C1' level='3' iicount='3056'/>
<call method='854' count='-1' prof_factor='0.522593' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='855' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='4096'/>
<call method='855' count='-1' prof_factor='0.522593' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='0.609'/>
</parse>
<parse_done nodes='365' live='360' memory='89736' stamp='0.609'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98440' stamp='0.609'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='0.609'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='0.609'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='0.609'>
<phase name='connectionGraph' nodes='421' live='256' stamp='0.609'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='0.609'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='0.609'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='0.609'>
<phase_done name='ccp' nodes='421' live='256' stamp='0.609'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='0.610'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='0.610'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='0.610'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='0.610'/>
</phase>
<phase_done name='optimizer' nodes='501' live='282' stamp='0.610'/>
</phase>
<phase name='matcher' nodes='501' live='282' stamp='0.610'>
<phase_done name='matcher' nodes='283' live='283' stamp='0.611'/>
</phase>
]]>
</fragment>
</compilation_log>
<compilation_log thread='5164'>
<start_compile_thread name='C1 CompilerThread3' thread='5164' process='10012' stamp='0.223'/>
<task compile_id='2' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.223'>
<phase name='buildIR' stamp='0.223'>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='807' name='append' return='807' arguments='728' flags='1' bytes='8' iicount='256'/>
<parse method='844'  stamp='0.223'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='8699'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='848' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='9736'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='424'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='477'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='2895'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='0.224'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='858' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' iicount='4090'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.224'/>
</parse>
<parse_done stamp='0.224'/>
</parse>
<parse_done stamp='0.224'/>
</parse>
<parse_done stamp='0.224'/>
</parse>
<phase name='optimize_blocks' stamp='0.224'>
<phase_done name='optimize_blocks' stamp='0.224'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.224'>
<phase_done name='rangeCheckElimination' stamp='0.224'/>
</phase>
<phase name='optimize_null_checks' stamp='0.224'>
<phase_done name='optimize_null_checks' stamp='0.224'/>
</phase>
<phase_done name='buildIR' stamp='0.224'/>
</phase>
<phase name='emit_lir' stamp='0.224'>
<phase name='lirGeneration' stamp='0.224'>
<phase_done name='lirGeneration' stamp='0.224'/>
</phase>
<phase name='linearScan' stamp='0.224'>
<phase_done name='linearScan' stamp='0.224'/>
</phase>
<phase_done name='emit_lir' stamp='0.224'/>
</phase>
<phase name='codeemit' stamp='0.224'>
<phase_done name='codeemit' stamp='0.224'/>
</phase>
<phase name='codeinstall' stamp='0.224'>
<phase_done name='codeinstall' stamp='0.262'/>
</phase>
<code_cache total_blobs='228' nmethods='2' adapters='151' free_code_cache='250585664'/>
<task_done success='1' nmsize='1432' count='258' inlined_bytes='86' stamp='0.262'/>
</task>
<task compile_id='8' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='2567' iicount='2567' level='3' stamp='0.262'>
<phase name='buildIR' stamp='0.262'>
<type id='733' name='int'/>
<type id='728' name='char'/>
<klass id='844' name='sun/nio/cs/ext/DoubleByte$Encoder' flags='9'/>
<method id='845' holder='844' name='encodeChar' return='733' arguments='728' flags='1' bytes='21' iicount='2567'/>
<parse method='845'  stamp='0.262'>
<parse_done stamp='0.262'/>
</parse>
<phase name='optimize_blocks' stamp='0.262'>
<phase_done name='optimize_blocks' stamp='0.262'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.262'>
<phase_done name='rangeCheckElimination' stamp='0.262'/>
</phase>
<phase name='optimize_null_checks' stamp='0.262'>
<phase_done name='optimize_null_checks' stamp='0.262'/>
</phase>
<phase_done name='buildIR' stamp='0.262'/>
</phase>
<phase name='emit_lir' stamp='0.262'>
<phase name='lirGeneration' stamp='0.262'>
<phase_done name='lirGeneration' stamp='0.262'/>
</phase>
<phase name='linearScan' stamp='0.262'>
<phase_done name='linearScan' stamp='0.262'/>
</phase>
<phase_done name='emit_lir' stamp='0.262'/>
</phase>
<phase name='codeemit' stamp='0.262'>
<phase_done name='codeemit' stamp='0.262'/>
</phase>
<phase name='codeinstall' stamp='0.262'>
<phase_done name='codeinstall' stamp='0.277'/>
</phase>
<code_cache total_blobs='232' nmethods='3' adapters='152' free_code_cache='250583424'/>
<task_done success='1' nmsize='432' count='2567' stamp='0.277'/>
</task>
<task compile_id='9' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='646' iicount='646' level='3' stamp='0.278'>
<phase name='buildIR' stamp='0.278'>
<klass id='752' name='java/lang/SecurityManager' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='844' holder='746' name='getSecurityManager' return='752' flags='9' bytes='4' iicount='649'/>
<parse method='844'  stamp='0.278'>
<parse_done stamp='0.278'/>
</parse>
<phase name='optimize_blocks' stamp='0.278'>
<phase_done name='optimize_blocks' stamp='0.278'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.278'>
<phase_done name='rangeCheckElimination' stamp='0.278'/>
</phase>
<phase name='optimize_null_checks' stamp='0.278'>
<phase_done name='optimize_null_checks' stamp='0.278'/>
</phase>
<phase_done name='buildIR' stamp='0.278'/>
</phase>
<phase name='emit_lir' stamp='0.278'>
<phase name='lirGeneration' stamp='0.278'>
<phase_done name='lirGeneration' stamp='0.278'/>
</phase>
<phase name='linearScan' stamp='0.278'>
<phase_done name='linearScan' stamp='0.278'/>
</phase>
<phase_done name='emit_lir' stamp='0.278'/>
</phase>
<phase name='codeemit' stamp='0.278'>
<phase_done name='codeemit' stamp='0.278'/>
</phase>
<phase name='codeinstall' stamp='0.278'>
<phase_done name='codeinstall' stamp='0.293'/>
</phase>
<code_cache total_blobs='236' nmethods='4' adapters='153' free_code_cache='250549568'/>
<task_done success='1' nmsize='304' count='665' stamp='0.293'/>
</task>
<task compile_id='6' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='387' iicount='387' level='1' stamp='0.293'>
<phase name='buildIR' stamp='0.293'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='844' holder='766' name='get' return='740' flags='1' bytes='5' iicount='387'/>
<parse method='844'  stamp='0.293'>
<parse_done stamp='0.293'/>
</parse>
<phase name='optimize_blocks' stamp='0.293'>
<phase_done name='optimize_blocks' stamp='0.293'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.293'>
<phase_done name='rangeCheckElimination' stamp='0.293'/>
</phase>
<phase name='optimize_null_checks' stamp='0.293'>
<phase_done name='optimize_null_checks' stamp='0.293'/>
</phase>
<phase_done name='buildIR' stamp='0.293'/>
</phase>
<phase name='emit_lir' stamp='0.293'>
<phase name='lirGeneration' stamp='0.293'>
<phase_done name='lirGeneration' stamp='0.293'/>
</phase>
<phase name='linearScan' stamp='0.293'>
<phase_done name='linearScan' stamp='0.293'/>
</phase>
<phase_done name='emit_lir' stamp='0.293'/>
</phase>
<phase name='codeemit' stamp='0.293'>
<phase_done name='codeemit' stamp='0.293'/>
</phase>
<phase name='codeinstall' stamp='0.293'>
<phase_done name='codeinstall' stamp='0.308'/>
</phase>
<code_cache total_blobs='237' nmethods='5' adapters='153' free_code_cache='250554624'/>
<task_done success='1' nmsize='272' count='387' stamp='0.308'/>
</task>
<task compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='7051' iicount='7051' level='2' stamp='0.309'>
<phase name='buildIR' stamp='0.309'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='7053'/>
<parse method='844'  stamp='0.309'>
<parse_done stamp='0.309'/>
</parse>
<phase name='optimize_blocks' stamp='0.309'>
<phase_done name='optimize_blocks' stamp='0.309'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.309'>
<phase_done name='rangeCheckElimination' stamp='0.309'/>
</phase>
<phase name='optimize_null_checks' stamp='0.309'>
<phase_done name='optimize_null_checks' stamp='0.309'/>
</phase>
<phase_done name='buildIR' stamp='0.309'/>
</phase>
<phase name='emit_lir' stamp='0.309'>
<phase name='lirGeneration' stamp='0.309'>
<phase_done name='lirGeneration' stamp='0.309'/>
</phase>
<phase name='linearScan' stamp='0.309'>
<phase_done name='linearScan' stamp='0.309'/>
</phase>
<phase_done name='emit_lir' stamp='0.309'/>
</phase>
<phase name='codeemit' stamp='0.309'>
<phase_done name='codeemit' stamp='0.309'/>
</phase>
<phase name='codeinstall' stamp='0.309'>
<phase_done name='codeinstall' stamp='0.322'/>
</phase>
<code_cache total_blobs='242' nmethods='6' adapters='154' free_code_cache='250546816'/>
<task_done success='1' nmsize='336' count='7065' stamp='0.322'/>
</task>
<task compile_id='11' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.323'>
<phase name='buildIR' stamp='0.323'>
<klass id='846' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='844' name='sun/instrument/TransformerManager' flags='1'/>
<method id='847' holder='844' name='getSnapshotTransformerList' return='846' flags='2' bytes='5' iicount='128'/>
<parse method='847'  stamp='0.323'>
<parse_done stamp='0.323'/>
</parse>
<phase name='optimize_blocks' stamp='0.323'>
<phase_done name='optimize_blocks' stamp='0.323'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.323'>
<phase_done name='rangeCheckElimination' stamp='0.323'/>
</phase>
<phase name='optimize_null_checks' stamp='0.323'>
<phase_done name='optimize_null_checks' stamp='0.323'/>
</phase>
<phase_done name='buildIR' stamp='0.323'/>
</phase>
<phase name='emit_lir' stamp='0.323'>
<phase name='lirGeneration' stamp='0.323'>
<phase_done name='lirGeneration' stamp='0.323'/>
</phase>
<phase name='linearScan' stamp='0.323'>
<phase_done name='linearScan' stamp='0.323'/>
</phase>
<phase_done name='emit_lir' stamp='0.323'/>
</phase>
<phase name='codeemit' stamp='0.323'>
<phase_done name='codeemit' stamp='0.323'/>
</phase>
<phase name='codeinstall' stamp='0.323'>
<phase_done name='codeinstall' stamp='0.339'/>
</phase>
<code_cache total_blobs='244' nmethods='7' adapters='154' free_code_cache='250556800'/>
<task_done success='1' nmsize='272' count='131' stamp='0.339'/>
</task>
<task compile_id='12' method='java/lang/Character toLowerCase (I)I' bytes='9' count='4736' iicount='4736' level='3' stamp='0.342'>
<phase name='buildIR' stamp='0.342'>
<type id='733' name='int'/>
<klass id='822' name='java/lang/Character' flags='17'/>
<method id='844' holder='822' name='toLowerCase' return='733' arguments='733' flags='9' bytes='9' iicount='4742'/>
<parse method='844'  stamp='0.342'>
<bc code='184' bci='1'/>
<klass id='847' name='java/lang/CharacterData' flags='1024'/>
<method id='848' holder='847' name='of' return='847' arguments='733' flags='24' bytes='120' iicount='4944'/>
<call method='848' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='850' holder='847' name='toLowerCase' return='733' arguments='733' flags='1024' bytes='0' iicount='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.394'/>
</parse>
<phase name='optimize_blocks' stamp='0.394'>
<phase_done name='optimize_blocks' stamp='0.394'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.394'>
<phase_done name='rangeCheckElimination' stamp='0.394'/>
</phase>
<phase name='optimize_null_checks' stamp='0.394'>
<phase_done name='optimize_null_checks' stamp='0.394'/>
</phase>
<phase_done name='buildIR' stamp='0.394'/>
</phase>
<phase name='emit_lir' stamp='0.394'>
<phase name='lirGeneration' stamp='0.394'>
<phase_done name='lirGeneration' stamp='0.394'/>
</phase>
<phase name='linearScan' stamp='0.394'>
<phase_done name='linearScan' stamp='0.394'/>
</phase>
<phase_done name='emit_lir' stamp='0.394'/>
</phase>
<phase name='codeemit' stamp='0.394'>
<phase_done name='codeemit' stamp='0.394'/>
</phase>
<phase name='codeinstall' stamp='0.394'>
<phase_done name='codeinstall' stamp='0.408'/>
</phase>
<code_cache total_blobs='257' nmethods='11' adapters='161' free_code_cache='250547136'/>
<task_done success='1' nmsize='568' count='4764' stamp='0.408'/>
</task>
<task compile_id='13' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='4764' iicount='4764' level='3' stamp='0.409'>
<phase name='buildIR' stamp='0.409'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='845' holder='844' name='toLowerCase' return='733' arguments='733' flags='0' bytes='39' iicount='4764'/>
<parse method='845'  stamp='0.409'>
<bc code='182' bci='4'/>
<method id='847' holder='844' name='getProperties' return='733' arguments='733' flags='0' bytes='11' iicount='4944'/>
<call method='847' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='847'>
<parse_done stamp='0.409'/>
</parse>
<parse_done stamp='0.409'/>
</parse>
<phase name='optimize_blocks' stamp='0.409'>
<phase_done name='optimize_blocks' stamp='0.409'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.409'>
<phase_done name='rangeCheckElimination' stamp='0.409'/>
</phase>
<phase name='optimize_null_checks' stamp='0.409'>
<phase_done name='optimize_null_checks' stamp='0.409'/>
</phase>
<phase_done name='buildIR' stamp='0.409'/>
</phase>
<phase name='emit_lir' stamp='0.409'>
<phase name='lirGeneration' stamp='0.409'>
<phase_done name='lirGeneration' stamp='0.409'/>
</phase>
<phase name='linearScan' stamp='0.409'>
<phase_done name='linearScan' stamp='0.409'/>
</phase>
<phase_done name='emit_lir' stamp='0.409'/>
</phase>
<phase name='codeemit' stamp='0.409'>
<phase_done name='codeemit' stamp='0.409'/>
</phase>
<phase name='codeinstall' stamp='0.409'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.423'/>
</phase>
<code_cache total_blobs='260' nmethods='12' adapters='163' free_code_cache='250544640'/>
<task_done success='1' nmsize='624' count='4764' inlined_bytes='11' stamp='0.423'/>
</task>
<task compile_id='14' method='java/lang/Math min (II)I' bytes='11' count='2959' iicount='2959' level='3' stamp='0.423'>
<phase name='buildIR' stamp='0.423'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='2959'/>
<parse method='845'  stamp='0.423'>
<parse_done stamp='0.423'/>
</parse>
<phase name='optimize_blocks' stamp='0.423'>
<phase_done name='optimize_blocks' stamp='0.423'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.423'>
<phase_done name='rangeCheckElimination' stamp='0.423'/>
</phase>
<phase name='optimize_null_checks' stamp='0.423'>
<phase_done name='optimize_null_checks' stamp='0.423'/>
</phase>
<phase_done name='buildIR' stamp='0.423'/>
</phase>
<phase name='emit_lir' stamp='0.423'>
<phase name='lirGeneration' stamp='0.423'>
<phase_done name='lirGeneration' stamp='0.423'/>
</phase>
<phase name='linearScan' stamp='0.423'>
<phase_done name='linearScan' stamp='0.423'/>
</phase>
<phase_done name='emit_lir' stamp='0.423'/>
</phase>
<phase name='codeemit' stamp='0.423'>
<phase_done name='codeemit' stamp='0.423'/>
</phase>
<phase name='codeinstall' stamp='0.423'>
<phase_done name='codeinstall' stamp='0.437'/>
</phase>
<code_cache total_blobs='262' nmethods='13' adapters='163' free_code_cache='250538240'/>
<task_done success='1' nmsize='400' count='2965' stamp='0.437'/>
</task>
<task compile_id='16' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='257' iicount='257' level='3' stamp='0.437'>
<phase name='buildIR' stamp='0.437'>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='substring' return='741' arguments='733 733' flags='1' bytes='79' iicount='257'/>
<parse method='844'  stamp='0.437'>
<bc code='183' bci='9'/>
<type id='735' name='void'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='833' name='[C' flags='1041'/>
<method id='848' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' iicount='1103'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.455'/>
</parse>
<phase name='optimize_blocks' stamp='0.455'>
<phase_done name='optimize_blocks' stamp='0.455'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.455'>
<phase_done name='rangeCheckElimination' stamp='0.455'/>
</phase>
<phase name='optimize_null_checks' stamp='0.455'>
<phase_done name='optimize_null_checks' stamp='0.455'/>
</phase>
<phase_done name='buildIR' stamp='0.455'/>
</phase>
<phase name='emit_lir' stamp='0.455'>
<phase name='lirGeneration' stamp='0.455'>
<phase_done name='lirGeneration' stamp='0.455'/>
</phase>
<phase name='linearScan' stamp='0.455'>
<phase_done name='linearScan' stamp='0.455'/>
</phase>
<phase_done name='emit_lir' stamp='0.455'/>
</phase>
<phase name='codeemit' stamp='0.455'>
<phase_done name='codeemit' stamp='0.455'/>
</phase>
<phase name='codeinstall' stamp='0.455'>
<phase_done name='codeinstall' stamp='0.490'/>
</phase>
<code_cache total_blobs='266' nmethods='16' adapters='163' free_code_cache='250526912'/>
<task_done success='1' nmsize='1176' count='257' stamp='0.490'/>
</task>
<task compile_id='18' method='java/lang/String getChars (II[CI)V' bytes='62' count='1161' iicount='1161' level='3' stamp='0.507'>
<phase name='buildIR' stamp='0.507'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' iicount='1161'/>
<parse method='844'  stamp='0.507'>
<bc code='183' bci='9'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='848' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='4096'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.507'/>
</parse>
<phase name='optimize_blocks' stamp='0.507'>
<phase_done name='optimize_blocks' stamp='0.507'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.507'>
<phase_done name='rangeCheckElimination' stamp='0.507'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done name='optimize_null_checks' stamp='0.507'/>
</phase>
<phase_done name='buildIR' stamp='0.508'/>
</phase>
<phase name='emit_lir' stamp='0.508'>
<phase name='lirGeneration' stamp='0.508'>
<phase_done name='lirGeneration' stamp='0.508'/>
</phase>
<phase name='linearScan' stamp='0.508'>
<phase_done name='linearScan' stamp='0.508'/>
</phase>
<phase_done name='emit_lir' stamp='0.508'/>
</phase>
<phase name='codeemit' stamp='0.508'>
<phase_done name='codeemit' stamp='0.508'/>
</phase>
<phase name='codeinstall' stamp='0.508'>
<phase_done name='codeinstall' stamp='0.527'/>
</phase>
<code_cache total_blobs='268' nmethods='18' adapters='165' free_code_cache='250533696'/>
<task_done success='1' nmsize='1080' count='1164' stamp='0.527'/>
</task>
<task compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='533' iicount='533' level='3' stamp='0.527'>
<phase name='buildIR' stamp='0.527'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741' flags='1' bytes='7' iicount='553'/>
<parse method='844'  stamp='0.527'>
<bc code='182' bci='3'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='1052'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.528'/>
</parse>
<phase name='optimize_blocks' stamp='0.528'>
<phase_done name='optimize_blocks' stamp='0.528'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.528'>
<phase_done name='rangeCheckElimination' stamp='0.528'/>
</phase>
<phase name='optimize_null_checks' stamp='0.528'>
<phase_done name='optimize_null_checks' stamp='0.528'/>
</phase>
<phase_done name='buildIR' stamp='0.528'/>
</phase>
<phase name='emit_lir' stamp='0.528'>
<phase name='lirGeneration' stamp='0.528'>
<phase_done name='lirGeneration' stamp='0.528'/>
</phase>
<phase name='linearScan' stamp='0.528'>
<phase_done name='linearScan' stamp='0.528'/>
</phase>
<phase_done name='emit_lir' stamp='0.528'/>
</phase>
<phase name='codeemit' stamp='0.528'>
<phase_done name='codeemit' stamp='0.528'/>
</phase>
<phase name='codeinstall' stamp='0.528'>
<phase_done name='codeinstall' stamp='0.545'/>
</phase>
<code_cache total_blobs='272' nmethods='19' adapters='168' free_code_cache='250530880'/>
<task_done success='1' nmsize='520' count='585' stamp='0.545'/>
</task>
<task compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1061' backedge_count='1043' iicount='1061' level='3' stamp='0.545'>
<phase name='buildIR' stamp='0.545'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='1061'/>
<parse method='844'  stamp='0.545'>
<parse_done stamp='0.545'/>
</parse>
<phase name='optimize_blocks' stamp='0.545'>
<phase_done name='optimize_blocks' stamp='0.545'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.545'>
<phase_done name='rangeCheckElimination' stamp='0.545'/>
</phase>
<phase name='optimize_null_checks' stamp='0.545'>
<phase_done name='optimize_null_checks' stamp='0.545'/>
</phase>
<phase_done name='buildIR' stamp='0.545'/>
</phase>
<phase name='emit_lir' stamp='0.545'>
<phase name='lirGeneration' stamp='0.545'>
<phase_done name='lirGeneration' stamp='0.545'/>
</phase>
<phase name='linearScan' stamp='0.545'>
<phase_done name='linearScan' stamp='0.545'/>
</phase>
<phase_done name='emit_lir' stamp='0.545'/>
</phase>
<phase name='codeemit' stamp='0.545'>
<phase_done name='codeemit' stamp='0.545'/>
</phase>
<phase name='codeinstall' stamp='0.545'>
<phase_done name='codeinstall' stamp='0.564'/>
</phase>
<code_cache total_blobs='276' nmethods='20' adapters='171' free_code_cache='250527488'/>
<task_done success='1' nmsize='816' count='1061' backedge_count='1043' stamp='0.564'/>
</task>
<task compile_id='22' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='271' backedge_count='10254' iicount='271' level='3' stamp='0.564'>
<phase name='buildIR' stamp='0.564'>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='836' name='[B' flags='1041'/>
<klass id='844' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='845' holder='844' name='encode' return='733' arguments='833 733 733 836' flags='1' bytes='359' iicount='271'/>
<parse method='845'  stamp='0.564'>
<bc code='184' bci='14'/>
<klass id='847' name='java/lang/Math' flags='17'/>
<method id='848' holder='847' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='14' compiler='C1' level='3' iicount='3053'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.564'/>
</parse>
<bc code='184' bci='139'/>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='822' name='java/lang/Character' flags='17'/>
<method id='850' holder='822' name='isSurrogate' return='727' arguments='728' flags='9' bytes='18' iicount='1'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.564'/>
</parse>
<bc code='183' bci='157'/>
<type id='735' name='void'/>
<klass id='852' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='853' holder='852' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='854' holder='852' name='parse' return='733' arguments='728 833 733 733' unloaded='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='856' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='855' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='857' holder='855' name='malformedInputAction' return='856' flags='1' bytes='5' iicount='1'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='0.564'/>
</parse>
<parse_done stamp='0.564'/>
</parse>
<phase name='optimize_blocks' stamp='0.564'>
<phase_done name='optimize_blocks' stamp='0.564'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.564'>
<phase_done name='rangeCheckElimination' stamp='0.564'/>
</phase>
<phase name='optimize_null_checks' stamp='0.564'>
<phase_done name='optimize_null_checks' stamp='0.564'/>
</phase>
<phase_done name='buildIR' stamp='0.564'/>
</phase>
<phase name='emit_lir' stamp='0.565'>
<phase name='lirGeneration' stamp='0.565'>
<phase_done name='lirGeneration' stamp='0.565'/>
</phase>
<phase name='linearScan' stamp='0.565'>
<phase_done name='linearScan' stamp='0.565'/>
</phase>
<phase_done name='emit_lir' stamp='0.565'/>
</phase>
<phase name='codeemit' stamp='0.565'>
<phase_done name='codeemit' stamp='0.565'/>
</phase>
<phase name='codeinstall' stamp='0.565'>
<phase_done name='codeinstall' stamp='0.609'/>
</phase>
<code_cache total_blobs='278' nmethods='22' adapters='171' free_code_cache='250521280'/>
<task_done success='1' nmsize='2840' count='271' backedge_count='10254' inlined_bytes='34' stamp='0.609'/>
</task>
<fragment>
<![CDATA[
<task compile_id='27' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='168' backedge_count='8235' iicount='168' level='3' stamp='0.609'>
<phase name='buildIR' stamp='0.609'>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='normalize' return='741' arguments='741 733 733' flags='2' bytes='231' iicount='168'/>
<parse method='845'  stamp='0.609'>
<bc code='183' bci='24'/>
<type id='735' name='void'/>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<method id='847' holder='806' name='&lt;init&gt;' return='735' arguments='733' flags='1' bytes='6' iicount='246'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='849' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='628'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='851' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='10' compiler='C1' level='2' iicount='7352'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.609'/>
</parse>
<parse_done stamp='0.609'/>
</parse>
<parse_done stamp='0.609'/>
</parse>
<bc code='183' bci='38'/>
<method id='853' holder='844' name='normalizePrefix' return='733' arguments='741 733 806' flags='2' bytes='132' iicount='168'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='54'/>
<method id='855' holder='741' name='substring' return='741' arguments='733 733' flags='1' bytes='79' compile_id='16' compiler='C1' level='3' iicount='277'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='57'/>
<method id='857' holder='806' name='append' return='806' arguments='741' flags='33' bytes='13' iicount='225'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='7'/>
<method id='859' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='1106'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.609'/>
</parse>
<bc code='182' bci='73'/>
<type id='728' name='char'/>
<method id='861' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' compile_id='5' compiler='C2' level='4' iicount='111033'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='18'/>
<klass id='863' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='864' holder='863' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.609'/>
</parse>
<bc code='183' bci='81'/>
<type id='727' name='boolean'/>
<method id='865' holder='844' name='isSlash' return='727' arguments='728' flags='2' bytes='18' compile_id='26' compiler='C2' level='4' iicount='9542'/>
<call method='865' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<parse_done stamp='0.609'/>
</parse>
<bc code='182' bci='97'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='18'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.609'/>
</parse>
<bc code='183' bci='100'/>
<call method='865' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<parse_done stamp='0.609'/>
</parse>
<bc code='182' bci='120'/>
<method id='867' holder='806' name='length' return='733' flags='33' bytes='5' iicount='5'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='0.609'/>
</parse>
<bc code='182' bci='134'/>
<method id='869' holder='806' name='charAt' return='728' arguments='733' flags='33' bytes='28' iicount='1'/>
<call method='869' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<bc code='183' bci='17'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.610'/>
</parse>
<bc code='182' bci='146'/>
<method id='871' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' iicount='8571'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='7'/>
<method id='873' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='8842'/>
<call method='873' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<method id='875' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='1' compiler='C2' level='4' iicount='9799'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='17'/>
<method id='877' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='445'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='879' name='java/util/Arrays' flags='1'/>
<method id='880' holder='879' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='509'/>
<call method='880' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='880'>
<bc code='184' bci='11'/>
<klass id='882' name='java/lang/Math' flags='17'/>
<method id='883' holder='882' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='14' compiler='C1' level='3' iicount='3066'/>
<call method='883' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='883'>
<parse_done stamp='0.610'/>
</parse>
<bc code='184' bci='14'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='885' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='7' compile_kind='c2n' level='0' iicount='4096'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<bc code='182' bci='162'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='7'/>
<call method='873' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='17'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='880' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='880'>
<bc code='184' bci='11'/>
<call method='883' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='883'>
<parse_done stamp='0.610'/>
</parse>
<bc code='184' bci='14'/>
<call method='885' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<parse_done stamp='0.610'/>
</parse>
<bc code='182' bci='179'/>
<call method='869' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<bc code='183' bci='17'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.610'/>
</parse>
<bc code='183' bci='182'/>
<call method='865' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<parse_done stamp='0.610'/>
</parse>
<bc code='182' bci='192'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='7'/>
<call method='873' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='873'>
<bc code='183' bci='7'/>
<call method='875' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<bc code='183' bci='17'/>
<call method='877' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<call method='880' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='880'>
<bc code='184' bci='11'/>
<call method='883' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='883'>
<parse_done stamp='0.611'/>
</parse>
]]>
</fragment>
</compilation_log>
<compilation_log thread='14996'>
<start_compile_thread name='C2 CompilerThread1' thread='14996' process='10012' stamp='0.222'/>
<task compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='12888' backedge_count='9875' iicount='12888' stamp='0.339'>
<phase name='parse' nodes='3' live='3' stamp='0.339'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='12888'/>
<parse method='844' uses='12888' stamp='0.340'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='12619' not_taken='269' cnt='12888' prob='0.979128'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='12619' cnt='12619' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='12359' not_taken='260' cnt='12619' prob='0.979396'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='35' not_taken='8849' cnt='8884' prob='0.00393967'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='8624' not_taken='225' cnt='8849' prob='0.974573'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='35' not_taken='8849' cnt='8624' prob='0.00393967'/>
<parse_done nodes='272' live='258' memory='71384' stamp='0.340'/>
</parse>
<phase_done name='parse' nodes='273' live='183' stamp='0.340'/>
</phase>
<phase name='optimizer' nodes='273' live='183' stamp='0.340'>
<phase name='idealLoop' nodes='277' live='171' stamp='0.340'>
<loop_tree>
<loop idx='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='302' live='151' stamp='0.340'/>
</phase>
<phase name='idealLoop' nodes='302' live='151' stamp='0.340'>
<loop_tree>
<loop idx='461' inner_loop='1' main_loop='461' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='517' live='264' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='517' live='264' stamp='0.341'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='569' live='300' stamp='0.341'/>
</phase>
<phase name='ccp' nodes='569' live='300' stamp='0.341'>
<phase_done name='ccp' nodes='569' live='300' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='569' live='299' stamp='0.341'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='572' live='278' stamp='0.341'/>
</phase>
<phase name='idealLoop' nodes='572' live='278' stamp='0.341'>
<loop_tree>
<loop idx='380' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='549' inner_loop='1' main_loop='549' >
</loop>
<loop idx='327' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='575' live='275' stamp='0.341'/>
</phase>
<phase_done name='optimizer' nodes='664' live='265' stamp='0.342'/>
</phase>
<phase name='matcher' nodes='664' live='265' stamp='0.342'>
<phase_done name='matcher' nodes='220' live='220' stamp='0.342'/>
</phase>
<phase name='regalloc' nodes='300' live='297' stamp='0.343'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='331' live='320' stamp='0.343'/>
</phase>
<phase name='output' nodes='331' live='320' stamp='0.343'>
<phase_done name='output' nodes='356' live='334' stamp='0.362'/>
</phase>
<code_cache total_blobs='257' nmethods='10' adapters='161' free_code_cache='250542976'/>
<task_done success='1' nmsize='568' count='12897' backedge_count='9928' stamp='0.394'/>
</task>
<task compile_id='17' method='java/lang/String length ()I' bytes='6' count='29060' iicount='29060' stamp='0.437'>
<phase name='parse' nodes='3' live='3' stamp='0.437'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='length' return='733' flags='1' bytes='6' iicount='29060'/>
<parse method='844' uses='29060' stamp='0.437'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='0.437'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.437'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.437'>
<phase name='ccp' nodes='45' live='27' stamp='0.437'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.437'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.437'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.438'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.438'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.438'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.438'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.438'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.438'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.438'>
<phase_done name='output' nodes='38' live='37' stamp='0.455'/>
</phase>
<code_cache total_blobs='266' nmethods='15' adapters='163' free_code_cache='250524032'/>
<task_done success='1' nmsize='120' count='29070' stamp='0.468'/>
</task>
<task compile_id='26' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='9491' iicount='9491' stamp='0.564'>
<phase name='parse' nodes='3' live='3' stamp='0.564'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='isSlash' return='727' arguments='728' flags='2' bytes='18' iicount='9493'/>
<parse method='845' uses='9493' stamp='0.564'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='697' not_taken='8796' cnt='9493' prob='0.0734225'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='8379' not_taken='418' cnt='8797' prob='0.952484'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.564'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.564'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.564'>
<phase name='ccp' nodes='48' live='27' stamp='0.564'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.564'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.564'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.564'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.564'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.564'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.564'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.564'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.564'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.564'>
<phase_done name='output' nodes='46' live='43' stamp='0.564'/>
</phase>
<code_cache total_blobs='278' nmethods='21' adapters='171' free_code_cache='250521472'/>
<task_done success='1' nmsize='120' count='9542' stamp='0.579'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.635'/>
</hotspot_log>
